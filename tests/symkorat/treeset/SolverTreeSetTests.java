package symkorat.treeset;

import static org.junit.Assert.assertEquals;

import org.junit.Test;

import symkorat.SymKorat;

public class SolverTreeSetTests {
	
	private SymKorat symKorat = new SymKorat("symkorat.examples.treeset.TreeSet", "8");


    @Test
    public void TreeSetSolverTest0() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,3,-1,4,5,1,-1,-1,-1,-1,-1,0,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,3,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,4,-1,-1,-1,0,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,4,0,2,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,-1,1,-1,-1,-1,-1,-1,5,3,2,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,3,-1,-1,4,5,2,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,0,0,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,-1,1,-1,-1,-1,-1,-1,3,5,2,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest9() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,-1,3,-1,-1,4,0,-1,-1,0,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest10() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,-1,3,-1,-1,4,-1,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest11() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,-1,3,-1,-1,4,0,3,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest12() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,-1,-1,-1,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest13() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest14() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,-1,-1,-1,-1,5,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest15() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest16() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,-1,3,-1,-1,0,4,4,-1,0,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest17() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,-1,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,0,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest18() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,3,-1,-1,0,4,2,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest19() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest20() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,4,1,-1,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest21() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,-1,-1,-1,5,-1,1,-1,-1,-1,-1,-1,6,4,3,-1,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest22() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,0,-1,3,4,1,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest23() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,0,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest24() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,-1,4,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest25() {
        assertEquals(false, symKorat.isSat("1,1,-1,0,2,-1,-1,2,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest26() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,-1,-1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest27() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,0,3,1,-1,0,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest28() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,-1,3,-1,-1,4,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest29() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,-1,3,-1,-1,4,-1,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest30() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest31() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,-1,4,-1,5,3,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest32() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,-1,3,-1,-1,3,4,-1,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest33() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,4,1,-1,5,6,3,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest34() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest35() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,0,-1,-1,0,1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest36() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,4,-1,5,6,2,-1,-1,-1,-1,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest37() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,4,5,6,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest38() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,4,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest39() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,4,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest40() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,0,-1,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest41() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,-1,3,-1,-1,4,5,6,-1,0,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest42() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,-1,3,-1,-1,4,-1,-1,-1,0,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest43() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,0,3,-1,-1,1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest44() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,4,1,-1,-1,-1,-1,-1,5,6,2,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest45() {
        assertEquals(true, symKorat.isSat("1,1,-1,0,2,0,-1,0,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest46() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,2,-1,-1,4,0,2,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest47() {
        assertEquals(false, symKorat.isSat("1,1,-1,1,2,-1,-1,3,-1,1,-1,4,5,2,-1,0,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest48() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,4,5,4,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest49() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,4,5,-1,-1,0,6,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest50() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,-1,-1,-1,-1,4,-1,1,-1,5,6,3,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest51() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,0,4,-1,4,-1,1,-1,5,2,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest52() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,0,3,3,-1,0,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest53() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,2,-1,-1,0,3,1,-1,0,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest54() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,-1,3,-1,-1,4,-1,-1,-1,0,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest55() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,0,3,-1,-1,3,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest56() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,0,3,-1,-1,2,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest57() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,-1,4,-1,-1,4,1,-1,5,2,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest58() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,4,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest59() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,0,-1,-1,0,2,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest60() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,4,-1,-1,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest61() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest62() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,0,4,3,-1,0,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest63() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,2,-1,4,5,2,-1,-1,-1,-1,-1,0,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest64() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,4,-1,-1,0,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest65() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,0,4,-1,-1,4,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest66() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,1,-1,-1,-1,-1,-1,5,6,2,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest67() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest68() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,0,-1,3,4,1,-1,-1,-1,-1,-1,0,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest69() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,-1,3,4,-1,5,4,2,-1,-1,-1,-1,-1,0,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest70() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,-1,3,-1,-1,4,5,-1,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest71() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,3,-1,-1,-1,-1,-1,5,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest72() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest73() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,2,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest74() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,0,-1,4,5,2,-1,0,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest75() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,4,5,3,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest76() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest77() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest78() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest79() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,-1,3,-1,-1,0,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest80() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,3,-1,-1,2,1,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest81() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,3,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest82() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,3,-1,4,2,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest83() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,-1,3,-1,-1,0,4,2,-1,0,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest84() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,3,-1,-1,4,5,2,-1,-1,-1,-1,-1,0,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest85() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,0,3,-1,-1,4,5,2,-1,-1,-1,-1,-1,0,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest86() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,4,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest87() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest88() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,2,-1,-1,3,0,1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest89() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest90() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,3,-1,-1,4,0,2,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest91() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest92() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,4,-1,-1,-1,0,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest93() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,1,-1,-1,4,0,2,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest94() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,1,-1,3,4,1,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest95() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,4,5,4,-1,-1,-1,-1,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest96() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,0,-1,-1,-1,-1,-1,0,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest97() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,-1,-1,-1,-1,0,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest98() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,-1,3,-1,-1,0,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest99() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,1,3,-1,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest100() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest101() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,-1,-1,-1,-1,0,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest102() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest103() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,4,0,5,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest104() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,3,-1,2,-1,1,-1,0,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest105() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,-1,1,-1,5,6,3,-1,0,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest106() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,0,2,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest107() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,1,4,-1,-1,0,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest108() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,0,4,0,-1,0,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest109() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,4,5,2,-1,-1,-1,-1,-1,0,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest110() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,4,-1,5,4,2,-1,0,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest111() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,1,-1,4,5,2,-1,-1,-1,-1,-1,0,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest112() {
        assertEquals(false, symKorat.isSat("1,1,-1,1,2,-1,-1,3,-1,1,-1,4,5,2,-1,-1,-1,-1,-1,0,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest113() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,4,5,5,-1,-1,-1,-1,-1,0,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest114() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,0,4,-1,-1,5,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest115() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest116() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,-1,3,-1,-1,4,-1,-1,-1,0,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest117() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,2,-1,-1,0,3,1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest118() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,2,3,-1,-1,0,4,2,-1,0,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest119() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,4,1,-1,2,5,3,-1,0,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest120() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,7,3,-1,0,-1,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest121() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,3,5,2,-1,0,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest122() {
        assertEquals(false, symKorat.isSat("1,1,-1,1,2,-1,-1,-1,3,1,-1,4,5,2,-1,-1,-1,-1,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest123() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,-1,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,6,7,3,-1,-1,-1,-1,-1,-1,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest124() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,-1,3,4,-1,5,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest125() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest126() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,4,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest127() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,5,0,2,-1,6,-1,-1,-1,0,0,3,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest128() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,5,0,2,-1,6,-1,-1,-1,0,0,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest129() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,6,0,2,-1,7,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest130() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,5,0,2,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest131() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,6,7,1,-1,8,0,2,-1,0,0,-1,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest132() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,0,2,-1,0,8,-1,-1,1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest133() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,6,0,2,-1,5,0,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest134() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,6,-1,7,0,2,-1,8,0,-1,-1,-1,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest135() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,4,-1,5,0,2,-1,6,0,2,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest136() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,6,0,2,-1,7,8,2,-1,-1,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest137() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,3,-1,5,0,2,-1,6,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest138() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,1,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest139() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,0,-1,-1,-1,6,7,2,-1,0,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest140() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,7,-1,-1,0,0,-1,-1,8,4,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest141() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,3,-1,-1,7,8,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest142() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,0,-1,-1,-1,0,6,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest143() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,2,-1,-1,-1,6,7,2,-1,8,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest144() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,1,-1,-1,6,7,2,-1,8,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest145() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,7,0,2,-1,0,0,3,-1,0,0,-1,-1,1,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest146() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,4,5,1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest147() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,4,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest148() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,0,2,-1,5,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest149() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,4,-1,-1,-1,6,0,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest150() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,7,-1,-1,0,0,5,-1,4,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest151() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,5,-1,7,0,2,-1,0,0,-1,-1,-1,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest152() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,7,0,2,-1,0,0,-1,-1,6,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest153() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,8,0,2,-1,0,0,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest154() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,8,0,2,-1,0,0,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest155() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,7,0,2,-1,0,8,-1,-1,5,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest156() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,6,0,1,-1,7,0,2,-1,0,8,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest157() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,0,-1,-1,-1,6,0,2,-1,7,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest158() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,6,0,2,-1,7,3,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest159() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,0,2,-1,6,5,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest160() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,0,2,-1,6,7,2,-1,0,0,3,-1,4,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest161() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,4,5,3,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest162() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,4,5,2,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest163() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,3,-1,5,6,2,-1,0,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest164() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,2,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest165() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,0,4,-1,3,6,2,-1,0,0,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest166() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,7,8,2,-1,0,0,-1,-1,-1,8,-1,-1,0,0,4,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest167() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,7,8,2,-1,0,0,-1,-1,-1,7,-1,-1,0,0,4,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest168() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,3,-1,7,8,2,-1,0,0,-1,-1,-1,0,-1,-1,0,0,4,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest169() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,0,-1,7,8,2,-1,0,0,-1,-1,-1,0,-1,-1,0,0,4,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest170() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,7,6,2,-1,0,8,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest171() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,0,-1,-1,-1,6,7,2,-1,0,8,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest172() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,-1,-1,-1,0,0,5,-1,4,7,2,-1,8,0,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest173() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,1,-1,-1,-1,6,7,2,-1,8,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest174() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,5,0,2,-1,6,-1,-1,-1,0,0,3,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest175() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,0,2,-1,0,0,-1,-1,0,7,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest176() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,3,-1,-1,6,0,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest177() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,4,-1,-1,7,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest178() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,2,-1,-1,7,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest179() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,8,0,2,-1,0,0,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest180() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,6,-1,8,0,2,-1,0,0,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest181() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,-1,-1,-1,6,0,2,-1,0,7,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest182() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,0,6,-1,-1,7,0,2,-1,0,8,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest183() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,7,0,2,-1,0,8,-1,-1,-1,8,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest184() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,6,-1,7,0,2,-1,0,8,-1,-1,-1,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest185() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,-1,-1,7,0,2,-1,6,0,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest186() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,5,-1,-1,7,0,2,-1,8,0,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest187() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,0,2,-1,6,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest188() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,0,0,3,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest189() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,6,7,2,-1,0,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest190() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,-1,-1,-1,0,0,-1,-1,7,4,2,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest191() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,8,2,-1,0,0,-1,-1,0,8,-1,-1,0,0,4,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest192() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,7,8,2,-1,0,0,-1,-1,-1,1,-1,-1,0,0,4,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest193() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,7,8,2,-1,0,0,-1,-1,-1,0,-1,-1,0,0,4,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest194() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,2,-1,-1,-1,6,7,2,-1,0,8,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest195() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,7,0,-1,-1,0,0,3,-1,0,0,-1,-1,-1,2,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest196() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,4,3,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest197() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,2,-1,5,0,2,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest198() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,3,-1,-1,-1,6,0,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest199() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,0,-1,-1,-1,6,0,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest200() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,0,2,-1,0,0,-1,-1,0,8,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest201() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,7,0,2,-1,0,0,-1,-1,-1,2,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest202() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,4,-1,-1,-1,-1,-1,-1,-1,7,0,2,-1,0,8,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest203() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,7,0,2,-1,8,0,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest204() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,0,2,-1,8,0,-1,-1,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest205() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,0,2,-1,6,3,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest206() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,0,2,-1,6,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest207() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,0,2,-1,6,0,2,-1,0,0,3,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest208() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,5,6,2,-1,7,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest209() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,5,-1,-1,-1,6,7,2,-1,0,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest210() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,-1,-1,-1,6,7,2,-1,0,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest211() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,3,-1,-1,-1,6,7,2,-1,0,8,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest212() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,4,-1,5,6,2,-1,7,0,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest213() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,6,7,2,-1,8,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest214() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,5,0,2,-1,6,-1,-1,-1,0,0,3,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest215() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,0,-1,-1,-1,6,0,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest216() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,7,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest217() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,0,2,-1,0,0,-1,-1,1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest218() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,7,0,2,-1,0,0,-1,-1,-1,5,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest219() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,4,-1,7,0,2,-1,0,0,-1,-1,-1,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest220() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,0,-1,5,0,2,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest221() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,0,2,-1,0,8,-1,-1,0,4,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest222() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,0,2,-1,0,8,-1,-1,0,1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest223() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,3,-1,-1,-1,6,0,2,-1,0,7,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest224() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,5,-1,7,0,2,-1,0,8,-1,-1,-1,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest225() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,4,-1,-1,-1,-1,-1,-1,-1,7,0,2,-1,8,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest226() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,0,2,-1,8,0,-1,-1,6,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest227() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,7,0,2,-1,8,0,-1,-1,-1,3,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest228() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,7,0,2,-1,8,0,-1,-1,2,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest229() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,6,0,1,-1,7,0,2,-1,8,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest230() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,6,0,2,-1,7,0,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest231() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,0,2,-1,6,0,-1,-1,0,0,3,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest232() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,0,2,-1,6,0,2,-1,0,0,3,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest233() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,0,-1,5,0,2,-1,6,0,2,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest234() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,0,2,-1,6,7,4,-1,0,0,3,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest235() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,5,6,2,-1,7,-1,-1,-1,0,0,3,-1,0,0,-1,-1,8,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest236() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,4,-1,-1,7,8,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest237() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,7,4,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest238() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,0,-1,-1,-1,6,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest239() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,7,6,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest240() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,7,0,1,-1,0,0,3,-1,0,0,-1,-1,-1,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest241() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,7,0,0,-1,0,0,3,-1,0,0,-1,-1,-1,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest242() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,4,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest243() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,4,2,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest244() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,4,1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest245() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,6,0,2,-1,5,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest246() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,5,0,2,-1,6,-1,-1,-1,0,0,3,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest247() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,5,0,2,-1,6,-1,-1,-1,0,0,3,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest248() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,0,-1,-1,-1,6,0,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest249() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,7,0,2,-1,0,0,-1,-1,-1,3,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest250() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,6,0,1,-1,0,0,-1,-1,7,0,2,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest251() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,8,0,2,-1,0,0,-1,-1,2,0,-1,-1,-1,-1,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest252() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,4,-1,-1,-1,-1,-1,-1,8,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest253() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,-1,-1,-1,-1,-1,-1,-1,7,0,2,-1,0,4,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest254() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,0,2,-1,0,8,-1,-1,7,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest255() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,6,-1,-1,7,0,2,-1,0,8,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest256() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,5,0,2,-1,0,6,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest257() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,2,-1,-1,6,0,2,-1,7,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest258() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,5,-1,-1,-1,6,0,2,-1,7,8,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest259() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,5,0,2,-1,6,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest260() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,0,3,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest261() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,4,-1,-1,-1,-1,-1,-1,-1,7,8,2,-1,0,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest262() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,7,-1,7,8,2,-1,0,0,-1,-1,-1,0,-1,-1,0,0,4,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest263() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,1,-1,-1,-1,6,7,2,-1,0,8,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest264() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,0,4,-1,3,6,2,-1,7,0,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest265() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,5,0,2,-1,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest266() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,-1,-1,-1,-1,-1,-1,-1,7,0,2,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest267() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,0,2,-1,0,0,-1,-1,0,5,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest268() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,0,2,-1,0,0,-1,-1,8,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest269() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,5,-1,-1,6,0,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest270() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,3,1,-1,0,5,-1,-1,6,0,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest271() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,6,0,2,-1,7,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest272() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,6,0,1,-1,7,0,2,-1,8,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest273() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,0,2,-1,6,0,3,-1,0,0,3,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest274() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,0,2,-1,6,0,2,-1,0,0,3,-1,2,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest275() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,0,2,-1,6,7,7,-1,0,0,3,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest276() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,0,0,3,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest277() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,3,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest278() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,4,-1,-1,-1,6,7,2,-1,0,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest279() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,6,-1,-1,-1,0,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest280() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,3,-1,-1,-1,6,7,2,-1,0,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest281() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,6,0,1,-1,7,8,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest282() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,6,7,2,-1,0,5,-1,-1,-1,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest283() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,4,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest284() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,6,-1,-1,-1,7,0,2,-1,0,8,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest285() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,0,2,-1,0,8,-1,-1,0,2,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest286() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,2,-1,-1,-1,6,0,2,-1,7,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest287() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,-1,-1,-1,6,0,2,-1,7,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest288() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,0,-1,-1,6,0,2,-1,7,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest289() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,1,-1,-1,7,0,2,-1,8,0,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest290() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,7,0,2,-1,8,0,-1,-1,3,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest291() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,3,-1,-1,-1,6,0,2,-1,7,8,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest292() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,7,0,2,-1,6,8,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest293() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,5,-1,-1,6,0,2,-1,7,8,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest294() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,6,0,2,-1,7,5,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest295() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,5,6,2,-1,0,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest296() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,-1,-1,-1,0,0,5,-1,4,8,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest297() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,8,2,-1,0,0,-1,-1,6,-1,-1,-1,0,0,4,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest298() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,6,-1,-1,7,8,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest299() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,6,0,1,-1,7,8,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest300() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,0,-1,-1,6,3,2,-1,0,7,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest301() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,4,-1,-1,6,7,2,-1,0,8,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest302() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,-1,-1,-1,-1,-1,-1,-1,7,8,2,-1,4,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest303() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,4,-1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest304() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,0,-1,0,5,2,-1,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest305() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,0,6,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest306() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,7,2,-1,0,0,-1,-1,5,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest307() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,0,6,-1,-1,0,7,2,-1,0,8,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest308() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,4,-1,-1,0,7,2,-1,0,8,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest309() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,2,-1,6,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest310() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,-1,-1,-1,0,0,5,-1,0,4,2,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest311() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,7,2,-1,8,0,-1,-1,0,1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest312() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,2,-1,6,7,2,-1,0,0,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest313() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,4,2,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest314() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,5,6,2,-1,7,-1,-1,-1,0,0,-1,-1,0,0,3,-1,4,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest315() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,5,6,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest316() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,4,-1,-1,-1,6,7,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest317() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,4,-1,-1,-1,-1,-1,-1,7,8,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest318() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,3,-1,5,6,2,-1,0,7,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest319() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,3,-1,-1,-1,6,7,2,-1,0,8,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest320() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,0,-1,5,6,2,-1,7,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest321() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,0,4,3,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest322() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,0,5,2,-1,6,-1,-1,-1,0,0,3,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest323() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,0,5,2,-1,6,-1,-1,-1,0,0,3,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest324() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,1,-1,-1,-1,0,6,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest325() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,4,-1,-1,-1,-1,-1,-1,0,7,2,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest326() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,6,7,-1,-1,0,0,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest327() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,6,7,-1,-1,0,8,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest328() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,7,2,-1,0,0,-1,-1,7,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest329() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,6,-1,-1,-1,0,7,2,-1,0,8,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest330() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,1,-1,-1,0,7,2,-1,0,8,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest331() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,7,2,-1,0,8,-1,-1,-1,8,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest332() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,7,2,-1,0,8,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest333() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,0,6,2,-1,7,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest334() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,2,-1,-1,-1,0,6,2,-1,7,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest335() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,7,2,-1,8,0,-1,-1,0,2,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest336() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,4,-1,-1,0,6,2,-1,7,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest337() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,0,8,2,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest338() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,7,2,-1,8,0,-1,-1,-1,3,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest339() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,0,-1,0,7,2,-1,8,0,-1,-1,-1,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest340() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,4,-1,0,5,2,-1,6,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest341() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest342() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,0,-1,5,6,2,-1,0,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest343() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,6,7,2,-1,8,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest344() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,2,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest345() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,5,6,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest346() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,2,-1,-1,-1,6,7,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest347() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,1,-1,-1,-1,6,7,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest348() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,0,-1,-1,-1,6,7,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest349() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,7,8,2,-1,0,0,-1,-1,-1,6,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest350() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,0,-1,-1,6,7,2,-1,0,8,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest351() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,4,-1,5,6,2,-1,0,7,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest352() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,3,-1,-1,-1,6,7,2,-1,8,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest353() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,0,4,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest354() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,0,6,2,-1,7,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest355() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,2,-1,0,5,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest356() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,0,-1,-1,-1,0,6,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest357() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,0,-1,-1,-1,0,6,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest358() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,-1,-1,-1,0,0,5,-1,0,4,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest359() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,6,-1,-1,-1,0,7,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest360() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,7,2,-1,0,0,-1,-1,0,6,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest361() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,7,-1,-1,-1,-1,-1,-1,0,8,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest362() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,0,8,2,-1,0,0,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest363() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,0,-1,-1,-1,0,6,2,-1,0,7,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest364() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,7,2,-1,0,8,-1,-1,7,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest365() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,3,-1,-1,0,6,2,-1,7,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest366() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,1,-1,-1,0,7,2,-1,8,0,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest367() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,7,2,-1,8,0,-1,-1,1,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest368() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,7,2,-1,8,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest369() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,0,1,-1,-1,-1,-1,-1,0,8,2,-1,4,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest370() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,2,-1,0,5,2,-1,6,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest371() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,2,-1,6,0,2,-1,0,0,3,-1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest372() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,2,-1,6,0,2,-1,0,0,3,-1,3,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest373() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,2,-1,6,7,2,-1,0,0,3,-1,3,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest374() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,3,-1,-1,4,5,2,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest375() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,5,6,2,-1,7,-1,-1,-1,0,0,-1,-1,0,0,3,-1,8,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest376() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest377() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,7,8,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest378() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,-1,-1,-1,6,7,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest379() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,6,0,1,-1,7,8,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest380() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,4,-1,-1,-1,6,7,2,-1,0,8,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest381() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,-1,-1,-1,0,0,5,-1,7,4,2,-1,8,0,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest382() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,3,-1,-1,6,7,2,-1,8,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest383() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,0,5,2,-1,6,-1,-1,-1,0,0,3,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest384() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,0,5,2,-1,6,-1,-1,-1,0,0,3,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest385() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,7,2,-1,0,0,-1,-1,6,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest386() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,5,-1,-1,-1,0,6,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest387() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,7,-1,-1,0,0,5,-1,0,4,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest388() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,5,-1,0,7,2,-1,0,0,-1,-1,-1,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest389() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,0,8,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest390() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,-1,-1,-1,-1,-1,-1,-1,0,7,2,-1,0,4,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest391() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,7,2,-1,0,8,-1,-1,0,8,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest392() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,0,1,-1,-1,-1,-1,-1,0,8,2,-1,0,4,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest393() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,2,-1,6,0,2,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest394() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,4,-1,0,5,2,-1,6,0,2,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest395() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,0,6,2,-1,7,8,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest396() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,2,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest397() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,5,6,2,-1,7,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest398() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,5,-1,-1,6,7,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest399() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,2,-1,-1,7,8,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest400() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,7,8,2,-1,0,0,-1,-1,-1,1,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest401() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,2,-1,5,6,2,-1,0,7,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest402() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,7,5,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest403() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,2,-1,-1,6,7,2,-1,8,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest404() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,4,4,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest405() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,7,2,-1,0,0,-1,-1,-1,7,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest406() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,7,-1,0,8,2,-1,0,0,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest407() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,0,-1,-1,-1,0,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest408() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,-1,-1,-1,-1,-1,-1,-1,0,7,2,-1,0,8,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest409() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,7,2,-1,0,8,-1,-1,3,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest410() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,7,2,-1,8,0,-1,-1,0,4,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest411() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,2,-1,-1,3,4,1,-1,0,5,2,-1,6,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest412() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,4,-1,-1,-1,0,6,2,-1,7,8,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest413() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,-1,-1,0,6,2,-1,7,8,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest414() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,2,-1,6,7,-1,-1,0,0,3,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest415() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,2,-1,6,7,5,-1,0,0,3,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest416() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,0,5,2,-1,6,7,2,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest417() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,3,1,-1,0,0,-1,-1,5,6,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest418() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,8,2,-1,0,0,-1,-1,2,-1,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest419() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,7,8,2,-1,0,0,-1,-1,-1,5,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest420() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,4,-1,-1,6,7,2,-1,8,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest421() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,7,0,2,-1,0,0,-1,-1,0,0,3,-1,4,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest422() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,6,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest423() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,4,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest424() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,0,4,2,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest425() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,0,5,2,-1,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest426() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,2,-1,5,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest427() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,4,-1,0,7,2,-1,0,0,-1,-1,-1,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest428() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,6,7,-1,-1,0,8,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest429() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,0,-1,0,5,2,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest430() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,3,-1,0,5,2,-1,0,6,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest431() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,6,-1,-1,-1,0,7,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest432() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,7,2,-1,0,8,-1,-1,0,6,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest433() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,7,-1,0,7,2,-1,0,8,-1,-1,-1,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest434() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,3,-1,-1,0,7,2,-1,8,0,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest435() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,0,7,2,-1,8,6,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest436() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,0,-1,0,5,2,-1,6,0,2,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest437() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,2,-1,6,0,0,-1,0,0,3,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest438() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,0,4,5,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest439() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,4,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest440() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,8,2,-1,0,0,-1,-1,5,-1,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest441() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,7,6,2,-1,0,8,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest442() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,6,5,2,-1,7,0,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest443() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,6,5,2,-1,7,0,2,-1,0,0,3,-1,0,0,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest444() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,7,0,8,-1,0,0,-1,-1,0,0,3,-1,-1,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest445() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,0,5,2,-1,6,-1,-1,-1,0,0,3,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest446() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,6,-1,-1,-1,0,7,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest447() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,6,0,1,-1,0,7,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest448() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,0,1,-1,0,7,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest449() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,0,8,2,-1,0,0,-1,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest450() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,6,-1,-1,-1,0,7,2,-1,0,8,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest451() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,0,6,-1,-1,0,7,2,-1,0,8,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest452() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,7,-1,0,8,2,-1,7,0,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest453() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,0,5,2,-1,6,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest454() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,3,1,-1,5,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest455() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,-1,-1,0,7,2,-1,6,8,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest456() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,3,-1,0,5,2,-1,6,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest457() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,2,-1,6,7,-1,-1,0,0,3,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest458() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,0,6,2,-1,7,8,2,-1,-1,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest459() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest460() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,4,-1,5,6,2,-1,7,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest461() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,3,-1,5,6,2,-1,7,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest462() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,8,2,-1,0,0,-1,-1,0,-1,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest463() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,3,-1,7,8,2,-1,0,0,-1,-1,-1,0,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest464() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,0,-1,-1,-1,6,7,2,-1,0,8,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest465() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,-1,-1,7,6,2,-1,0,8,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest466() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,6,7,2,-1,5,0,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest467() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,2,-1,1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest468() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,7,2,-1,0,0,-1,-1,-1,5,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest469() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,6,0,1,-1,0,7,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest470() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,0,8,2,-1,0,0,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest471() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,0,8,2,-1,0,0,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest472() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,0,6,-1,-1,0,7,2,-1,0,8,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest473() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,0,6,-1,-1,0,7,2,-1,8,0,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest474() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,4,5,1,-1,-1,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest475() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest476() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,3,-1,-1,-1,6,7,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest477() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,2,-1,-1,6,7,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest478() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,-1,-1,7,8,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest479() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,6,-1,-1,7,8,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest480() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,0,1,-1,0,0,-1,-1,4,8,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest481() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,6,0,1,-1,7,8,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest482() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,7,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest483() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,6,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest484() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,0,1,-1,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest485() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,0,1,-1,5,-1,-1,-1,0,0,2,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest486() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,0,1,-1,5,-1,-1,-1,0,0,2,-1,6,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest487() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,1,-1,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest488() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,1,-1,5,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest489() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,1,-1,5,6,1,-1,0,0,2,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest490() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,0,2,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest491() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,0,0,2,-1,5,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest492() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,0,-1,-1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest493() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,2,-1,0,0,-1,-1,7,0,-1,-1,-1,6,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest494() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,6,7,-1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest495() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest496() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,0,2,-1,0,0,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest497() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,6,0,1,-1,0,0,2,-1,0,0,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest498() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,6,7,-1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest499() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,0,-1,-1,-1,0,6,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest500() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,2,-1,0,7,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest501() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,4,-1,0,0,2,-1,0,8,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest502() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,0,0,2,-1,0,8,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest503() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,4,7,-1,-1,-1,-1,-1,-1,0,0,2,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest504() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,6,7,-1,-1,0,0,2,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest505() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,0,2,-1,5,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest506() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,0,0,2,-1,8,0,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest507() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,2,-1,7,8,-1,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest508() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,0,2,-1,7,8,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest509() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,0,2,-1,5,6,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest510() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,0,2,-1,5,6,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest511() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,0,5,2,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest512() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,-1,-1,-1,-1,-1,-1,-1,0,4,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest513() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,4,0,1,-1,0,0,-1,-1,0,7,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest514() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,3,-1,0,8,2,-1,0,0,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest515() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,7,2,-1,0,8,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest516() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,3,-1,-1,0,6,2,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest517() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,5,-1,-1,0,6,2,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest518() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,0,6,-1,-1,0,7,2,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest519() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,4,-1,-1,0,7,2,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest520() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,7,2,-1,8,0,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest521() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,4,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest522() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,5,0,2,-1,6,-1,-1,-1,-1,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest523() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,0,6,-1,-1,7,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest524() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,7,0,2,-1,0,0,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest525() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,7,0,2,-1,0,0,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest526() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,4,0,1,-1,0,0,-1,-1,7,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest527() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,6,7,-1,-1,8,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest528() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,7,0,2,-1,0,8,-1,-1,2,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest529() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,5,-1,-1,-1,6,0,2,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest530() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,4,-1,-1,-1,6,0,2,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest531() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,7,0,2,-1,8,0,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest532() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,6,0,2,-1,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest533() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,3,0,2,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest534() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,0,-1,-1,-1,6,0,2,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest535() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,5,-1,-1,6,0,2,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest536() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,0,2,-1,6,0,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest537() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,0,2,-1,6,0,7,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest538() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,5,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest539() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,3,-1,5,6,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest540() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,5,-1,-1,7,8,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest541() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,7,8,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest542() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,0,1,-1,7,8,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest543() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,7,4,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest544() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,4,5,1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest545() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,4,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest546() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,4,-1,-1,6,7,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest547() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,4,0,1,-1,0,0,-1,-1,7,8,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest548() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,7,0,0,-1,0,0,-1,-1,0,0,3,-1,-1,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest549() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,-1,-1,-1,6,7,2,-1,8,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest550() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,0,-1,-1,6,7,2,-1,8,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest551() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,4,-1,5,6,2,-1,7,0,2,-1,0,0,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest552() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest553() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,4,5,4,-1,-1,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest554() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,6,-1,-1,-1,7,8,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest555() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,7,8,2,-1,0,0,-1,-1,1,0,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest556() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,4,1,-1,5,6,2,-1,0,7,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest557() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,0,-1,-1,-1,6,7,2,-1,0,8,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest558() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,7,0,6,-1,0,0,-1,-1,0,0,3,-1,-1,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest559() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,6,7,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest560() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,1,-1,-1,7,8,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest561() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,4,-1,5,6,2,-1,7,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest562() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,3,-1,5,6,2,-1,7,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest563() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,7,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,2,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest564() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,2,-1,-1,-1,6,7,2,-1,0,8,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest565() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,3,-1,-1,6,7,2,-1,0,8,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest566() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,0,-1,-1,-1,6,7,2,-1,8,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest567() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,0,-1,5,6,2,-1,7,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest568() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,8,2,-1,0,0,-1,-1,0,8,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest569() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,7,8,2,-1,0,0,-1,-1,-1,0,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest570() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,7,8,2,-1,0,0,-1,-1,5,0,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest571() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,7,8,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest572() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,0,-1,-1,-1,6,7,2,-1,0,8,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest573() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,0,-1,-1,-1,6,7,2,-1,8,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest574() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,7,8,2,-1,6,0,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest575() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,7,0,4,-1,0,0,-1,-1,0,0,3,-1,-1,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest576() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,0,-1,-1,3,4,1,-1,5,6,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest577() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,6,-1,-1,-1,7,8,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest578() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,6,5,2,-1,0,7,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest579() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,0,-1,-1,-1,6,7,2,-1,8,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest580() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,7,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,6,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest581() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,2,-1,5,6,2,-1,7,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest582() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,0,7,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest583() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,6,7,2,-1,0,8,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest584() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,1,-1,-1,-1,6,7,2,-1,8,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest585() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest586() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,0,1,-1,5,-1,-1,-1,0,0,2,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest587() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,0,1,-1,5,-1,-1,-1,0,0,2,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest588() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,1,-1,5,5,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest589() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,1,-1,5,6,4,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest590() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,2,-1,0,0,-1,-1,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest591() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest592() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,0,2,-1,0,0,-1,-1,1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest593() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,7,1,-1,0,0,2,-1,0,0,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest594() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,6,-1,0,0,2,-1,0,0,-1,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest595() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,0,0,2,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest596() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,0,-1,-1,-1,0,0,2,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest597() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,7,-1,0,0,2,-1,0,8,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest598() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,4,1,-1,0,0,2,-1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest599() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,5,-1,-1,-1,0,0,2,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest600() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,6,-1,-1,-1,7,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest601() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,0,0,2,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest602() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,0,0,2,-1,6,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest603() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,5,-1,-1,-1,0,0,2,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest604() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,1,-1,-1,-1,0,0,2,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest605() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,-1,-1,-1,0,0,2,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest606() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,0,2,-1,7,8,-1,-1,4,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest607() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,0,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest608() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,2,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest609() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,4,-1,-1,-1,0,6,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest610() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,6,-1,-1,-1,0,7,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest611() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,7,2,-1,0,0,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest612() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,7,2,-1,0,0,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest613() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,0,8,2,-1,0,0,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest614() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,-1,-1,-1,-1,-1,-1,-1,0,4,2,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest615() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,7,2,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest616() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,7,2,-1,0,8,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest617() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,1,-1,-1,0,7,2,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest618() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,-1,-1,-1,-1,-1,-1,-1,0,7,2,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest619() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,2,-1,-1,0,7,2,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest620() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,6,-1,-1,0,7,2,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest621() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,0,-1,-1,-1,6,7,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest622() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,0,-1,0,5,2,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest623() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,2,-1,6,0,1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest624() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,0,2,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest625() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,0,2,-1,6,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest626() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,3,-1,-1,-1,6,0,2,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest627() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,7,0,2,-1,8,0,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest628() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,7,0,2,-1,6,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest629() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,-1,-1,-1,6,0,2,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest630() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,0,2,-1,6,7,-1,-1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest631() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest632() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,4,5,3,-1,-1,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest633() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,3,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest634() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,8,2,-1,0,0,-1,-1,0,5,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest635() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,7,8,2,-1,0,0,-1,-1,-1,3,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest636() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest637() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,5,6,2,-1,7,-1,-1,-1,0,0,-1,-1,0,0,3,-1,7,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest638() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,5,6,2,-1,7,-1,-1,-1,0,0,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest639() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,6,7,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest640() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,5,-1,-1,6,7,2,-1,0,8,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest641() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,4,5,6,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest642() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,0,4,-1,6,3,2,-1,0,0,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest643() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,8,7,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest644() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,7,8,2,-1,0,0,-1,-1,-1,2,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest645() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,0,-1,-1,-1,6,7,2,-1,0,8,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest646() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest647() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,2,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest648() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,5,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest649() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,0,3,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest650() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,5,-1,-1,-1,6,7,2,-1,8,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest651() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,0,-1,5,6,2,-1,7,0,2,-1,0,0,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest652() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest653() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,7,8,2,-1,0,0,-1,-1,4,0,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest654() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,6,7,2,-1,5,0,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest655() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,1,-1,-1,3,4,1,-1,5,6,2,-1,7,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest656() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,5,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest657() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,4,5,4,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest658() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,0,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest659() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,0,-1,-1,-1,6,7,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest660() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,-1,-1,-1,0,0,-1,-1,4,7,2,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest661() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,8,2,-1,0,0,-1,-1,0,2,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest662() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,2,-1,7,8,2,-1,0,0,-1,-1,-1,0,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest663() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,5,-1,-1,-1,6,7,2,-1,0,8,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest664() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,1,-1,-1,6,7,2,-1,0,8,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest665() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,7,1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest666() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,7,0,2,-1,0,0,-1,-1,0,0,3,-1,1,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest667() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,2,-1,-1,4,5,2,-1,-1,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest668() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,4,5,6,-1,-1,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest669() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,4,5,2,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest670() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,0,1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest671() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,6,-1,-1,-1,0,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest672() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,6,-1,7,8,2,-1,0,0,-1,-1,-1,0,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest673() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,6,7,2,-1,0,5,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest674() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,7,6,2,-1,8,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest675() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest676() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest677() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,0,4,-1,6,3,2,-1,0,7,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest678() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,-1,-1,-1,6,7,2,-1,0,8,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest679() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,7,2,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest680() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,1,-1,5,0,1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest681() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,0,1,-1,5,6,1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest682() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,3,-1,0,0,2,-1,0,0,-1,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest683() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,1,-1,-1,0,0,2,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest684() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,2,-1,7,0,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest685() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,0,6,-1,-1,7,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest686() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,0,0,2,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest687() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,2,-1,7,8,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest688() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,0,2,-1,5,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest689() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,0,2,-1,5,0,2,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest690() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,0,0,2,-1,6,5,2,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest691() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,0,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest692() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,0,6,2,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest693() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,0,-1,-1,3,4,1,-1,0,5,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest694() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,-1,-1,0,6,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest695() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,3,-1,-1,0,7,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest696() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,5,-1,0,7,2,-1,0,0,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest697() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,7,2,-1,0,0,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest698() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,6,0,1,-1,0,7,2,-1,0,0,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest699() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,0,8,2,-1,0,0,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest700() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,6,-1,0,8,2,-1,0,0,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest701() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,0,6,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest702() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,7,2,-1,0,8,-1,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest703() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,2,-1,-1,0,7,2,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest704() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,2,-1,0,5,2,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest705() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,5,0,2,-1,6,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest706() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,5,0,2,-1,6,-1,-1,-1,-1,-1,-1,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest707() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,0,2,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest708() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,4,-1,-1,-1,6,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest709() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,2,-1,-1,-1,6,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest710() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,4,-1,-1,-1,-1,-1,-1,8,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest711() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,5,0,2,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest712() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,0,2,-1,0,8,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest713() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,0,1,-1,-1,-1,-1,-1,8,0,2,-1,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest714() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,4,-1,-1,7,0,2,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest715() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,6,0,1,-1,7,0,2,-1,8,0,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest716() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,0,-1,-1,-1,6,0,2,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest717() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,2,-1,-1,6,0,2,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest718() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,2,-1,5,6,2,-1,0,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest719() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,5,6,2,-1,7,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest720() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,8,2,-1,0,0,-1,-1,0,1,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest721() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,5,-1,-1,-1,6,7,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest722() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,0,-1,-1,3,6,2,-1,7,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest723() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,7,-1,7,8,2,-1,0,0,-1,-1,-1,0,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest724() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,7,0,2,-1,0,0,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest725() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,0,6,-1,-1,7,8,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest726() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,7,8,2,-1,0,0,-1,-1,6,0,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest727() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,1,-1,-1,-1,6,7,2,-1,0,8,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest728() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,6,7,2,-1,3,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest729() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,7,8,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest730() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,7,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest731() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest732() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,0,-1,-1,-1,6,7,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest733() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,-1,-1,-1,-1,-1,-1,-1,7,8,2,-1,0,4,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest734() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,7,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest735() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,4,-1,-1,-1,6,7,2,-1,8,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest736() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,4,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest737() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,3,1,-1,0,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest738() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,2,-1,-1,6,7,2,-1,0,8,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest739() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,4,-1,5,6,2,-1,0,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest740() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,6,7,2,-1,0,8,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest741() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,7,6,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest742() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,6,7,2,-1,8,0,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest743() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,7,3,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest744() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,4,5,5,-1,-1,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest745() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,7,-1,8,7,2,-1,0,0,-1,-1,-1,0,-1,-1,0,0,4,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest746() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,7,8,2,-1,0,0,-1,-1,-1,4,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest747() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,8,2,-1,0,0,-1,-1,6,-1,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest748() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,-1,-1,6,7,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest749() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,0,6,-1,-1,7,8,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest750() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,7,8,2,-1,0,0,-1,-1,8,0,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest751() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,0,-1,5,6,2,-1,0,7,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest752() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,7,0,2,-1,0,0,-1,-1,0,0,3,-1,7,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest753() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,0,3,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest754() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,1,-1,4,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest755() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,1,-1,5,6,6,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest756() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest757() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,1,-1,5,6,7,-1,0,0,2,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest758() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,2,-1,0,0,-1,-1,7,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest759() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,0,0,2,-1,0,0,-1,-1,1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest760() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,0,0,2,-1,0,0,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest761() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,6,7,1,-1,0,0,2,-1,0,0,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest762() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,4,1,-1,-1,-1,-1,-1,0,0,2,-1,0,0,-1,-1,0,8,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest763() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,2,-1,0,0,2,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest764() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,6,-1,-1,-1,0,0,2,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest765() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,3,-1,-1,0,0,2,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest766() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,2,-1,-1,0,0,2,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest767() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,6,7,1,-1,0,0,2,-1,0,8,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest768() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,6,7,1,-1,8,0,-1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest769() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,0,0,2,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest770() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,2,-1,7,8,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest771() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,4,-1,-1,-1,0,0,2,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest772() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,3,-1,0,0,2,-1,7,8,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest773() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,7,-1,0,0,2,-1,8,7,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest774() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,2,-1,0,0,2,-1,7,8,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest775() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,0,2,-1,7,8,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest776() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,0,2,-1,5,0,2,-1,4,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest777() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,7,-1,-1,-1,-1,-1,-1,0,8,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest778() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,7,2,-1,0,0,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest779() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,7,2,-1,0,0,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest780() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,0,8,2,-1,0,0,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest781() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,-1,-1,-1,-1,-1,-1,-1,0,8,2,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest782() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,7,2,-1,0,8,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest783() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,7,2,-1,0,8,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest784() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,3,1,-1,5,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest785() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,4,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest786() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,5,0,2,-1,6,-1,-1,-1,-1,-1,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest787() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,0,-1,-1,-1,6,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest788() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,6,-1,-1,-1,7,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest789() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,0,2,-1,0,0,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest790() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,6,-1,-1,7,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest791() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,1,-1,-1,7,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest792() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,7,0,2,-1,0,0,-1,-1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest793() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,0,2,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest794() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,0,-1,-1,-1,6,0,2,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest795() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,7,0,2,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest796() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,0,6,-1,-1,7,0,2,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest797() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,7,0,2,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest798() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,7,0,2,-1,0,8,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest799() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,2,-1,7,0,2,-1,0,8,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest800() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,2,-1,5,0,2,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest801() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,-1,-1,-1,-1,-1,-1,-1,4,0,2,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest802() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,4,-1,-1,-1,-1,-1,-1,-1,7,0,2,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest803() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,6,0,1,-1,7,0,-1,-1,8,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest804() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,0,-1,7,0,2,-1,8,0,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest805() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,0,-1,5,0,2,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest806() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,4,-1,5,0,2,-1,6,0,2,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest807() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,4,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest808() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,6,5,2,-1,0,0,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest809() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,-1,-1,-1,0,0,5,-1,7,4,2,-1,0,0,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest810() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,3,-1,-1,6,7,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest811() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,6,0,1,-1,7,8,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest812() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,2,-1,5,6,2,-1,7,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest813() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,3,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest814() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,3,-1,5,6,2,-1,0,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest815() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,7,8,2,-1,0,0,-1,-1,-1,7,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest816() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,4,1,-1,5,6,2,-1,7,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest817() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,8,2,-1,0,0,-1,-1,7,-1,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest818() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,0,6,-1,-1,0,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest819() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,0,4,-1,6,3,2,-1,7,0,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest820() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,1,-1,-1,4,5,2,-1,-1,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest821() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,7,8,2,-1,0,0,-1,-1,-1,0,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest822() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,7,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,3,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest823() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,0,6,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest824() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,0,2,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest825() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,4,-1,-1,6,7,2,-1,0,8,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest826() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,7,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,5,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest827() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,7,0,5,-1,0,0,-1,-1,0,0,3,-1,-1,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest828() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,5,6,2,-1,7,-1,-1,-1,0,0,-1,-1,0,0,3,-1,0,5,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest829() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,-1,-1,-1,-1,-1,-1,-1,7,8,2,-1,4,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest830() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,7,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,7,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest831() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,5,6,2,-1,7,-1,-1,-1,0,0,-1,-1,0,0,3,-1,6,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest832() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,5,6,2,-1,7,-1,-1,-1,0,0,-1,-1,0,0,3,-1,0,4,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest833() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,0,-1,-1,-1,6,7,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest834() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,0,1,-1,0,0,5,-1,8,4,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest835() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,-1,-1,-1,0,0,-1,-1,4,8,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest836() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,0,-1,-1,-1,6,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest837() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,0,1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest838() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,0,1,-1,5,6,1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest839() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,0,1,-1,5,6,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest840() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,0,0,2,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest841() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,0,2,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest842() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,0,2,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest843() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,2,-1,0,0,-1,-1,7,0,-1,-1,7,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest844() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,-1,-1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest845() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,0,0,2,-1,0,0,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest846() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,0,0,2,-1,0,0,-1,-1,4,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest847() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,2,-1,0,0,2,-1,0,0,-1,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest848() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,0,-1,0,0,2,-1,0,0,-1,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest849() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,2,-1,0,7,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest850() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,6,7,-1,-1,0,8,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest851() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,0,1,-1,0,0,2,-1,0,7,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest852() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,1,-1,-1,3,4,1,-1,0,0,2,-1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest853() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,2,-1,7,0,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest854() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,2,-1,7,0,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest855() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,4,-1,-1,-1,-1,-1,-1,0,0,2,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest856() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,0,2,-1,5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest857() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,0,-1,-1,-1,6,7,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest858() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,6,0,1,-1,0,0,2,-1,7,8,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest859() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,4,-1,0,0,2,-1,5,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest860() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,0,2,-1,5,6,6,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest861() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,2,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest862() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,0,5,2,-1,6,-1,-1,-1,-1,-1,-1,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest863() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,2,-1,0,5,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest864() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,6,7,-1,-1,0,8,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest865() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,7,2,-1,0,0,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest866() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,4,-1,0,8,2,-1,0,0,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest867() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,0,8,2,-1,0,0,-1,-1,1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest868() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,3,-1,-1,-1,0,6,2,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest869() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,0,-1,0,5,2,-1,6,0,2,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest870() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,0,6,2,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest871() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest872() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,4,-1,7,0,2,-1,0,0,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest873() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,6,0,1,-1,7,0,2,-1,0,0,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest874() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,8,0,2,-1,0,0,-1,-1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest875() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,4,-1,-1,-1,6,0,2,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest876() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,4,-1,-1,7,0,2,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest877() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,7,0,2,-1,0,8,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest878() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,7,0,2,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest879() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,1,-1,-1,7,0,2,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest880() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,0,2,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest881() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,6,0,2,-1,5,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest882() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,7,-1,-1,0,0,5,-1,8,4,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest883() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,-1,-1,-1,0,0,5,-1,7,4,2,-1,0,8,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest884() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,-1,-1,6,7,2,-1,8,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest885() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,0,-1,-1,4,5,2,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest886() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,0,6,-1,-1,7,8,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest887() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,7,-1,-1,0,0,-1,-1,4,8,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest888() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,1,-1,-1,3,4,1,-1,5,6,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest889() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,7,6,2,-1,0,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest890() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,5,6,2,-1,0,7,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest891() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,5,6,2,-1,0,7,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest892() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,5,6,2,-1,7,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest893() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,7,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,4,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest894() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,7,0,2,-1,0,0,-1,-1,0,0,3,-1,-1,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest895() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,4,5,3,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest896() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,5,6,2,-1,7,-1,-1,-1,0,0,-1,-1,0,0,3,-1,0,3,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest897() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,6,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest898() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,8,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest899() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,4,-1,-1,7,8,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest900() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,7,0,3,-1,0,0,-1,-1,0,0,3,-1,-1,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest901() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,6,7,2,-1,8,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest902() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,5,-1,-1,6,7,2,-1,8,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest903() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,8,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest904() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest905() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,6,7,2,-1,0,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest906() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,5,6,2,-1,7,-1,-1,-1,0,0,-1,-1,0,0,3,-1,0,1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest907() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,6,0,1,-1,7,8,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest908() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,2,-1,-1,-1,6,7,2,-1,8,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest909() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,1,-1,6,-1,-1,-1,-1,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest910() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,1,-1,0,2,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest911() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,0,1,-1,0,5,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest912() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,0,1,-1,5,6,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest913() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,1,-1,5,6,1,-1,0,0,2,-1,2,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest914() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,2,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest915() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,4,-1,0,0,2,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest916() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,0,0,2,-1,5,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest917() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,0,0,2,-1,5,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest918() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,2,-1,-1,3,4,1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest919() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,2,-1,0,0,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest920() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,2,-1,0,0,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest921() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,2,-1,0,0,-1,-1,7,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest922() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,2,-1,0,0,-1,-1,7,0,-1,-1,5,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest923() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,6,7,1,-1,0,0,2,-1,0,0,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest924() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,3,-1,-1,-1,0,0,2,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest925() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,6,7,1,-1,0,0,2,-1,0,8,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest926() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,3,-1,0,0,2,-1,8,0,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest927() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,0,0,2,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest928() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,7,-1,0,0,2,-1,7,8,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest929() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,0,2,-1,7,8,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest930() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,0,2,-1,5,0,4,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest931() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,0,2,-1,5,6,7,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest932() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest933() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,2,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest934() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,0,-1,0,5,2,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest935() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,6,0,1,-1,0,0,-1,-1,0,7,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest936() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,0,8,2,-1,0,0,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest937() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,5,-1,-1,-1,0,6,2,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest938() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,6,-1,-1,-1,0,7,2,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest939() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,7,2,-1,0,8,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest940() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,7,-1,-1,-1,-1,-1,-1,0,4,2,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest941() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,4,-1,-1,0,7,2,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest942() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,4,-1,0,5,2,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest943() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,6,-1,-1,-1,7,0,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest944() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,4,-1,0,7,2,-1,8,0,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest945() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,7,2,-1,8,0,-1,-1,3,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest946() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,7,2,-1,8,0,-1,-1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest947() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,-1,-1,-1,0,6,2,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest948() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,2,-1,6,7,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest949() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,7,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest950() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,7,0,2,-1,0,0,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest951() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,6,0,1,-1,7,0,2,-1,0,0,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest952() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,3,1,-1,5,0,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest953() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,0,-1,-1,-1,6,0,2,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest954() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,3,-1,-1,7,0,2,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest955() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,0,-1,-1,-1,6,7,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest956() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,5,-1,-1,-1,6,0,2,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest957() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,0,2,-1,6,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest958() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,4,2,-1,0,0,3,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest959() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,6,7,2,-1,0,3,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest960() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,1,-1,-1,4,5,2,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest961() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,2,-1,5,6,2,-1,7,0,2,-1,0,0,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest962() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,4,5,2,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest963() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,0,-1,-1,3,6,2,-1,0,7,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest964() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,5,6,2,-1,0,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest965() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,8,2,-1,0,0,-1,-1,1,-1,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest966() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,-1,-1,7,8,2,-1,0,6,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest967() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,-1,-1,6,7,2,-1,0,8,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest968() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,2,-1,-1,3,4,1,-1,5,6,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest969() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,3,1,-1,5,0,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest970() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,7,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest971() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,5,6,2,-1,7,0,2,-1,0,0,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest972() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,3,-1,5,6,2,-1,7,0,2,-1,0,0,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest973() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,4,5,2,-1,-1,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest974() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,0,-1,-1,-1,0,6,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest975() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,8,2,-1,0,0,-1,-1,4,-1,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest976() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,0,1,-1,5,-1,-1,-1,0,0,2,-1,6,0,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest977() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,1,-1,0,1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest978() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,1,-1,6,4,-1,-1,-1,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest979() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,1,-1,5,6,1,-1,0,0,2,-1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest980() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,1,-1,5,6,7,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest981() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,0,1,-1,5,6,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest982() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,6,0,1,-1,0,0,2,-1,0,0,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest983() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,4,-1,0,0,2,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest984() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,-1,-1,-1,0,0,2,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest985() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,2,-1,0,7,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest986() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,0,-1,-1,0,0,2,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest987() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,4,-1,-1,-1,-1,-1,-1,0,0,2,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest988() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,6,-1,-1,0,0,2,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest989() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,0,-1,0,0,2,-1,0,7,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest990() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,0,0,2,-1,0,8,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest991() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,4,-1,-1,0,0,2,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest992() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,0,2,-1,7,0,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest993() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,6,7,-1,-1,8,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest994() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,3,-1,-1,0,0,2,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest995() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,0,0,2,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest996() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,0,2,-1,5,6,2,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest997() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,0,5,2,-1,6,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest998() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,4,-1,-1,-1,-1,-1,-1,-1,0,7,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest999() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,6,0,1,-1,0,7,2,-1,0,0,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1000() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,1,-1,-1,3,4,1,-1,0,5,2,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1001() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,0,-1,-1,-1,0,6,2,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1002() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,3,-1,-1,-1,0,6,2,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1003() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,2,-1,6,7,-1,-1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1004() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,0,4,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1005() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,5,0,2,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1006() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,0,2,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1007() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,2,-1,-1,6,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1008() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,4,-1,-1,7,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1009() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,8,0,2,-1,0,0,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1010() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,0,2,-1,0,8,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1011() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,2,-1,-1,7,0,2,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1012() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,7,0,2,-1,8,0,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1013() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,7,0,2,-1,8,0,-1,-1,2,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1014() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,-1,-1,-1,-1,-1,-1,-1,7,0,2,-1,4,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1015() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,-1,-1,7,0,2,-1,6,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1016() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,5,0,2,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1017() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,0,2,-1,6,7,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1018() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,-1,-1,-1,4,5,0,-1,-1,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1019() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,0,4,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1020() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,6,7,2,-1,8,0,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1021() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,1,-1,-1,3,4,1,-1,5,6,2,-1,0,7,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1022() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,0,-1,-1,4,5,2,-1,-1,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1023() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,6,7,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1024() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,2,-1,-1,3,4,1,-1,5,6,2,-1,0,7,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1025() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,0,-1,-1,-1,6,7,2,-1,0,8,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1026() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,5,6,2,-1,7,-1,-1,-1,0,0,-1,-1,0,0,3,-1,3,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1027() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,0,-1,-1,6,7,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1028() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,6,7,2,-1,8,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1029() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,8,2,-1,0,0,-1,-1,0,3,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest1030() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,7,8,2,-1,0,6,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest1031() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,5,6,2,-1,0,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1032() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,7,8,2,-1,0,0,-1,-1,2,0,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest1033() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,-1,-1,-1,-1,-1,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1034() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,6,7,2,-1,5,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1035() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1036() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,-1,3,-1,-1,4,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1037() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,0,6,-1,-1,7,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1038() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,0,-1,-1,7,0,2,-1,-1,6,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1039() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,0,-1,-1,7,0,2,-1,-1,1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1040() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,0,0,-1,-1,8,0,2,-1,-1,3,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1041() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,6,7,-1,-1,0,0,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1042() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,8,0,-1,-1,7,0,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1043() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,7,0,-1,-1,8,0,2,-1,-1,5,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1044() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,6,0,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1045() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,6,0,-1,-1,5,0,2,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1046() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,7,-1,-1,8,0,2,-1,8,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1047() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,6,7,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1048() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,7,6,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1049() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,2,-1,6,0,2,-1,0,7,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1050() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,6,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1051() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,-1,3,-1,-1,4,5,-1,-1,0,0,3,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1052() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,2,-1,-1,5,6,2,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1053() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,3,1,-1,5,6,2,-1,-1,0,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1054() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,0,-1,-1,6,7,2,-1,0,0,5,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1055() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,-1,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1056() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,3,1,-1,5,6,2,-1,0,0,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1057() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,0,-1,-1,-1,0,0,-1,-1,6,7,2,-1,0,0,5,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1058() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,7,8,2,-1,4,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1059() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,0,6,-1,-1,7,8,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1060() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,0,-1,-1,-1,6,7,2,-1,0,8,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1061() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,1,-1,-1,0,6,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1062() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,-1,-1,6,7,2,-1,3,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1063() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,3,-1,6,7,2,-1,0,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1064() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,2,-1,0,5,2,-1,6,7,2,-1,0,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1065() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,1,-1,-1,3,4,1,-1,0,5,2,-1,6,7,2,-1,0,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1066() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,-1,0,-1,-1,6,0,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1067() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,2,-1,-1,5,-1,-1,6,0,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1068() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,7,0,2,-1,3,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1069() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,0,-1,-1,5,0,2,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1070() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,0,5,-1,0,0,-1,-1,3,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1071() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,4,-1,-1,-1,6,0,-1,-1,7,0,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1072() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,0,-1,-1,8,0,2,-1,0,8,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1073() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,8,0,2,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest1074() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,0,1,-1,0,0,6,-1,0,8,-1,-1,4,0,2,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1075() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,5,-1,-1,-1,6,7,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1076() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,3,-1,5,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1077() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,3,5,-1,-1,6,0,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1078() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,2,-1,6,0,2,-1,0,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1079() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,5,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1080() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,7,6,2,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1081() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,1,-1,-1,-1,0,0,-1,-1,6,7,2,-1,0,0,5,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1082() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,0,-1,-1,7,8,2,-1,7,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1083() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,5,-1,-1,-1,6,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1084() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,2,-1,-1,3,4,1,-1,0,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1085() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,1,-1,-1,-1,0,6,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1086() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,4,-1,-1,5,0,2,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1087() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,7,0,2,-1,-1,5,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1088() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,7,0,-1,-1,6,0,2,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1089() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,2,-1,-1,7,0,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1090() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,5,-1,7,0,-1,-1,8,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1091() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,7,-1,-1,8,0,2,-1,1,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1092() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,6,3,-1,-1,7,0,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1093() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,0,5,-1,6,7,-1,-1,3,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1094() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,0,4,-1,3,5,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1095() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,-1,0,-1,-1,6,5,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1096() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,7,8,2,-1,-1,1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1097() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,7,8,2,-1,1,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1098() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,-1,-1,0,0,-1,-1,7,6,2,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1099() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,3,-1,-1,-1,0,6,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1100() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,5,-1,-1,-1,0,6,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1101() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,-1,-1,6,7,2,-1,0,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1102() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,0,5,-1,-1,0,-1,-1,3,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1103() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,7,0,2,-1,0,8,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1104() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,0,-1,-1,7,0,2,-1,5,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1105() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,0,0,-1,-1,8,0,2,-1,-1,8,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1106() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,8,1,-1,0,0,6,-1,0,0,-1,-1,4,0,2,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1107() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,1,-1,-1,-1,0,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1108() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,-1,-1,-1,0,0,6,-1,0,7,-1,-1,4,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1109() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,-1,-1,-1,0,0,6,-1,0,8,-1,-1,4,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1110() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,7,-1,-1,8,0,2,-1,-1,6,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1111() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,4,-1,0,7,-1,-1,8,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1112() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,6,7,-1,-1,5,0,2,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1113() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,0,-1,5,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1114() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1115() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,7,8,2,-1,7,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1116() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,7,8,2,-1,0,0,6,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1117() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,0,-1,-1,3,4,1,-1,5,0,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1118() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,-1,-1,-1,0,0,6,-1,7,0,-1,-1,4,8,2,-1,-1,-1,-1,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1119() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,0,6,-1,-1,5,7,2,-1,0,0,4,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1120() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,0,-1,-1,0,6,-1,-1,7,3,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1121() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,2,-1,6,7,2,-1,0,1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1122() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,0,6,2,-1,5,7,2,-1,0,0,4,-1,0,0,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1123() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,-1,3,-1,-1,4,-1,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1124() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,-1,0,-1,-1,5,0,2,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1125() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,-1,-1,0,0,-1,-1,6,0,2,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1126() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,0,-1,-1,7,0,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1127() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,6,7,-1,-1,0,0,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1128() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,0,-1,-1,7,0,2,-1,-1,8,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1129() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,2,-1,-1,3,4,1,-1,5,0,-1,-1,6,0,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1130() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,0,-1,-1,-1,6,0,-1,-1,7,0,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1131() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,0,-1,-1,8,0,2,-1,3,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1132() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,0,-1,-1,8,0,2,-1,0,4,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1133() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,4,-1,-1,7,0,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1134() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,7,0,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1135() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,5,-1,-1,7,0,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1136() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,3,-1,7,0,-1,-1,8,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1137() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,7,0,-1,-1,8,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1138() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,0,-1,5,0,-1,-1,6,0,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1139() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,5,0,-1,-1,6,0,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1140() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,0,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1141() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,0,-1,-1,-1,0,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1142() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,7,-1,-1,8,0,2,-1,5,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1143() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,7,0,2,-1,-1,-1,-1,-1,0,2,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1144() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,5,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1145() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,-1,3,-1,-1,4,5,-1,-1,0,0,3,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1146() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,-1,3,-1,-1,4,5,4,-1,0,0,3,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1147() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,5,-1,-1,0,0,-1,-1,6,7,2,-1,0,0,5,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1148() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,0,0,-1,-1,8,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1149() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,-1,-1,-1,0,0,-1,-1,7,0,-1,-1,8,4,2,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest1150() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,5,-1,-1,6,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1151() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,4,-1,5,0,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1152() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,7,0,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1153() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,3,-1,-1,-1,0,0,-1,-1,6,0,2,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1154() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,4,-1,-1,0,0,-1,-1,7,0,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1155() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,6,7,-1,-1,0,0,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1156() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,0,6,-1,-1,7,0,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1157() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,2,-1,-1,3,4,1,-1,0,5,-1,-1,6,0,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1158() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,4,-1,-1,0,7,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1159() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,7,-1,-1,8,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1160() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,2,-1,0,7,-1,-1,8,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1161() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,3,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1162() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,2,-1,6,0,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1163() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,0,-1,-1,3,4,1,-1,0,5,2,-1,6,0,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1164() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,0,-1,0,5,2,-1,6,0,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1165() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,7,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1166() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,7,0,2,-1,-1,-1,-1,-1,0,1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1167() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,5,6,2,-1,7,0,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1168() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,0,6,-1,-1,0,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1169() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,0,-1,-1,7,8,2,-1,-1,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1170() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,6,0,1,-1,7,8,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1171() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,3,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1172() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,-1,-1,7,5,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1173() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,3,1,-1,5,0,2,-1,-1,6,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1174() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,7,0,2,-1,-1,6,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1175() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,7,0,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1176() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,6,0,1,-1,7,0,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1177() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,2,-1,5,0,-1,-1,6,0,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1178() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,0,5,-1,0,6,-1,-1,3,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1179() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,5,-1,-1,-1,0,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1180() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,0,-1,-1,-1,6,7,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1181() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,-1,-1,6,0,2,-1,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1182() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,-1,-1,-1,5,3,2,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1183() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,0,5,-1,-1,6,-1,-1,3,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1184() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,7,8,2,-1,1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1185() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,3,-1,-1,0,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1186() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,1,-1,-1,-1,6,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1187() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,2,-1,-1,3,4,1,-1,0,5,2,-1,6,7,2,-1,0,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1188() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,0,-1,0,5,2,-1,6,7,2,-1,0,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1189() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,3,1,-1,5,0,2,-1,-1,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1190() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,-1,-1,6,0,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1191() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,4,1,-1,-1,-1,-1,-1,0,0,-1,-1,8,0,2,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest1192() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,6,7,1,-1,0,0,-1,-1,8,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1193() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,0,-1,-1,6,0,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1194() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,1,-1,-1,-1,6,0,-1,-1,7,0,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1195() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,0,6,-1,-1,7,0,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1196() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,7,-1,8,0,-1,-1,7,0,2,-1,-1,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1197() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,0,1,-1,7,0,-1,-1,8,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1198() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,6,-1,-1,-1,7,0,2,-1,0,8,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1199() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,7,-1,-1,8,0,2,-1,0,4,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1200() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,2,-1,-1,-1,6,7,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1201() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,-1,-1,7,6,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1202() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,6,5,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1203() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,-1,-1,6,0,2,-1,3,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1204() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,3,-1,7,0,2,-1,-1,-1,-1,-1,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1205() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,-1,3,-1,-1,4,0,5,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1206() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,-1,3,-1,-1,4,5,5,-1,0,0,3,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1207() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,-1,3,-1,-1,4,5,6,-1,0,0,3,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1208() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,0,-1,-1,5,3,2,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1209() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,7,8,2,-1,-1,5,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1210() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,-1,-1,-1,0,0,6,-1,0,0,-1,-1,4,7,2,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1211() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1212() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,4,-1,-1,-1,-1,-1,-1,0,0,-1,-1,7,8,2,-1,0,0,6,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1213() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1214() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,0,-1,-1,0,6,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1215() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,2,-1,6,7,2,-1,0,2,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1216() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,2,-1,-1,3,4,1,-1,-1,5,-1,-1,0,6,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1217() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,-1,-1,-1,0,0,-1,-1,0,6,2,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1218() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,0,-1,-1,-1,0,0,-1,-1,0,6,2,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1219() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,7,2,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1220() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,0,6,-1,-1,0,0,-1,-1,0,7,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1221() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,0,-1,-1,0,7,2,-1,-1,7,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1222() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,0,-1,-1,0,8,2,-1,0,7,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1223() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,7,0,-1,-1,0,8,2,-1,-1,1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1224() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,6,0,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1225() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,4,1,-1,0,5,-1,-1,0,6,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1226() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,7,-1,-1,0,8,2,-1,0,3,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1227() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,7,-1,-1,0,8,2,-1,-1,3,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1228() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,5,-1,-1,-1,6,7,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1229() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,3,-1,-1,6,7,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1230() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,0,7,2,-1,-1,-1,-1,-1,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1231() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1232() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,7,8,2,-1,-1,8,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1233() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,0,-1,-1,7,8,2,-1,3,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1234() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,0,0,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1235() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,5,0,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1236() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,3,1,-1,5,6,2,-1,7,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1237() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,1,-1,-1,3,4,1,-1,0,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1238() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,0,-1,-1,3,4,1,-1,-1,5,-1,-1,0,6,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1239() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,0,7,2,-1,8,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1240() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,4,-1,-1,0,0,-1,-1,0,7,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1241() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,0,0,-1,-1,0,8,2,-1,3,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1242() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,4,7,1,-1,0,0,-1,-1,0,0,-1,-1,0,8,2,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest1243() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,7,0,-1,-1,0,8,2,-1,-1,5,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1244() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,7,0,-1,-1,0,8,2,-1,-1,2,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1245() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,7,-1,-1,0,8,2,-1,8,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1246() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,7,-1,-1,0,0,6,-1,0,8,-1,-1,0,4,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1247() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,2,-1,5,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1248() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,3,5,-1,-1,0,6,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1249() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,7,-1,0,8,2,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest1250() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,-1,3,-1,-1,4,5,-1,-1,-1,2,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1251() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,5,-1,-1,0,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1252() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,0,-1,5,0,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1253() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,6,-1,6,7,2,-1,0,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1254() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,-1,3,-1,-1,2,4,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1255() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,-1,5,-1,-1,0,6,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1256() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,0,7,2,-1,-1,5,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1257() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,0,7,2,-1,0,3,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1258() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,0,0,-1,-1,0,7,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1259() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,2,-1,-1,0,0,-1,-1,0,7,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1260() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,6,7,-1,-1,0,0,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1261() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,0,0,-1,-1,0,8,2,-1,-1,2,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1262() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,6,0,-1,-1,0,7,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1263() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,0,-1,-1,0,8,2,-1,0,5,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1264() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,-1,-1,7,0,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1265() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,5,-1,-1,7,0,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1266() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,7,0,-1,-1,0,8,2,-1,-1,4,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1267() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,0,-1,5,0,-1,-1,0,6,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1268() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,4,-1,-1,-1,0,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1269() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,6,-1,-1,-1,0,7,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1270() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,0,-1,0,7,-1,-1,0,8,2,-1,-1,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1271() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,-1,3,-1,-1,4,5,5,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1272() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,3,-1,0,0,-1,-1,5,6,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1273() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,-1,-1,-1,0,0,6,-1,0,0,-1,-1,8,4,2,-1,-1,-1,-1,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1274() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,7,8,2,-1,2,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1275() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,7,8,2,-1,0,7,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1276() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,1,-1,-1,-1,0,0,-1,-1,6,7,2,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1277() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1278() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,4,-1,0,0,-1,-1,7,8,2,-1,-1,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1279() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,4,1,-1,5,0,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1280() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,2,-1,-1,6,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1281() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,0,-1,-1,6,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1282() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,-1,-1,6,7,2,-1,8,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1283() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1284() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,0,7,2,-1,3,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1285() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,0,7,2,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1286() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,1,-1,-1,0,0,-1,-1,0,7,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1287() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,0,-1,-1,0,8,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1288() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,7,0,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1289() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,1,-1,-1,-1,0,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1290() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,7,-1,-1,0,8,2,-1,0,4,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1291() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,7,-1,-1,0,8,2,-1,0,1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1292() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,-1,-1,0,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1293() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,0,8,-1,-1,0,7,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1294() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,7,8,-1,-1,0,6,2,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1295() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,4,-1,-1,6,7,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1296() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,-1,3,-1,-1,4,5,-1,-1,-1,4,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1297() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,-1,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1298() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,3,-1,-1,6,7,2,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1299() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,7,8,2,-1,-1,1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1300() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,0,-1,-1,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1301() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,-1,6,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest1302() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,0,0,-1,-1,5,6,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1303() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,6,-1,-1,-1,7,8,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest1304() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,7,8,2,-1,0,2,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1305() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,3,-1,-1,-1,6,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1306() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,0,6,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1307() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,2,-1,-1,-1,0,6,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1308() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,2,-1,6,7,2,-1,0,1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1309() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,4,1,-1,0,5,2,-1,6,7,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1310() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,0,-1,-1,0,7,2,-1,2,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1311() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,7,-1,0,0,-1,-1,0,8,2,-1,-1,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1312() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,6,7,1,-1,0,0,-1,-1,0,8,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1313() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,6,-1,-1,-1,7,0,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1314() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,-1,-1,-1,0,0,6,-1,8,0,-1,-1,0,4,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1315() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,1,-1,-1,7,0,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1316() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,3,-1,-1,7,0,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1317() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,7,0,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1318() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,4,-1,-1,7,0,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1319() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,4,-1,5,0,-1,-1,0,6,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1320() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,6,-1,-1,-1,0,7,2,-1,0,8,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1321() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,3,-1,-1,-1,0,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1322() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,0,6,-1,-1,0,7,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1323() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,6,3,-1,-1,0,7,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1324() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,2,-1,0,6,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1325() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,0,-1,0,5,2,-1,0,6,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1326() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,3,-1,0,7,2,-1,-1,-1,-1,-1,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1327() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,6,7,2,-1,0,5,2,-1,0,0,4,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1328() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,-1,0,-1,-1,5,6,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1329() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,0,-1,-1,-1,6,-1,-1,3,7,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1330() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,7,8,2,-1,-1,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1331() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,7,8,2,-1,0,6,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1332() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,0,6,-1,-1,0,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1333() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,4,-1,0,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1334() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,3,1,-1,5,6,2,-1,0,7,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1335() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,0,7,-1,-1,8,6,2,-1,0,0,5,-1,-1,-1,-1,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1336() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,3,1,-1,0,5,2,-1,-1,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1337() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,2,-1,-1,-1,0,0,-1,-1,0,6,2,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1338() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,5,-1,-1,0,0,-1,-1,0,7,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1339() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,0,-1,-1,0,7,2,-1,1,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1340() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,6,0,1,-1,7,0,-1,-1,0,8,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1341() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,0,6,-1,-1,0,7,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1342() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,5,-1,-1,0,7,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1343() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,2,-1,0,6,2,-1,0,7,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1344() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,4,-1,5,6,2,-1,0,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1345() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,-1,3,-1,-1,4,5,0,-1,-1,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1346() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,-1,-1,5,6,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1347() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,-1,6,-1,-1,7,5,2,-1,0,0,4,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1348() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,1,-1,-1,3,4,1,-1,0,0,-1,-1,5,6,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1349() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,3,-1,-1,0,0,-1,-1,6,7,2,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1350() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,6,0,1,-1,0,0,-1,-1,7,8,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1351() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,2,-1,-1,-1,6,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1352() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,-1,-1,-1,6,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1353() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,4,-1,0,5,2,-1,6,7,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1354() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,0,-1,-1,0,7,2,-1,-1,1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1355() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,0,0,-1,-1,0,8,2,-1,-1,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1356() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,6,-1,-1,-1,0,7,2,-1,8,0,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1357() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,5,-1,-1,-1,6,0,-1,-1,0,7,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1358() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,7,0,-1,-1,0,8,2,-1,-1,7,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1359() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,5,-1,-1,0,6,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1360() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,0,-1,-1,-1,0,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1361() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,0,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1362() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,4,-1,-1,0,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1363() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,7,-1,-1,0,8,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1364() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,0,-1,-1,-1,6,7,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1365() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,-1,-1,0,6,2,-1,5,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1366() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,2,-1,0,5,2,-1,0,6,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1367() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,0,5,-1,0,6,2,-1,0,3,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1368() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,0,-1,-1,3,4,1,-1,5,6,2,-1,0,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1369() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,-1,3,-1,-1,4,5,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1370() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,2,-1,5,0,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1371() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,0,-1,-1,3,4,1,-1,5,0,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1372() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,5,-1,-1,-1,6,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1373() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,0,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1374() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,0,-1,-1,-1,0,6,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1375() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,2,3,-1,-1,0,4,2,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1376() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,2,0,-1,-1,0,5,2,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1377() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,0,7,2,-1,6,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1378() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,5,-1,-1,0,0,-1,-1,0,6,2,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1379() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,4,7,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,8,2,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest1380() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,2,-1,-1,3,4,1,-1,5,0,-1,-1,0,6,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1381() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,1,-1,-1,-1,6,0,-1,-1,0,7,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1382() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,0,-1,-1,0,8,2,-1,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1383() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,4,-1,-1,-1,6,0,-1,-1,0,7,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1384() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,7,0,-1,-1,0,8,2,-1,-1,3,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1385() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,7,-1,-1,0,8,2,-1,0,7,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1386() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,1,-1,-1,6,7,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1387() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,0,-1,5,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1388() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,2,-1,0,6,2,-1,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1389() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,3,-1,-1,0,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1390() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,0,-1,-1,7,8,2,-1,-1,4,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1391() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,0,-1,-1,-1,6,7,2,-1,0,8,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1392() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,-1,-1,6,7,2,-1,5,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1393() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,4,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1394() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,0,4,1,-1,5,-1,-1,-1,0,0,2,-1,6,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1395() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,0,2,-1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1396() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,0,-1,-1,3,4,1,-1,-1,5,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1397() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,0,0,2,-1,1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1398() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,0,0,2,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1399() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,0,0,2,-1,7,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1400() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,0,0,2,-1,7,0,-1,-1,-1,4,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1401() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,0,0,2,-1,7,0,-1,-1,5,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1402() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1403() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,0,-1,-1,0,0,2,-1,1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1404() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,7,1,-1,0,0,-1,-1,0,0,2,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1405() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,7,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1406() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,6,7,1,-1,8,0,-1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1407() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1408() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,7,-1,-1,0,0,2,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1409() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,3,-1,-1,-1,0,6,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1410() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,4,-1,-1,-1,0,6,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1411() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,-1,-1,0,6,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1412() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,0,-1,-1,0,6,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1413() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,7,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1414() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,0,8,-1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1415() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,7,1,-1,0,8,-1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1416() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,1,-1,-1,-1,6,7,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1417() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,7,8,-1,-1,0,0,2,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1418() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,2,-1,0,0,2,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1419() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,0,-1,0,5,2,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1420() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,-1,3,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1421() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,-1,0,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1422() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,3,1,-1,0,5,2,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1423() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,4,-1,-1,0,0,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1424() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,0,0,-1,-1,0,8,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1425() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,0,-1,-1,0,8,2,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1426() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,-1,-1,6,0,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1427() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,6,0,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1428() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,5,0,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1429() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,0,1,-1,0,7,-1,-1,0,8,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1430() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,-1,-1,-1,-1,-1,-1,-1,7,8,-1,-1,0,4,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1431() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,1,5,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1432() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,1,-1,-1,5,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1433() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,1,0,-1,-1,5,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1434() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1435() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,0,-1,-1,7,0,2,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1436() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,2,-1,0,0,-1,-1,8,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1437() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,0,0,-1,-1,8,0,2,-1,2,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1438() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,6,7,1,-1,0,0,-1,-1,8,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1439() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,0,-1,-1,-1,6,0,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1440() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,0,-1,-1,8,0,2,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1441() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,-1,-1,7,0,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1442() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,7,0,-1,-1,8,0,2,-1,3,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1443() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,0,5,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1444() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,0,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1445() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,7,-1,-1,8,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1446() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,4,5,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1447() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,1,5,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1448() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,6,-1,7,0,2,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1449() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,1,-1,-1,3,4,1,-1,-1,0,-1,-1,5,6,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1450() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,5,-1,-1,-1,0,0,-1,-1,6,7,2,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1451() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,6,-1,-1,0,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1452() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,2,-1,-1,0,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1453() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,3,-1,-1,-1,0,6,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1454() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1455() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,0,5,-1,0,6,2,-1,7,3,2,-1,0,0,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1456() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,-1,3,-1,-1,4,5,-1,-1,6,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1457() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,4,1,-1,-1,0,-1,-1,5,6,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1458() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,1,0,-1,-1,5,6,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1459() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,2,-1,-1,-1,0,0,-1,-1,6,7,2,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1460() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1461() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,-1,-1,5,7,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1462() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,2,-1,6,7,2,-1,0,5,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1463() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,7,8,2,-1,-1,2,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1464() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,3,0,-1,-1,5,6,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1465() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,7,8,2,-1,0,1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1466() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,4,-1,-1,0,0,-1,-1,6,7,2,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1467() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,1,-1,-1,0,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1468() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,-1,-1,7,0,-1,-1,6,8,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1469() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,1,-1,-1,3,4,1,-1,5,0,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1470() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,0,5,2,-1,6,7,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1471() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,-1,3,-1,-1,4,5,-1,-1,2,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1472() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,0,3,-1,-1,4,5,2,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1473() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,7,8,2,-1,-1,3,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1474() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,0,-1,-1,5,6,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1475() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,4,0,-1,-1,5,6,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1476() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,0,0,-1,-1,5,6,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1477() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,7,8,2,-1,0,5,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1478() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,4,-1,-1,0,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1479() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,5,0,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1480() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,-1,-1,-1,-1,-1,-1,-1,4,0,-1,-1,7,8,2,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest1481() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,7,0,-1,-1,8,6,2,-1,0,0,5,-1,-1,-1,-1,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1482() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,4,-1,5,0,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1483() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,0,-1,-1,0,6,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1484() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest1485() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,-1,3,-1,-1,4,5,1,-1,-1,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1486() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,7,8,2,-1,1,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1487() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,2,-1,-1,3,4,1,-1,0,0,-1,-1,5,6,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1488() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,0,6,-1,-1,0,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1489() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,3,-1,5,0,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1490() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,-1,-1,0,6,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1491() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,-1,-1,6,7,2,-1,7,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1492() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,3,-1,6,7,2,-1,0,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1493() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,-1,3,-1,-1,4,5,-1,-1,5,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1494() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,0,-1,-1,3,5,2,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1495() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,0,-1,-1,3,4,1,-1,-1,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1496() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1497() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,7,-1,-1,0,0,-1,-1,0,0,-1,-1,4,8,2,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest1498() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,6,-1,0,0,-1,-1,7,8,2,-1,-1,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1499() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,6,0,-1,-1,5,7,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1500() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,1,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1501() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,-1,-1,-1,0,6,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1502() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,2,-1,6,7,2,-1,0,6,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1503() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,7,8,2,-1,8,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1504() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,7,8,2,-1,7,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1505() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,7,6,2,-1,0,0,5,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1506() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,1,-1,-1,0,0,-1,-1,6,7,2,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1507() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,0,-1,-1,7,8,2,-1,6,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1508() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,4,0,1,-1,0,0,-1,-1,0,0,-1,-1,7,8,2,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest1509() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,0,5,-1,6,0,-1,-1,7,3,2,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1510() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,7,0,-1,-1,6,8,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1511() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,4,-1,-1,-1,6,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1512() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,3,-1,0,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1513() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,0,5,-1,0,6,-1,-1,7,3,2,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1514() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,-1,-1,6,7,2,-1,6,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1515() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,-1,3,-1,-1,4,5,2,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1516() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,0,-1,-1,-1,0,-1,-1,3,6,2,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1517() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,3,1,-1,5,6,2,-1,-1,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1518() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,6,0,1,-1,0,0,-1,-1,7,8,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1519() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,-1,-1,7,0,-1,-1,8,6,2,-1,0,0,5,-1,-1,-1,-1,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1520() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,0,-1,-1,-1,0,6,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1521() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,0,5,2,-1,6,7,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1522() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,2,3,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1523() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,0,4,1,-1,5,-1,-1,-1,0,0,2,-1,6,7,-1,-1,1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1524() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,0,4,1,-1,5,6,1,-1,0,0,2,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1525() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,3,1,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1526() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,0,0,2,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1527() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1528() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,0,0,-1,-1,0,0,2,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1529() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,2,-1,0,0,-1,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1530() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,0,0,-1,-1,0,0,2,-1,3,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1531() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,8,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,2,-1,0,4,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1532() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,0,-1,-1,-1,6,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1533() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,0,-1,-1,-1,6,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1534() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,6,-1,-1,-1,7,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1535() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,6,-1,-1,7,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1536() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,4,-1,7,0,-1,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1537() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,8,0,-1,-1,0,0,2,-1,3,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1538() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,7,-1,-1,0,0,2,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1539() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,4,7,1,-1,0,0,-1,-1,0,8,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1540() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,4,-1,7,8,-1,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1541() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,2,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1542() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,0,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1543() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1544() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,0,0,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1545() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,-1,-1,-1,-1,-1,-1,-1,7,0,-1,-1,0,4,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1546() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,0,-1,-1,-1,6,0,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1547() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,2,-1,-1,-1,6,0,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1548() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,0,-1,-1,-1,0,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1549() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,-1,-1,0,7,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1550() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,6,-1,-1,0,7,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1551() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,0,1,-1,-1,-1,-1,-1,0,8,-1,-1,0,4,2,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1552() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,6,0,1,-1,0,7,-1,-1,0,8,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1553() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,4,1,-1,0,5,2,-1,0,6,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1554() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1555() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,4,-1,-1,5,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1556() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,1,-1,-1,3,4,1,-1,-1,0,-1,-1,5,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1557() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,0,-1,-1,3,4,1,-1,-1,5,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1558() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,0,-1,-1,7,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1559() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,1,-1,-1,-1,6,0,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1560() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,5,-1,-1,7,0,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1561() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,7,0,-1,-1,8,0,2,-1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1562() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,0,-1,-1,-1,0,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1563() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,7,-1,-1,8,0,2,-1,1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1564() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,5,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1565() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,3,1,-1,5,0,2,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1566() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,3,1,-1,5,0,2,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1567() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,0,-1,-1,3,4,1,-1,5,6,2,-1,7,0,2,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1568() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,3,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1569() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,6,7,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1570() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,-1,3,-1,-1,4,5,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1571() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,-1,3,-1,-1,4,5,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1572() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,-1,3,-1,-1,4,5,-1,-1,-1,3,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1573() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,-1,3,-1,-1,4,5,-1,-1,-1,1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1574() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,-1,0,-1,-1,5,6,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1575() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,-1,0,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1576() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,2,-1,0,0,-1,-1,5,6,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1577() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,0,-1,-1,-1,0,0,-1,-1,6,7,2,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1578() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,0,6,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1579() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,0,6,2,-1,7,8,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1580() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,-1,3,-1,-1,4,5,-1,-1,-1,-1,-1,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1581() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,7,8,2,-1,7,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1582() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,0,0,-1,-1,8,7,2,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1583() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,0,6,-1,-1,7,5,2,-1,0,0,4,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1584() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,0,-1,-1,0,3,2,-1,6,7,2,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1585() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,-1,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1586() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,2,-1,-1,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1587() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,2,-1,-1,0,0,-1,-1,6,7,2,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1588() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,0,-1,-1,-1,6,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1589() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,-1,-1,-1,0,0,-1,-1,0,7,-1,-1,4,8,2,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest1590() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,0,-1,0,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1591() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,3,-1,0,5,2,-1,6,7,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1592() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,-1,3,-1,-1,4,5,2,-1,-1,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1593() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,-1,6,-1,-1,5,7,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1594() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,7,8,2,-1,6,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1595() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,2,-1,-1,3,4,1,-1,0,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1596() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,5,-1,-1,0,6,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1597() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,0,-1,6,7,2,-1,0,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1598() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,0,-1,-1,6,5,2,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1599() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,6,7,2,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1600() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,3,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1601() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,-1,-1,6,7,2,-1,0,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1602() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,2,-1,6,7,2,-1,0,4,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1603() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,-1,3,-1,-1,4,5,6,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1604() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,-1,3,-1,-1,4,5,5,-1,-1,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1605() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,-1,-1,6,5,2,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1606() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,3,-1,-1,5,6,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1607() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,7,8,2,-1,4,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1608() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,0,-1,-1,7,8,2,-1,4,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1609() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,6,0,1,-1,0,0,-1,-1,7,8,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1610() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,6,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1611() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,2,-1,6,7,2,-1,0,8,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1612() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,-1,3,-1,-1,4,5,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1613() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,7,8,2,-1,5,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1614() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,7,-1,-1,0,0,6,-1,0,0,-1,-1,8,4,2,-1,-1,-1,-1,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1615() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,-1,-1,6,7,2,-1,3,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1616() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,5,-1,6,7,2,-1,0,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1617() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,0,6,2,-1,7,5,2,-1,0,0,4,-1,0,0,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1618() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,0,0,-1,-1,6,7,2,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1619() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,1,-1,-1,3,4,1,-1,0,5,2,-1,6,7,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1620() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,3,1,-1,5,6,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1621() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1622() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,6,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest1623() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,0,4,1,-1,5,-1,-1,-1,0,0,2,-1,6,7,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1624() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,4,1,-1,0,5,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1625() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,0,1,-1,0,0,2,-1,4,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1626() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1627() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,2,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1628() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,4,-1,-1,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1629() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,3,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1630() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1631() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,0,0,2,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1632() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,0,0,2,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1633() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,1,-1,-1,0,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1634() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,7,-1,0,0,-1,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1635() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,0,0,-1,-1,0,0,2,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1636() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,6,7,-1,-1,0,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1637() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,4,-1,5,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1638() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,0,-1,-1,0,0,2,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1639() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,8,-1,-1,-1,-1,-1,-1,4,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1640() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,7,0,-1,-1,0,0,2,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1641() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,4,0,1,-1,0,0,-1,-1,7,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1642() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,8,0,-1,-1,0,0,2,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1643() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,8,0,-1,-1,0,0,2,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1644() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,6,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1645() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,1,-1,-1,-1,0,6,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1646() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,0,6,-1,-1,0,7,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1647() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,6,7,-1,-1,0,0,2,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1648() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,0,6,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1649() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,0,-1,-1,-1,0,0,2,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1650() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,8,-1,-1,0,0,2,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1651() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,7,8,-1,-1,0,0,2,-1,4,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1652() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,6,5,2,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1653() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,0,-1,-1,3,4,1,-1,5,6,2,-1,0,0,2,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1654() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,3,6,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1655() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,3,-1,0,0,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1656() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,0,-1,-1,3,4,1,-1,0,0,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1657() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1658() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,1,-1,-1,0,0,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1659() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,5,-1,0,0,-1,-1,0,8,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1660() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,0,1,-1,-1,-1,-1,-1,8,0,-1,-1,0,4,2,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1661() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,6,0,1,-1,0,7,2,-1,8,0,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1662() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,3,1,-1,0,5,2,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1663() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,0,-1,5,0,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1664() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,2,-1,-1,-1,0,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1665() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,7,-1,-1,0,8,2,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1666() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,7,-1,-1,0,8,2,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1667() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,2,-1,-1,0,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1668() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,7,-1,-1,0,8,2,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1669() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,6,0,1,-1,0,7,2,-1,0,8,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1670() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,-1,5,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1671() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,2,-1,-1,5,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1672() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,-1,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1673() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,0,0,-1,-1,3,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1674() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,7,0,2,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1675() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,7,0,2,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1676() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,0,-1,-1,7,0,2,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1677() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,2,-1,-1,3,4,1,-1,5,0,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1678() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,3,-1,5,0,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1679() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,6,0,-1,-1,3,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1680() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,0,8,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1681() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,0,-1,-1,-1,6,0,2,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1682() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,7,6,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1683() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,-1,-1,5,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1684() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,0,6,2,-1,7,0,2,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1685() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1686() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,6,3,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1687() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,-1,-1,5,6,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1688() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,0,-1,-1,-1,0,0,-1,-1,6,7,2,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1689() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,0,-1,-1,7,8,2,-1,-1,3,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1690() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,2,-1,0,0,-1,-1,7,8,2,-1,-1,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1691() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,-1,3,-1,-1,4,5,-1,-1,4,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1692() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1693() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,4,-1,-1,-1,0,0,-1,-1,6,7,2,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1694() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,0,1,-1,0,0,-1,-1,0,0,-1,-1,4,8,2,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest1695() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,0,-1,-1,-1,6,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1696() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,-1,-1,7,5,2,-1,0,0,4,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1697() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,-1,-1,6,7,2,-1,1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1698() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,-1,3,-1,-1,4,5,0,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1699() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,0,-1,-1,-1,6,7,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1700() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,1,-1,-1,-1,6,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1701() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,0,3,-1,-1,6,7,2,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1702() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,2,-1,6,7,2,-1,0,7,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1703() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,0,-1,-1,0,0,-1,-1,6,7,2,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1704() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,0,-1,-1,-1,6,7,2,-1,8,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1705() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,7,8,2,-1,3,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1706() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,0,-1,-1,7,8,2,-1,-1,1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1707() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,-1,-1,6,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1708() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,4,-1,-1,0,6,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1709() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1710() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,-1,3,-1,-1,4,5,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1711() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,3,-1,0,0,-1,-1,7,8,2,-1,-1,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1712() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,2,-1,0,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1713() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,0,-1,-1,0,0,-1,-1,3,6,2,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1714() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,6,0,-1,-1,7,5,2,-1,0,0,4,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1715() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,6,-1,7,8,2,-1,0,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest1716() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,-1,3,-1,-1,4,5,3,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1717() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,7,8,2,-1,-1,4,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1718() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,0,0,-1,-1,6,5,2,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1719() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,0,-1,-1,7,8,2,-1,-1,6,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1720() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,1,3,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1721() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,4,-1,-1,-1,-1,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1722() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,0,4,1,-1,5,-1,-1,-1,0,0,2,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1723() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,0,4,1,-1,5,-1,-1,-1,0,0,2,-1,6,7,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1724() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,0,2,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1725() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,0,4,1,-1,5,6,1,-1,0,0,2,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1726() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,3,-1,-1,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1727() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1728() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,0,0,2,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1729() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,0,-1,-1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1730() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,7,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1731() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,4,7,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1732() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,0,-1,-1,0,0,2,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1733() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,0,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1734() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,4,1,-1,5,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1735() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,4,-1,-1,-1,6,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1736() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,0,-1,-1,-1,0,0,2,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1737() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,6,7,-1,-1,0,0,2,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1738() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,6,7,-1,-1,0,8,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1739() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,5,-1,0,7,-1,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1740() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,0,8,-1,-1,0,0,2,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1741() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,0,8,-1,-1,0,0,2,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1742() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,0,8,-1,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1743() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,8,-1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1744() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,1,-1,-1,6,7,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1745() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,0,6,2,-1,0,0,2,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1746() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,1,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1747() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,4,1,-1,-1,5,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1748() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,0,7,2,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1749() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,0,7,2,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1750() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,0,6,-1,-1,0,0,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1751() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,7,-1,0,0,-1,-1,0,8,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1752() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,3,-1,5,0,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1753() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,7,0,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1754() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,6,0,1,-1,7,0,-1,-1,0,8,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1755() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,6,5,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1756() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,0,-1,-1,-1,6,7,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1757() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,3,1,-1,0,5,2,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1758() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,7,0,2,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1759() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,7,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1760() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,1,-1,-1,0,0,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1761() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,0,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1762() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,6,7,-1,-1,0,0,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1763() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,0,0,-1,-1,8,0,2,-1,3,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1764() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,4,1,-1,-1,-1,-1,-1,0,0,-1,-1,8,0,2,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1765() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,4,-1,-1,-1,6,0,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1766() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,2,-1,-1,7,0,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1767() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1768() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,6,-1,-1,-1,0,7,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1769() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,7,-1,-1,8,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1770() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,7,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1771() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,6,0,1,-1,0,7,-1,-1,8,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1772() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1773() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,0,-1,-1,3,4,1,-1,5,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1774() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,0,-1,5,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1775() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,5,-1,6,0,2,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1776() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,4,1,-1,0,5,2,-1,6,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1777() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,6,7,-1,-1,5,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1778() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,-1,3,-1,-1,4,5,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1779() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,2,3,-1,-1,4,5,2,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1780() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,2,-1,-1,5,6,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1781() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,7,8,2,-1,-1,6,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1782() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,7,8,2,-1,-1,7,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1783() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,7,8,2,-1,4,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1784() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,0,-1,-1,7,8,2,-1,8,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1785() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,0,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1786() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,-1,3,-1,-1,4,5,-1,-1,-1,6,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1787() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,-1,3,-1,-1,4,5,-1,-1,-1,-1,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1788() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,2,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1789() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,1,-1,-1,5,6,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1790() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,0,-1,-1,3,4,1,-1,-1,0,-1,-1,5,6,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1791() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,7,8,2,-1,5,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1792() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,0,6,-1,-1,0,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1793() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,3,-1,-1,6,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1794() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,1,3,-1,-1,4,5,2,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1795() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,2,-1,-1,0,6,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1796() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,3,-1,-1,-1,0,0,-1,-1,6,7,2,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1797() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,-1,-1,-1,0,0,-1,-1,0,0,-1,-1,4,7,2,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1798() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,0,-1,-1,7,8,2,-1,1,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1799() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,0,1,-1,0,0,6,-1,0,0,-1,-1,8,4,2,-1,0,0,-1,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1800() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,0,-1,0,0,-1,-1,5,6,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1801() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,7,8,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1802() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,-1,-1,0,7,-1,-1,8,6,2,-1,0,0,5,-1,-1,-1,-1,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1803() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,0,3,2,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1804() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,0,4,1,-1,5,-1,-1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1805() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,0,4,1,-1,5,-1,-1,-1,0,0,2,-1,6,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1806() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,0,4,1,-1,5,-1,-1,-1,0,0,2,-1,6,7,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1807() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,0,4,1,-1,0,5,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1808() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1809() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,0,2,-1,1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1810() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,6,4,1,-1,-1,-1,-1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1811() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,4,-1,-1,-1,0,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1812() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1813() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,6,-1,0,0,-1,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1814() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,3,-1,0,0,-1,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1815() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,8,-1,0,0,-1,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1816() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,8,-1,0,0,-1,-1,0,0,2,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1817() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,5,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1818() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,8,0,-1,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1819() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,0,-1,-1,-1,0,6,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1820() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,0,8,-1,-1,0,0,2,-1,3,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1821() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,6,7,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1822() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,0,-1,-1,6,7,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1823() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,7,-1,-1,-1,-1,-1,-1,8,4,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1824() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,8,7,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1825() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,7,8,-1,-1,0,0,2,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1826() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,6,5,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1827() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1828() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,0,-1,-1,0,7,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1829() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,6,0,1,-1,0,0,-1,-1,0,7,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1830() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,3,-1,0,0,-1,-1,0,8,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1831() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,6,7,-1,-1,0,0,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1832() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,4,-1,-1,7,0,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1833() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1834() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,0,4,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1835() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,7,-1,-1,0,8,2,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1836() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,2,-1,-1,0,7,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1837() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,1,-1,-1,3,4,1,-1,5,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1838() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,0,-1,-1,-1,6,7,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1839() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,6,-1,0,7,2,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1840() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,-1,-1,5,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1841() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,7,0,2,-1,2,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1842() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,2,-1,0,0,-1,-1,5,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1843() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,-1,-1,-1,0,0,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1844() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1845() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,0,-1,-1,7,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1846() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,6,0,1,-1,0,0,-1,-1,7,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1847() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,4,7,1,-1,0,0,-1,-1,0,0,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1848() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,0,0,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1849() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,0,-1,-1,-1,6,0,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1850() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,7,0,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1851() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,3,1,-1,5,0,2,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1852() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,2,-1,-1,3,4,1,-1,0,5,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1853() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,0,6,-1,-1,7,0,2,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1854() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,0,-1,-1,-1,6,7,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1855() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,5,-1,-1,-1,6,7,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1856() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,4,1,-1,5,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1857() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,4,-1,6,0,2,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1858() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,0,5,2,-1,6,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1859() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,4,-1,5,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1860() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,0,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1861() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,0,-1,-1,6,0,-1,-1,3,7,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1862() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,-1,3,-1,-1,4,5,-1,-1,-1,5,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1863() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,7,8,2,-1,6,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1864() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,-1,-1,0,0,-1,-1,7,6,2,-1,0,0,5,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1865() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,-1,-1,0,0,-1,-1,6,7,2,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1866() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,4,-1,0,0,-1,-1,5,6,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1867() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,-1,-1,-1,0,0,-1,-1,6,7,2,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1868() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,4,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1869() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,0,-1,-1,7,8,2,-1,-1,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1870() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,2,-1,-1,0,-1,-1,5,6,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1871() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,-1,-1,-1,0,0,-1,-1,7,0,-1,-1,4,8,2,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest1872() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,7,8,2,-1,0,8,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1873() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,7,-1,0,0,-1,-1,7,8,2,-1,-1,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1874() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,0,-1,0,0,-1,-1,7,8,2,-1,-1,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1875() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,0,-1,-1,7,8,2,-1,2,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1876() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,3,0,-1,-1,6,7,2,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1877() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,0,-1,-1,0,6,-1,-1,3,7,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1878() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,-1,3,-1,-1,4,5,3,-1,-1,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1879() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,-1,3,-1,-1,4,5,6,-1,-1,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1880() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,-1,3,-1,-1,4,5,-1,-1,-1,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1881() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,4,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,7,8,2,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest1882() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,6,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1883() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,-1,-1,-1,0,0,6,-1,7,0,-1,-1,8,4,2,-1,-1,-1,-1,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1884() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,1,-1,-1,6,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1885() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,0,-1,-1,-1,0,6,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1886() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,0,4,1,-1,0,5,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1887() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,0,4,1,-1,5,6,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1888() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,0,4,1,-1,5,0,1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1889() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,-1,-1,0,0,2,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1890() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,0,2,-1,4,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1891() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,3,-1,0,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1892() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,0,0,2,-1,7,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1893() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,0,0,2,-1,7,0,-1,-1,-1,3,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1894() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,0,0,2,-1,7,0,-1,-1,-1,2,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1895() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,0,1,-1,0,0,-1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1896() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,0,0,-1,-1,0,0,2,-1,4,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1897() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,4,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,2,-1,8,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1898() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,0,0,-1,-1,0,0,2,-1,5,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1899() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,1,-1,-1,3,4,1,-1,5,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1900() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,0,-1,-1,-1,6,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1901() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,-1,-1,-1,-1,-1,-1,-1,7,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1902() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,7,0,-1,-1,0,0,2,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1903() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,7,0,-1,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1904() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,3,5,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1905() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,7,-1,-1,0,0,2,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1906() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,7,-1,-1,-1,-1,-1,-1,0,8,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1907() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,7,-1,-1,0,0,2,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1908() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,7,-1,-1,0,0,2,-1,2,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1909() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,6,7,1,-1,0,8,-1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1910() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,2,-1,5,6,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1911() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,4,-1,-1,-1,-1,-1,-1,7,8,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1912() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,0,5,2,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1913() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,1,-1,-1,3,4,1,-1,5,6,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1914() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1915() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,2,-1,-1,0,0,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1916() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,0,-1,-1,0,7,2,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1917() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,6,7,1,-1,0,0,-1,-1,0,8,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1918() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,-1,-1,7,0,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1919() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,7,0,-1,-1,0,8,2,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1920() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,0,1,-1,7,0,-1,-1,0,8,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1921() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,4,-1,-1,-1,0,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1922() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,7,-1,-1,0,8,2,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1923() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,6,7,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1924() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1925() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,7,0,2,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1926() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,2,-1,0,0,-1,-1,7,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1927() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,0,6,-1,-1,7,0,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1928() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,3,-1,-1,-1,0,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1929() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,1,-1,-1,0,7,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1930() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,5,-1,-1,0,7,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1931() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,0,-1,0,7,-1,-1,8,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1932() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,2,-1,5,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1933() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,3,-1,0,5,2,-1,6,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1934() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,6,7,2,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1935() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,0,4,-1,5,3,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1936() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,0,-1,-1,-1,0,0,-1,-1,6,7,2,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1937() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,5,-1,-1,6,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1938() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,4,1,-1,0,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1939() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,6,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1940() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,2,-1,-1,3,4,1,-1,-1,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1941() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,0,-1,-1,3,4,1,-1,0,0,-1,-1,5,6,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1942() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,-1,3,-1,-1,4,5,4,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1943() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,7,8,2,-1,3,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1944() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,2,-1,6,7,2,-1,0,3,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1945() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,-1,3,-1,-1,4,5,-1,-1,-1,-1,-1,-1,0,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1946() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,3,1,-1,5,6,2,-1,-1,7,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1947() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,-1,-1,0,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1948() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,6,0,1,-1,7,8,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest1949() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,2,0,-1,-1,5,6,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1950() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,3,1,-1,5,6,2,-1,0,7,2,-1,0,0,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1951() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,7,8,2,-1,2,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1952() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,3,-1,-1,0,-1,-1,5,6,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1953() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1954() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,0,6,-1,-1,0,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1955() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,5,-1,0,0,-1,-1,7,8,2,-1,-1,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1956() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,0,-1,-1,7,8,2,-1,5,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1957() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,0,-1,-1,7,8,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest1958() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,0,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1959() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,4,-1,-1,5,6,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1960() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,0,4,1,-1,5,-1,-1,-1,0,0,2,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1961() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,0,4,1,-1,5,-1,-1,-1,0,0,2,-1,6,7,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1962() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,0,3,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1963() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,0,2,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1964() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,-1,-1,0,0,2,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1965() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,2,-1,0,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1966() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,0,0,2,-1,7,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1967() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,-1,-1,0,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1968() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,5,-1,0,0,-1,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1969() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,4,-1,-1,-1,-1,-1,-1,-1,7,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1970() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,7,-1,-1,8,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1971() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,4,5,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1972() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,0,6,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1973() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,7,-1,-1,0,0,2,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1974() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,4,-1,0,7,-1,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1975() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,0,-1,-1,-1,6,7,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1976() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,0,6,-1,-1,7,8,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1977() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,7,8,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1978() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,0,-1,7,8,-1,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1979() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,2,-1,0,0,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1980() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,0,7,2,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1981() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,0,-1,-1,0,7,2,-1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1982() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,4,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1983() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,0,-1,-1,-1,6,0,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1984() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,0,-1,-1,0,8,2,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1985() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,2,-1,-1,7,0,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1986() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,5,-1,-1,7,0,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1987() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,7,0,-1,-1,0,8,2,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1988() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,7,-1,-1,0,8,2,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1989() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,1,-1,-1,6,7,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1990() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,0,-1,-1,7,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1991() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,0,-1,0,0,-1,-1,5,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1992() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,6,0,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1993() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,0,-1,-1,8,0,2,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1994() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,5,-1,-1,-1,6,0,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1995() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,7,0,-1,-1,8,0,2,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1996() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,-1,-1,6,0,2,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1997() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,2,-1,6,0,2,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1998() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,-1,-1,-1,0,0,6,-1,0,0,-1,-1,7,4,2,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest1999() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,1,-1,-1,-1,0,6,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2000() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,0,-1,-1,-1,0,6,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2001() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,2,-1,6,7,2,-1,0,2,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2002() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,0,1,-1,0,0,-1,-1,7,8,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2003() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,-1,-1,0,7,-1,-1,6,8,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2004() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,7,-1,0,0,-1,-1,8,7,2,-1,-1,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2005() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,0,-1,-1,7,8,2,-1,7,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2006() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,0,0,1,-1,4,-1,-1,-1,5,0,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2007() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,1,-1,4,5,1,-1,2,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2008() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,0,0,1,-1,4,5,1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2009() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,1,-1,4,5,1,-1,6,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2010() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,1,-1,4,5,1,-1,3,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2011() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,0,0,1,-1,4,5,1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2012() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,0,0,1,-1,4,5,1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2013() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,0,4,1,-1,5,0,1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2014() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,4,1,-1,5,0,1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2015() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,4,6,1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2016() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,2,-1,-1,3,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2017() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,0,1,-1,5,-1,-1,-1,-1,-1,-1,-1,6,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2018() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,0,1,-1,5,-1,-1,-1,-1,-1,-1,-1,6,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2019() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,0,1,-1,5,-1,-1,-1,-1,-1,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2020() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,0,1,-1,5,-1,-1,-1,-1,-1,-1,-1,6,7,-1,-1,2,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2021() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,0,1,-1,5,-1,-1,-1,-1,-1,-1,-1,6,7,-1,-1,1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2022() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,1,-1,5,0,5,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2023() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,1,-1,4,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2024() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,0,1,-1,5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2025() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,0,-1,-1,0,0,2,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2026() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,7,1,-1,0,0,-1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2027() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,7,0,-1,-1,0,0,2,-1,4,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2028() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,8,0,-1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2029() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,7,-1,-1,0,0,2,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2030() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,0,6,-1,-1,0,0,2,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2031() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,5,-1,-1,0,7,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2032() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,6,7,-1,-1,0,8,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2033() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,8,-1,-1,0,0,2,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2034() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,7,8,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2035() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,4,0,1,-1,0,0,-1,-1,7,8,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2036() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,6,7,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2037() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,-1,-1,0,0,2,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2038() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,0,0,2,-1,-1,-1,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2039() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,0,0,2,-1,-1,-1,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2040() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,4,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2041() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,3,-1,-1,-1,0,0,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2042() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,0,6,-1,-1,0,0,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2043() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,4,-1,-1,-1,-1,-1,-1,-1,7,0,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2044() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,6,-1,-1,-1,0,7,2,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2045() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,2,-1,-1,3,4,1,-1,0,5,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2046() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,0,1,-1,-1,-1,-1,-1,0,4,-1,-1,0,8,2,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2047() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,2,-1,-1,-1,6,7,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2048() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,-1,-1,-1,-1,-1,-1,-1,7,4,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2049() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,2,-1,-1,3,4,1,-1,5,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2050() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,0,6,2,-1,0,5,2,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2051() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2052() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,6,7,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2053() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,0,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2054() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,0,-1,-1,3,4,1,-1,0,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2055() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,0,-1,-1,0,0,2,-1,4,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2056() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,8,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2057() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,6,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2058() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,0,-1,-1,0,0,2,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2059() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,2,-1,-1,6,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2060() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,8,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2061() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,3,-1,7,0,-1,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2062() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,8,0,-1,-1,0,0,2,-1,2,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2063() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,0,5,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2064() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,2,-1,-1,-1,0,6,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2065() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,7,-1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2066() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,6,7,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2067() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,8,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2068() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,2,-1,-1,-1,6,7,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2069() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,-1,-1,0,0,2,-1,-1,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2070() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,0,0,2,-1,-1,-1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2071() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,2,-1,-1,5,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2072() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,7,-1,0,0,-1,-1,0,7,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2073() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,6,7,-1,-1,0,0,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2074() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,0,-1,-1,0,8,2,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2075() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,0,-1,-1,0,8,2,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2076() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,4,-1,-1,-1,6,0,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2077() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,6,0,1,-1,0,7,-1,-1,0,8,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2078() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,2,-1,-1,6,7,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2079() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,0,-1,-1,0,3,2,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2080() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2081() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2082() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,-1,5,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2083() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,0,6,-1,-1,0,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2084() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,0,-1,-1,0,0,2,-1,2,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2085() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,6,0,1,-1,0,0,-1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2086() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,0,0,-1,-1,0,0,2,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2087() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,0,-1,-1,0,0,2,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2088() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,-1,-1,-1,-1,-1,-1,-1,8,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2089() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,6,7,-1,-1,8,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2090() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,6,7,-1,-1,8,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2091() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,4,-1,-1,7,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2092() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,6,0,1,-1,7,0,-1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2093() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,3,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2094() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,6,-1,-1,-1,0,7,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2095() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,0,-1,0,7,-1,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2096() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,6,-1,0,8,-1,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2097() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,3,1,-1,0,0,2,-1,5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2098() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,4,1,-1,5,6,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2099() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,8,-1,-1,0,0,2,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2100() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,7,8,-1,-1,0,0,2,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2101() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,0,-1,-1,3,4,1,-1,5,6,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2102() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,2,-1,-1,3,4,1,-1,-1,0,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2103() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,3,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2104() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,1,-1,-1,-1,0,0,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2105() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,3,-1,0,0,-1,-1,0,7,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2106() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,0,-1,-1,0,7,2,-1,1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2107() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,0,0,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2108() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,6,7,1,-1,0,0,-1,-1,0,8,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2109() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,6,7,-1,-1,0,8,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2110() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,0,-1,-1,0,8,2,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2111() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,7,0,-1,-1,0,8,2,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2112() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,0,5,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2113() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,5,-1,-1,0,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2114() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,7,-1,-1,0,8,2,-1,2,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2115() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,-1,-1,0,6,2,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2116() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,2,-1,0,5,2,-1,0,6,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2117() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,0,0,2,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2118() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,0,0,2,-1,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2119() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,5,-1,-1,0,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2120() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,0,0,-1,-1,0,0,2,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2121() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,0,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2122() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,0,-1,-1,0,0,2,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2123() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,0,-1,-1,0,0,2,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2124() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,7,0,-1,-1,0,0,2,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2125() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,7,0,-1,-1,0,0,2,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2126() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,0,-1,7,0,-1,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2127() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,2,-1,-1,3,4,1,-1,5,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2128() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,4,1,-1,0,5,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2129() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,0,1,-1,-1,-1,-1,-1,0,4,-1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2130() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,6,0,1,-1,0,7,-1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2131() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,4,-1,5,6,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2132() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,-1,-1,6,7,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2133() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,6,0,1,-1,7,8,-1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2134() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,6,0,1,-1,7,8,-1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2135() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,-1,-1,0,0,2,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2136() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,-1,-1,0,0,2,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2137() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,0,0,2,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2138() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,4,1,-1,0,0,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2139() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,4,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2140() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,0,7,2,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2141() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,3,0,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2142() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,5,-1,-1,-1,6,0,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2143() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,7,0,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2144() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,0,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2145() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,7,-1,-1,0,8,2,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2146() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,-1,-1,-1,6,7,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2147() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,5,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2148() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,3,-1,0,6,2,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2149() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,3,-1,5,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2150() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,4,-1,-1,5,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2151() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,0,0,2,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2152() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,4,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2153() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,-1,-1,-1,0,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2154() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,6,0,1,-1,0,0,-1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2155() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,6,7,1,-1,0,0,-1,-1,0,0,2,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2156() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,2,-1,-1,-1,6,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2157() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,0,-1,-1,0,0,2,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2158() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,0,-1,-1,0,0,2,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2159() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,0,-1,-1,6,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2160() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,7,0,-1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2161() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,6,7,1,-1,8,0,-1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2162() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,6,-1,-1,-1,7,8,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2163() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,8,-1,-1,0,0,2,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2164() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,6,0,1,-1,7,8,-1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2165() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,0,0,2,-1,-1,-1,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2166() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,-1,0,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2167() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2168() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,4,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2169() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,6,0,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2170() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,0,-1,-1,0,8,2,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2171() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,4,-1,-1,6,0,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2172() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,2,5,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2173() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,6,-1,-1,-1,0,7,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2174() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,-1,-1,0,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2175() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,0,8,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2176() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,6,7,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2177() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2178() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,5,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2179() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,0,0,2,-1,7,0,-1,-1,1,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2180() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,3,-1,-1,-1,0,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2181() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,3,-1,-1,0,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2182() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,2,-1,-1,0,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2183() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,0,0,-1,-1,0,0,2,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2184() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,6,7,1,-1,0,0,-1,-1,0,0,2,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2185() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,5,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2186() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,5,-1,-1,-1,6,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2187() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,7,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2188() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,7,-1,7,0,-1,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2189() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,0,-1,-1,3,4,1,-1,5,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2190() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,7,-1,-1,0,0,2,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2191() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,7,-1,-1,0,0,2,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2192() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,4,-1,-1,0,7,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2193() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,0,-1,-1,-1,6,7,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2194() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,6,-1,-1,-1,7,8,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2195() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,-1,-1,0,0,2,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2196() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,2,-1,5,6,2,-1,0,0,2,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2197() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,6,7,2,-1,0,0,2,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2198() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,4,0,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2199() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,2,-1,-1,-1,0,0,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2200() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,6,-1,-1,7,0,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2201() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,3,1,-1,0,5,2,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2202() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,3,-1,-1,0,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2203() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,3,-1,5,6,2,-1,0,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2204() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,0,-1,-1,0,0,2,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2205() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,0,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2206() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,6,7,1,-1,0,0,-1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2207() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,5,-1,7,0,-1,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2208() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,7,0,-1,-1,0,0,2,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2209() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,4,-1,-1,-1,-1,-1,-1,8,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2210() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,7,-1,-1,0,0,2,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2211() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,7,-1,-1,0,0,2,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2212() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,3,-1,0,8,-1,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2213() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,6,7,1,-1,0,8,-1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2214() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,3,-1,-1,-1,6,7,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2215() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,2,-1,-1,6,7,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2216() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,0,6,2,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2217() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,2,-1,0,0,2,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2218() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,0,7,2,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2219() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,0,-1,-1,-1,0,6,2,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2220() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,0,6,-1,-1,7,0,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2221() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,4,-1,7,0,-1,-1,0,8,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2222() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,2,-1,5,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2223() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2224() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,0,-1,-1,5,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2225() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2226() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,6,7,-1,-1,0,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2227() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,6,0,1,-1,0,0,2,-1,0,0,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2228() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,0,-1,-1,-1,6,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2229() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,1,-1,-1,6,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2230() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,7,-1,-1,0,0,2,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2231() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,7,-1,-1,0,8,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2232() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,0,-1,-1,-1,6,7,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2233() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,8,-1,-1,0,0,2,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2234() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,7,6,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2235() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,0,6,-1,-1,7,8,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2236() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,0,-1,5,6,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2237() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,2,-1,0,0,2,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2238() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,3,1,-1,0,5,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2239() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,7,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,4,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2240() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,8,-1,0,0,-1,-1,0,8,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2241() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,0,0,-1,-1,0,8,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2242() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,1,-1,-1,-1,6,0,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2243() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,2,-1,-1,3,4,1,-1,0,0,-1,-1,5,0,2,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2244() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,7,0,2,-1,4,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2245() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,7,0,2,-1,0,5,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2246() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,6,0,1,-1,0,0,-1,-1,7,0,2,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2247() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,3,-1,5,0,-1,-1,6,0,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2248() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,-1,-1,5,0,2,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2249() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,8,0,2,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest2250() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,0,6,-1,-1,0,7,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2251() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,7,-1,-1,8,0,2,-1,-1,5,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2252() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,7,-1,0,7,-1,-1,8,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2253() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,-1,-1,-1,0,0,6,-1,7,8,-1,-1,4,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2254() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,4,-1,-1,5,6,2,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2255() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,7,8,2,-1,-1,8,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2256() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,7,8,2,-1,5,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2257() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,1,-1,-1,0,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2258() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,2,-1,-1,-1,6,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2259() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,-1,-1,-1,0,0,6,-1,0,7,-1,-1,4,8,2,-1,-1,-1,-1,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2260() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,7,0,2,-1,-1,2,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2261() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,4,1,-1,0,0,-1,-1,5,0,2,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2262() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,3,-1,-1,0,0,-1,-1,6,0,2,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2263() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,7,-1,-1,0,0,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2264() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,0,5,-1,6,0,-1,-1,3,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2265() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,3,-1,-1,-1,6,0,-1,-1,7,0,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2266() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,0,-1,-1,8,0,2,-1,6,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2267() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,5,-1,-1,6,0,-1,-1,7,0,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2268() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,5,0,-1,-1,6,0,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2269() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,6,6,-1,0,0,4,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2270() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,-1,0,-1,-1,5,6,2,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2271() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,7,8,2,-1,3,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2272() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,7,8,2,-1,6,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2273() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,5,-1,-1,0,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2274() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,0,-1,-1,7,8,2,-1,0,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2275() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,6,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2276() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,7,0,2,-1,0,4,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2277() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,6,7,-1,-1,0,0,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2278() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,0,-1,-1,7,0,2,-1,-1,5,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2279() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,6,7,1,-1,0,0,-1,-1,8,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2280() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,7,-1,-1,0,0,6,-1,8,0,-1,-1,4,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2281() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,0,6,-1,-1,0,7,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2282() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,0,1,-1,-1,-1,-1,-1,0,4,-1,-1,8,0,2,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest2283() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,2,-1,5,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2284() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,2,-1,6,0,2,-1,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2285() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,4,1,-1,5,6,2,-1,7,0,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2286() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,2,-1,-1,3,4,1,-1,-1,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2287() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,-1,-1,-1,0,0,-1,-1,6,7,2,-1,0,0,5,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2288() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,2,-1,-1,0,0,-1,-1,6,7,2,-1,0,0,5,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2289() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,0,-1,-1,7,8,2,-1,-1,2,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2290() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,5,0,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2291() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,3,-1,0,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2292() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,1,-1,-1,3,4,1,-1,0,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2293() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2294() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,2,-1,-1,0,-1,-1,5,0,2,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2295() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,7,0,2,-1,0,1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2296() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,0,0,-1,-1,8,0,2,-1,-1,1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2297() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,6,7,1,-1,0,0,-1,-1,8,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2298() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,-1,-1,-1,-1,-1,-1,-1,4,0,-1,-1,8,0,2,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest2299() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,0,-1,-1,8,0,2,-1,1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2300() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,7,0,-1,-1,8,0,2,-1,-1,8,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2301() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,6,0,1,-1,7,0,-1,-1,8,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2302() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,0,-1,7,0,-1,-1,8,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2303() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,1,-1,-1,3,4,1,-1,5,0,-1,-1,6,0,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2304() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,-1,-1,0,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2305() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,0,7,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2306() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,0,-1,-1,6,3,2,-1,7,0,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2307() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,6,-1,-1,0,0,4,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2308() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,0,-1,-1,-1,6,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2309() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,-1,-1,5,7,2,-1,0,0,4,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2310() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,0,6,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2311() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,2,-1,6,7,2,-1,0,3,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2312() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,2,-1,6,7,2,-1,0,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2313() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,7,0,2,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2314() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,7,0,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2315() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,7,0,2,-1,1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2316() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,6,-1,0,0,-1,-1,7,0,2,-1,-1,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2317() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,0,1,-1,0,0,6,-1,0,0,-1,-1,4,0,2,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2318() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,3,-1,-1,6,0,-1,-1,7,0,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2319() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,7,0,-1,-1,8,0,2,-1,-1,3,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2320() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,2,-1,7,0,-1,-1,8,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2321() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,4,1,-1,5,0,-1,-1,6,0,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2322() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,2,-1,-1,-1,0,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2323() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,0,-1,-1,-1,6,7,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2324() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,-1,-1,6,0,2,-1,6,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2325() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,0,6,2,-1,5,0,2,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2326() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,1,-1,6,0,2,-1,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2327() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,0,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2328() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,0,-1,-1,-1,6,0,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2329() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,7,0,2,-1,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2330() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,0,0,-1,-1,7,0,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2331() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,4,7,-1,-1,-1,-1,-1,-1,0,0,-1,-1,8,0,2,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest2332() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,0,-1,-1,7,0,2,-1,2,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2333() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,0,1,-1,0,0,-1,-1,7,0,2,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2334() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,0,0,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2335() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,0,-1,-1,8,0,2,-1,4,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2336() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,7,0,-1,-1,8,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2337() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,4,-1,5,0,-1,-1,6,0,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2338() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,7,-1,-1,8,0,2,-1,6,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2339() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,7,-1,-1,8,0,2,-1,0,5,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2340() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,-1,-1,0,7,-1,-1,6,0,2,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2341() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,7,-1,-1,8,0,2,-1,-1,1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2342() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,5,-1,0,7,-1,-1,8,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2343() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,0,-1,-1,5,6,2,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2344() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,1,0,-1,-1,5,6,2,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2345() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,0,0,-1,-1,5,6,2,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2346() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,7,8,2,-1,0,5,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2347() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,3,-1,5,0,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2348() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,7,0,2,-1,8,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2349() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,7,0,2,-1,7,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2350() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,6,-1,-1,-1,7,0,2,-1,8,0,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2351() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,0,6,-1,-1,7,0,2,-1,8,0,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2352() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,7,-1,-1,8,0,2,-1,1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2353() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,0,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2354() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,7,-1,-1,-1,-1,-1,-1,0,4,-1,-1,8,0,2,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest2355() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,2,-1,-1,0,7,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2356() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,4,1,-1,0,5,2,-1,6,0,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2357() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,6,-1,-1,0,0,4,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2358() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,-1,6,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2359() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,0,-1,-1,6,5,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2360() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,0,0,-1,-1,6,5,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2361() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,4,1,-1,0,0,-1,-1,5,6,2,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2362() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2363() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,5,-1,-1,-1,0,0,-1,-1,6,7,2,-1,0,0,5,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2364() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,6,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2365() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,0,-1,6,7,2,-1,0,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2366() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,2,-1,-1,3,4,1,-1,-1,0,-1,-1,5,0,2,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2367() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,0,6,-1,-1,0,0,-1,-1,7,0,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2368() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,7,1,-1,0,0,-1,-1,8,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2369() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,0,-1,0,0,-1,-1,5,0,2,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2370() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,6,-1,-1,-1,0,7,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2371() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,7,-1,-1,8,0,2,-1,8,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2372() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,7,-1,-1,8,0,2,-1,-1,4,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2373() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,5,-1,-1,6,7,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2374() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,2,-1,-1,3,4,1,-1,5,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2375() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,0,5,2,-1,6,0,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2376() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,5,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2377() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,7,0,2,-1,-1,-1,-1,-1,0,8,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2378() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,6,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2379() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,1,-1,-1,3,4,1,-1,-1,0,-1,-1,5,6,2,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2380() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2381() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,0,6,-1,-1,0,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2382() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,-1,-1,6,7,2,-1,6,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2383() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,0,6,2,-1,7,8,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2384() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2385() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,7,0,2,-1,0,7,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2386() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,0,-1,-1,7,0,2,-1,-1,3,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2387() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,0,-1,-1,7,0,2,-1,-1,4,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2388() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,0,0,-1,-1,8,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2389() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,-1,-1,-1,-1,-1,-1,-1,4,0,-1,-1,7,0,2,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2390() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,6,-1,-1,-1,0,7,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2391() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,3,-1,-1,-1,0,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2392() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,0,-1,-1,-1,6,7,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2393() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,7,8,2,-1,-1,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2394() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,3,0,-1,-1,5,6,2,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2395() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,7,8,2,-1,0,7,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2396() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,0,6,-1,-1,0,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2397() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,2,-1,-1,0,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2398() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,0,-1,-1,-1,6,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2399() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,-1,-1,7,0,-1,-1,8,6,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2400() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,4,1,-1,5,0,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2401() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,0,0,1,-1,4,-1,-1,-1,5,6,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2402() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,1,-1,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2403() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,1,-1,4,0,3,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2404() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,0,0,1,-1,4,5,1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2405() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,1,-1,4,5,6,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2406() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,0,0,1,-1,4,5,1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2407() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,6,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2408() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,-1,-1,-1,-1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2409() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,0,4,1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2410() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,0,1,-1,5,-1,-1,-1,-1,-1,-1,-1,6,0,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2411() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2412() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,4,1,-1,-1,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2413() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,1,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2414() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,1,-1,-1,0,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2415() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,0,-1,-1,0,0,2,-1,3,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2416() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,0,0,-1,-1,0,0,2,-1,8,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2417() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,0,6,-1,-1,7,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2418() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,3,-1,-1,7,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2419() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,1,-1,-1,7,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2420() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,7,-1,-1,0,0,2,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2421() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,7,-1,-1,0,0,2,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2422() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,0,6,-1,-1,0,7,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2423() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,0,1,-1,-1,-1,-1,-1,0,8,-1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2424() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,-1,-1,-1,6,7,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2425() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,5,6,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2426() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,-1,-1,0,0,2,-1,-1,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2427() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,0,-1,0,0,2,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2428() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,4,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2429() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2430() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,2,-1,-1,6,0,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2431() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,7,0,-1,-1,0,8,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2432() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,7,-1,0,7,-1,-1,0,8,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2433() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,3,-1,-1,5,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2434() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,2,-1,-1,3,4,1,-1,-1,5,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2435() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,0,0,2,-1,7,0,-1,-1,2,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2436() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,0,-1,-1,-1,6,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2437() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,0,-1,-1,0,0,2,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2438() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,-1,-1,6,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2439() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,0,3,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2440() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,6,-1,-1,-1,0,7,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2441() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,0,6,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2442() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,4,-1,0,8,-1,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2443() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,5,-1,0,0,2,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2444() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,4,1,-1,5,6,2,-1,0,0,2,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2445() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2446() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,1,-1,-1,3,4,1,-1,0,0,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2447() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,0,7,2,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2448() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,0,-1,-1,0,7,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2449() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,4,-1,5,0,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2450() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,4,1,-1,5,0,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2451() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,-1,-1,-1,6,0,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2452() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,0,-1,-1,0,8,2,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2453() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,2,-1,7,0,-1,-1,0,8,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2454() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,6,-1,-1,-1,0,7,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2455() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,7,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2456() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,0,-1,-1,0,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2457() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,0,6,-1,-1,0,7,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2458() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,3,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2459() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,2,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2460() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,4,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2461() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,2,-1,0,0,-1,-1,0,0,2,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2462() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,0,-1,-1,0,0,2,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2463() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,7,0,-1,-1,0,0,2,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2464() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,8,0,-1,-1,0,0,2,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2465() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,6,7,1,-1,8,0,-1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2466() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,0,-1,-1,-1,0,6,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2467() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,4,-1,-1,0,6,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2468() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,0,8,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2469() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,0,8,-1,-1,0,0,2,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2470() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,0,8,-1,-1,0,0,2,-1,1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2471() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,3,-1,-1,6,7,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2472() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,3,-1,0,0,2,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2473() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,1,-1,0,0,2,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2474() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,-1,6,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2475() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,0,7,2,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2476() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,0,7,2,-1,2,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2477() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,0,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2478() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,3,-1,7,0,-1,-1,0,8,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2479() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,7,0,-1,-1,0,8,2,-1,2,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2480() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,3,-1,-1,0,7,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2481() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2482() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,0,-1,-1,0,0,2,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2483() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,0,-1,-1,0,0,2,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2484() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,6,0,1,-1,0,0,2,-1,7,0,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2485() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,8,0,-1,-1,0,0,2,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2486() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,6,-1,-1,0,7,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2487() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,7,-1,-1,0,0,2,-1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2488() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,7,-1,-1,0,0,2,-1,1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2489() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,6,0,1,-1,0,7,-1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2490() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,0,8,-1,-1,0,0,2,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2491() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,5,6,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2492() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,3,-1,-1,0,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2493() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,0,7,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2494() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,0,7,2,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2495() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,2,-1,0,0,-1,-1,0,7,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2496() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,0,-1,-1,-1,6,0,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2497() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,0,6,-1,-1,0,7,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2498() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,4,-1,0,7,-1,-1,0,8,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2499() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,7,-1,-1,0,8,2,-1,4,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2500() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,0,-1,0,7,-1,-1,0,8,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2501() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,-1,-1,7,6,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2502() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,0,7,2,-1,-1,-1,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2503() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2504() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2505() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2506() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,0,6,-1,-1,7,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2507() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,1,-1,-1,0,6,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2508() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,8,-1,-1,0,0,2,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2509() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,5,-1,-1,6,7,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2510() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,1,-1,-1,7,8,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2511() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,7,8,-1,-1,0,0,2,-1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2512() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,-1,5,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2513() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,0,7,2,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2514() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,0,7,2,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2515() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,-1,-1,0,0,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2516() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,0,-1,-1,0,7,2,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2517() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,7,-1,-1,0,0,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2518() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,7,-1,-1,-1,-1,-1,-1,8,0,-1,-1,0,4,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2519() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,7,0,-1,-1,0,8,2,-1,3,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2520() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,7,0,-1,-1,0,8,2,-1,4,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2521() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,7,-1,-1,0,8,2,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2522() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,0,7,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2523() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,1,-1,-1,0,7,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2524() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,6,0,1,-1,0,7,-1,-1,0,8,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2525() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,4,-1,5,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2526() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,6,7,-1,-1,0,3,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2527() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,0,0,2,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2528() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,-1,-1,-1,-1,-1,-1,-1,4,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2529() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,0,-1,-1,0,0,2,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2530() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,7,0,-1,-1,0,0,2,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2531() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,0,-1,5,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2532() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,2,-1,0,5,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2533() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,8,-1,-1,0,0,2,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2534() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,8,-1,-1,0,0,2,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2535() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,3,-1,7,8,-1,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2536() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,7,8,-1,-1,0,0,2,-1,1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2537() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,-1,-1,0,0,2,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2538() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,2,-1,0,0,2,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2539() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,6,-1,-1,-1,0,7,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2540() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,0,0,-1,-1,0,8,2,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2541() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,6,7,1,-1,0,8,2,-1,0,0,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2542() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,6,7,-1,-1,0,0,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2543() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,0,6,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2544() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,4,-1,-1,0,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2545() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,-1,-1,0,6,2,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2546() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,-1,-1,0,6,2,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2547() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,0,7,2,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2548() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,6,7,2,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2549() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,1,-1,-1,-1,0,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2550() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,0,0,-1,-1,0,0,2,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2551() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,7,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2552() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,0,1,-1,7,0,-1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2553() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,4,-1,-1,-1,-1,-1,-1,0,7,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2554() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,7,-1,-1,0,0,2,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2555() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,0,8,-1,-1,0,0,2,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2556() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,6,3,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2557() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,2,-1,-1,7,8,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2558() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,7,8,-1,-1,0,0,2,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2559() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,6,7,1,-1,0,0,-1,-1,0,8,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2560() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,6,7,-1,-1,0,0,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2561() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,0,-1,-1,0,8,2,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2562() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,7,0,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2563() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,4,-1,0,6,2,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2564() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,1,-1,-1,3,4,1,-1,-1,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2565() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2566() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,0,-1,0,0,-1,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2567() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,0,6,-1,-1,0,0,2,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2568() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,8,0,-1,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2569() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,3,1,-1,0,0,2,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2570() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,0,6,-1,-1,0,7,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2571() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,0,-1,-1,-1,6,7,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2572() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,0,0,2,-1,-1,-1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2573() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,3,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2574() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,0,6,-1,-1,0,0,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2575() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,0,-1,-1,0,7,2,-1,3,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2576() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,8,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,4,2,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2577() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,0,6,-1,-1,0,7,2,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2578() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,7,0,-1,-1,0,8,2,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2579() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,6,0,1,-1,7,0,-1,-1,0,8,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2580() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,2,-1,0,7,-1,-1,0,8,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2581() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,5,-1,0,0,-1,-1,8,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2582() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,0,-1,-1,8,0,2,-1,0,5,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2583() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,4,-1,7,0,-1,-1,8,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2584() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,0,7,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2585() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,0,6,-1,-1,0,7,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2586() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,1,-1,-1,-1,6,7,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2587() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,0,6,2,-1,7,0,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2588() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,1,-1,7,0,2,-1,-1,-1,-1,-1,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2589() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,6,1,-1,0,0,4,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2590() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,7,0,-1,-1,8,6,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2591() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,1,-1,-1,6,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2592() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,0,5,-1,6,0,-1,-1,3,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2593() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,0,7,-1,-1,6,8,2,-1,0,0,5,-1,-1,-1,-1,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2594() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,0,-1,-1,-1,0,0,-1,-1,6,0,2,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2595() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,0,-1,0,0,-1,-1,8,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2596() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,7,0,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2597() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,7,0,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2598() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,2,-1,-1,0,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2599() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,7,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2600() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,7,-1,-1,8,0,2,-1,-1,2,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2601() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,6,0,1,-1,0,7,-1,-1,8,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2602() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,6,7,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2603() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,4,-1,5,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2604() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,0,1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2605() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,7,8,2,-1,-1,2,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2606() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,0,-1,0,0,-1,-1,5,6,2,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2607() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,0,6,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2608() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,-1,-1,0,7,-1,-1,6,8,2,-1,0,0,5,-1,-1,-1,-1,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2609() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,0,-1,-1,5,0,2,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2610() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,7,0,2,-1,0,2,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2611() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,7,0,2,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2612() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,7,0,2,-1,8,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2613() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,6,-1,-1,0,0,-1,-1,7,0,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2614() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,6,7,-1,-1,8,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest2615() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,0,-1,-1,8,0,2,-1,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2616() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,6,-1,-1,-1,0,7,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2617() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,7,-1,-1,8,0,2,-1,-1,7,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2618() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,6,-1,0,7,-1,-1,8,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2619() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,0,1,-1,0,7,-1,-1,8,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2620() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,4,-1,-1,6,7,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2621() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,2,-1,5,6,2,-1,7,0,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2622() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,2,-1,-1,3,4,1,-1,5,6,2,-1,7,0,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2623() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,6,-1,-1,0,0,4,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2624() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,7,8,2,-1,-1,3,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2625() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,7,8,2,-1,3,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2626() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,7,-1,0,0,-1,-1,8,7,2,-1,-1,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2627() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,-1,0,-1,-1,5,0,2,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2628() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,-1,-1,5,0,2,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2629() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,1,-1,-1,-1,0,0,-1,-1,6,0,2,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2630() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,0,-1,-1,7,0,2,-1,-1,7,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2631() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,4,-1,-1,6,0,-1,-1,7,0,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2632() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,7,0,-1,-1,8,0,2,-1,-1,1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2633() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,-1,-1,-1,0,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2634() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,6,-1,-1,0,7,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2635() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,0,8,-1,-1,7,0,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2636() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,-1,-1,-1,-1,-1,-1,-1,7,4,-1,-1,8,0,2,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest2637() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,7,0,2,-1,-1,-1,-1,-1,0,3,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2638() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,0,5,-1,6,7,2,-1,3,0,2,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2639() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,6,-1,-1,0,0,4,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2640() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,3,1,-1,5,6,2,-1,-1,7,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2641() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,4,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,7,8,2,-1,0,0,6,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2642() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,0,-1,-1,7,8,2,-1,2,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2643() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,2,-1,0,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2644() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,5,-1,6,7,2,-1,0,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2645() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,0,3,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2646() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,0,-1,-1,-1,0,0,-1,-1,6,0,2,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2647() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,0,6,-1,-1,0,0,-1,-1,7,0,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2648() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,0,6,-1,-1,0,0,-1,-1,7,0,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2649() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,2,-1,0,0,-1,-1,7,0,2,-1,-1,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2650() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,0,-1,-1,3,4,1,-1,0,5,-1,-1,6,0,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2651() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,7,-1,-1,8,0,2,-1,7,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2652() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,-1,-1,7,8,-1,-1,6,0,2,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2653() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,6,6,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2654() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,7,8,2,-1,-1,6,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2655() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,2,-1,0,0,-1,-1,7,8,2,-1,-1,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2656() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2657() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,3,-1,-1,0,0,-1,-1,7,0,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2658() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,2,-1,-1,6,0,-1,-1,7,0,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2659() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,-1,-1,6,0,2,-1,4,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2660() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,6,-1,-1,0,0,4,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2661() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,4,-1,-1,0,-1,-1,5,6,2,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2662() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,3,-1,-1,0,-1,-1,5,6,2,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2663() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,7,8,2,-1,5,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2664() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,7,8,2,-1,0,4,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2665() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,7,8,2,-1,0,1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2666() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,0,-1,-1,7,8,2,-1,3,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2667() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,5,0,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2668() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,4,1,-1,0,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2669() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,4,-1,6,7,2,-1,0,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2670() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2671() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,7,0,2,-1,0,6,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2672() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,0,-1,-1,-1,0,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2673() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,7,-1,-1,8,0,2,-1,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2674() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,7,-1,-1,8,0,2,-1,0,2,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2675() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,0,6,-1,-1,0,7,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2676() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,0,-1,0,7,-1,-1,8,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2677() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,2,-1,6,0,2,-1,0,5,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2678() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,7,-1,8,0,2,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest2679() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,4,1,-1,-1,0,-1,-1,5,6,2,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2680() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,-1,-1,6,5,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2681() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,7,8,2,-1,7,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2682() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,0,1,-1,0,0,-1,-1,0,0,-1,-1,8,4,2,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest2683() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,4,-1,0,0,-1,-1,5,0,2,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2684() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,0,0,-1,-1,8,0,2,-1,-1,6,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2685() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,0,0,-1,-1,8,0,2,-1,2,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2686() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,0,0,-1,-1,8,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2687() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,3,0,-1,-1,6,0,2,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2688() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,4,-1,-1,-1,-1,-1,-1,-1,7,0,-1,-1,8,0,2,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest2689() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,3,-1,-1,-1,6,7,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2690() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,0,-1,5,6,2,-1,7,0,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2691() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,0,-1,5,0,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2692() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,0,-1,-1,-1,0,0,-1,-1,6,0,2,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2693() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,4,-1,-1,-1,-1,-1,-1,0,0,-1,-1,8,0,2,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest2694() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,3,-1,0,5,-1,-1,6,0,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2695() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,7,-1,-1,8,0,2,-1,0,7,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2696() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,7,-1,-1,8,0,2,-1,-1,3,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2697() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,-1,6,-1,-1,5,7,2,-1,0,0,4,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2698() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,3,-1,-1,6,7,2,-1,0,0,5,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2699() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,4,0,-1,-1,5,6,2,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2700() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2701() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2702() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2703() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,0,0,1,-1,4,-1,-1,-1,5,6,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2704() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2705() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2706() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,0,1,-1,5,6,1,-1,-1,-1,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2707() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,0,4,1,-1,5,-1,-1,-1,-1,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2708() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,0,4,1,-1,5,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2709() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,0,4,1,-1,5,-1,-1,-1,-1,-1,-1,-1,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2710() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,0,4,1,-1,5,-1,-1,-1,-1,-1,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2711() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,0,4,1,-1,5,-1,-1,-1,-1,-1,-1,-1,6,0,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2712() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2713() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,2,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2714() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2715() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,1,-1,5,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2716() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,1,-1,5,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2717() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,1,-1,5,6,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2718() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2719() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,0,0,2,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2720() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,4,-1,0,0,-1,-1,0,0,2,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2721() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,5,-1,-1,6,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2722() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,4,-1,0,5,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2723() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,7,-1,-1,0,0,2,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2724() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,7,-1,-1,0,0,2,-1,4,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2725() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,8,1,-1,-1,-1,-1,-1,0,4,-1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2726() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,-1,5,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2727() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,4,7,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2728() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,0,-1,-1,0,8,2,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2729() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,0,-1,-1,0,8,2,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2730() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,7,-1,-1,0,8,2,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2731() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,7,-1,-1,0,8,2,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2732() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,7,-1,-1,0,8,2,-1,1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2733() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,3,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2734() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,0,6,2,-1,0,7,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2735() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,0,7,2,-1,-1,-1,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2736() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,0,0,2,-1,7,0,-1,-1,4,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2737() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,3,-1,5,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2738() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,0,1,-1,-1,-1,-1,-1,8,0,-1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2739() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,8,0,-1,-1,0,0,2,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2740() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,6,7,2,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2741() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,0,7,2,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2742() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,0,6,-1,-1,0,7,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2743() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,0,-1,-1,0,7,2,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2744() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,0,-1,-1,6,0,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2745() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,7,0,-1,-1,0,8,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2746() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,5,-1,7,0,-1,-1,0,8,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2747() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,4,5,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2748() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,7,-1,-1,0,8,2,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2749() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,7,0,-1,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2750() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,7,-1,8,0,-1,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2751() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,6,7,-1,-1,8,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2752() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,5,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2753() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,-1,-1,0,7,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2754() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,3,-1,5,6,2,-1,0,0,2,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2755() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2756() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,0,7,2,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2757() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,4,-1,0,0,-1,-1,0,8,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2758() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,0,6,-1,-1,0,3,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2759() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,0,-1,-1,-1,0,6,2,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2760() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,0,0,2,-1,7,0,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2761() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,4,-1,-1,0,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2762() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,6,7,1,-1,0,0,-1,-1,0,0,2,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2763() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,0,-1,-1,0,0,2,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2764() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,-1,-1,7,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2765() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,5,-1,-1,7,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2766() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2767() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,8,-1,-1,-1,-1,-1,-1,0,4,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2768() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,3,-1,-1,0,7,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2769() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,-1,-1,0,0,2,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2770() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,1,-1,-1,3,4,1,-1,-1,0,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2771() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,0,-1,-1,3,4,1,-1,-1,5,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2772() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,3,-1,-1,0,0,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2773() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,6,0,1,-1,0,0,-1,-1,0,7,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2774() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,3,-1,-1,-1,6,0,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2775() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,5,0,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2776() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,6,0,-1,-1,0,3,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2777() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,-1,-1,0,7,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2778() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,0,0,2,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2779() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,5,-1,-1,0,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2780() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,3,-1,0,0,-1,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2781() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,0,0,-1,-1,0,0,2,-1,6,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2782() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,5,-1,8,0,-1,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2783() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,4,7,1,-1,0,0,-1,-1,8,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2784() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,3,1,-1,0,0,2,-1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2785() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,7,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2786() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,-1,-1,-1,0,6,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2787() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,3,-1,0,7,-1,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2788() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,4,0,1,-1,0,0,-1,-1,0,7,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2789() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,4,-1,-1,-1,-1,-1,-1,0,8,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2790() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,-1,-1,-1,-1,-1,-1,-1,7,4,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2791() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,0,6,-1,-1,7,8,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2792() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,2,-1,-1,3,4,1,-1,5,6,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2793() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,1,-1,-1,3,4,1,-1,-1,5,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2794() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,0,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2795() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2796() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,4,0,1,-1,0,0,-1,-1,0,0,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2797() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,0,0,-1,-1,0,8,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2798() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,6,-1,0,0,-1,-1,0,8,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2799() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,4,7,1,-1,0,0,-1,-1,0,0,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2800() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,7,1,-1,0,0,-1,-1,0,8,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2801() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,7,-1,-1,0,8,2,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2802() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,7,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2803() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,7,-1,-1,0,8,2,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2804() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,-1,-1,0,6,2,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2805() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,6,-1,0,7,2,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2806() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,0,-1,0,7,2,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2807() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,0,5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2808() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,-1,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2809() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,4,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2810() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,0,0,2,-1,7,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2811() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,4,-1,0,0,-1,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2812() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,6,-1,0,0,-1,-1,0,0,2,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2813() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,0,-1,-1,-1,0,6,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2814() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,6,0,1,-1,0,0,2,-1,0,7,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2815() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,0,8,-1,-1,0,0,2,-1,2,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2816() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,6,-1,-1,-1,7,8,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2817() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,3,-1,-1,0,0,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2818() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,-1,-1,0,0,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2819() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,5,-1,-1,0,7,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2820() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,0,-1,-1,3,4,1,-1,5,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2821() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,-1,6,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2822() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,0,0,2,-1,7,0,-1,-1,7,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2823() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,0,-1,-1,0,0,2,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2824() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,7,8,-1,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2825() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,2,-1,7,8,-1,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2826() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,0,-1,-1,0,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2827() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,4,-1,-1,-1,0,0,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2828() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,3,-1,-1,7,0,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2829() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,1,-1,-1,7,0,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2830() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,7,0,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2831() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,7,0,-1,-1,0,8,2,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2832() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,6,5,2,-1,0,7,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2833() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,3,6,2,-1,0,7,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2834() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,-1,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2835() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,0,-1,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2836() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,0,0,-1,-1,0,0,2,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2837() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,0,0,-1,-1,0,0,2,-1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2838() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,0,0,-1,-1,0,0,2,-1,3,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2839() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,6,-1,-1,-1,7,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2840() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,6,7,-1,-1,0,8,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2841() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,4,7,-1,-1,-1,-1,-1,-1,0,8,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2842() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,0,1,-1,-1,-1,-1,-1,4,8,-1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2843() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,-1,-1,0,0,2,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2844() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,0,7,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2845() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,0,-1,-1,-1,0,0,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2846() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,0,-1,-1,-1,0,0,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2847() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,0,0,-1,-1,0,8,2,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2848() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,3,-1,0,7,2,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2849() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2850() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,0,0,-1,-1,8,0,2,-1,1,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2851() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,0,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2852() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,4,-1,-1,-1,6,7,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2853() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,4,1,-1,5,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2854() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,5,-1,6,0,2,-1,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2855() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,0,-1,-1,3,4,1,-1,5,6,2,-1,7,0,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2856() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,-1,6,-1,-1,7,5,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2857() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,6,7,2,-1,0,0,5,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2858() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,0,-1,-1,7,8,2,-1,-1,4,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2859() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,3,-1,0,5,2,-1,6,7,2,-1,0,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2860() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,3,-1,-1,5,-1,-1,6,0,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2861() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,7,0,2,-1,-1,4,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2862() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,1,-1,-1,0,0,-1,-1,7,0,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2863() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,6,-1,0,0,-1,-1,8,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2864() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,0,0,-1,-1,8,0,2,-1,7,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2865() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,6,-1,-1,-1,7,0,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2866() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,4,1,-1,0,5,-1,-1,6,0,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2867() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,1,-1,-1,3,4,1,-1,5,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2868() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,6,7,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest2869() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,0,-1,-1,3,4,1,-1,0,0,-1,-1,5,6,2,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2870() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,2,-1,-1,-1,0,0,-1,-1,6,7,2,-1,0,0,5,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2871() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,7,-1,-1,0,0,6,-1,0,0,-1,-1,4,8,2,-1,-1,-1,-1,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2872() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,7,0,2,-1,-1,7,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2873() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,2,0,-1,-1,5,0,2,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2874() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,-1,-1,-1,0,0,6,-1,0,0,-1,-1,4,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2875() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,8,0,2,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest2876() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,7,-1,-1,0,0,6,-1,0,0,-1,-1,4,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2877() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,5,-1,-1,0,0,-1,-1,7,0,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2878() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,0,0,-1,-1,8,0,2,-1,3,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2879() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,0,-1,-1,-1,6,0,2,-1,7,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2880() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,0,-1,-1,8,0,2,-1,8,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2881() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,0,6,-1,-1,7,0,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2882() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,7,0,-1,-1,8,0,2,-1,1,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2883() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,4,-1,-1,-1,-1,-1,-1,0,7,-1,-1,8,0,2,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest2884() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,3,1,-1,5,0,2,-1,6,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2885() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,5,6,2,-1,7,0,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2886() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,-1,-1,-1,0,0,6,-1,0,0,-1,-1,4,8,2,-1,-1,-1,-1,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2887() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,4,-1,-1,-1,6,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2888() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,3,0,-1,-1,6,7,2,-1,0,0,5,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2889() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,0,5,-1,0,6,2,-1,3,7,2,-1,0,0,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2890() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,1,-1,-1,3,4,1,-1,-1,0,-1,-1,5,0,2,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2891() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,3,-1,-1,5,0,2,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2892() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,0,-1,-1,3,4,1,-1,0,0,-1,-1,5,0,2,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2893() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,4,-1,0,0,-1,-1,7,0,2,-1,-1,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2894() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,0,-1,-1,7,0,2,-1,3,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2895() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,0,0,-1,-1,8,0,2,-1,-1,2,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2896() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,0,0,-1,-1,8,0,2,-1,8,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2897() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,0,-1,-1,-1,6,0,-1,-1,7,0,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2898() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,7,0,-1,-1,8,0,2,-1,8,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2899() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,7,0,-1,-1,8,0,2,-1,2,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2900() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,0,6,-1,-1,7,0,2,-1,0,8,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2901() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,7,0,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2902() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,2,-1,-1,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2903() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,-1,-1,-1,0,0,-1,-1,0,0,-1,-1,7,4,2,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2904() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2905() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2906() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2907() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,2,-1,0,0,-1,-1,5,0,2,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2908() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,0,-1,-1,7,0,2,-1,-1,2,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2909() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,0,-1,-1,7,0,2,-1,-1,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2910() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,7,-1,0,0,-1,-1,8,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2911() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,-1,-1,6,0,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2912() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,4,-1,0,5,-1,-1,6,0,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2913() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,0,-1,-1,-1,0,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2914() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,7,0,2,-1,-1,-1,-1,-1,0,5,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2915() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,1,-1,-1,5,6,2,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2916() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,0,-1,-1,7,8,2,-1,-1,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2917() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,6,0,1,-1,0,0,-1,-1,7,8,2,-1,0,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2918() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,-1,-1,-1,0,0,6,-1,0,0,-1,-1,4,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2919() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,6,0,1,-1,0,0,-1,-1,7,0,2,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2920() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,5,-1,-1,-1,6,0,-1,-1,7,0,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2921() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,6,-1,-1,-1,7,0,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2922() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,7,-1,-1,8,0,2,-1,5,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2923() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,1,-1,-1,0,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2924() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,-1,-1,6,7,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2925() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,6,-1,7,0,2,-1,-1,-1,-1,-1,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2926() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,0,-1,-1,3,4,1,-1,-1,0,-1,-1,5,6,2,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2927() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,3,-1,-1,5,6,2,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2928() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,2,-1,5,0,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2929() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,-1,-1,-1,0,0,-1,-1,6,0,2,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2930() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,0,-1,-1,-1,0,0,-1,-1,6,0,2,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2931() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,7,0,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2932() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,7,-1,-1,8,0,2,-1,-1,8,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2933() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,-1,-1,6,0,2,-1,7,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2934() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,6,7,2,-1,5,0,2,-1,0,0,4,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2935() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,0,6,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2936() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,0,-1,-1,6,0,2,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2937() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,2,-1,-1,-1,0,0,-1,-1,6,0,2,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2938() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,0,-1,-1,7,0,2,-1,4,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2939() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,-1,-1,7,0,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2940() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,3,-1,-1,7,0,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2941() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,1,-1,-1,0,7,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2942() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,4,5,-1,-1,6,0,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2943() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,6,0,1,-1,0,0,-1,-1,7,8,2,-1,0,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2944() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,-1,-1,-1,-1,-1,-1,-1,4,0,-1,-1,7,8,2,-1,0,0,6,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2945() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,3,1,-1,5,6,2,-1,7,0,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2946() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,-1,-1,-1,0,6,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2947() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,0,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2948() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,0,-1,-1,7,0,2,-1,6,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2949() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,-1,-1,-1,-1,-1,-1,-1,7,0,-1,-1,8,0,2,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest2950() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,0,-1,-1,8,0,2,-1,0,2,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2951() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,0,-1,-1,8,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2952() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,3,1,-1,5,0,2,-1,0,6,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2953() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,5,-1,-1,0,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2954() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,2,-1,-1,6,7,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest2955() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,0,-1,7,0,2,-1,-1,-1,-1,-1,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2956() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,0,1,-1,5,4,1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2957() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,0,1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2958() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,0,4,1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2959() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,4,1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2960() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,0,1,-1,5,-1,-1,-1,-1,-1,-1,-1,6,7,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2961() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,1,-1,5,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2962() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,1,-1,5,0,2,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2963() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,0,1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2964() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,1,-1,5,6,7,-1,-1,-1,-1,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2965() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,3,1,-1,0,0,2,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2966() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,6,7,-1,-1,8,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2967() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,7,-1,-1,0,0,2,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2968() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,7,-1,-1,0,0,2,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2969() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,3,-1,-1,0,6,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2970() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,8,-1,0,8,-1,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2971() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,5,-1,0,0,2,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2972() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,2,-1,-1,3,4,1,-1,5,6,2,-1,0,0,2,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2973() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,1,-1,-1,3,4,1,-1,5,6,2,-1,0,0,2,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2974() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,2,0,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2975() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,0,7,2,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2976() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,5,-1,-1,0,0,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2977() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,0,1,-1,0,0,-1,-1,0,7,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2978() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,3,-1,-1,6,0,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2979() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,0,5,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2980() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,0,-1,-1,-1,0,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2981() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,1,-1,-1,-1,0,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2982() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,7,-1,-1,0,8,2,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2983() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,6,-1,0,7,-1,-1,0,8,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2984() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,7,-1,-1,0,8,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2985() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,5,-1,0,6,2,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2986() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,3,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2987() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,6,7,1,-1,0,0,2,-1,0,0,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2988() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,0,-1,-1,0,0,2,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2989() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,8,0,-1,-1,0,0,2,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2990() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,4,-1,-1,-1,6,7,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2991() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,7,8,-1,-1,0,0,2,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2992() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,4,-1,0,5,2,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2993() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,-1,-1,-1,-1,-1,-1,-1,4,0,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2994() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,6,0,1,-1,0,7,-1,-1,0,8,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2995() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,3,5,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2996() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,0,7,2,-1,-1,-1,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2997() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,2,-1,-1,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2998() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,4,-1,-1,0,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest2999() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,4,-1,8,0,-1,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3000() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,6,-1,-1,7,8,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3001() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,-1,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3002() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,0,0,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3003() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,2,-1,-1,0,0,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3004() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,0,0,-1,-1,0,8,2,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3005() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,0,0,-1,-1,0,8,2,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3006() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,6,0,1,-1,7,0,-1,-1,0,8,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3007() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,5,-1,-1,-1,0,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3008() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,7,-1,-1,0,8,2,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3009() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,0,0,2,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3010() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,0,0,-1,-1,0,0,2,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3011() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,0,0,-1,-1,0,0,2,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3012() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,1,-1,-1,-1,6,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3013() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,-1,-1,-1,6,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3014() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,1,5,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3015() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,6,-1,-1,-1,0,0,2,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3016() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,5,-1,-1,0,6,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3017() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,0,6,-1,-1,0,7,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3018() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,0,6,-1,-1,0,0,2,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3019() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,5,-1,-1,7,8,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3020() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,7,8,-1,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3021() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,6,0,1,-1,7,8,-1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3022() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,3,1,-1,0,5,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3023() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,-1,-1,7,0,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3024() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,-1,-1,-1,0,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3025() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,4,-1,-1,6,7,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3026() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,2,-1,0,6,2,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3027() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,6,-1,-1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3028() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,8,0,-1,-1,0,0,2,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3029() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,0,7,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3030() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,7,-1,-1,-1,-1,-1,-1,4,8,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3031() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,0,1,-1,-1,-1,-1,-1,8,4,-1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3032() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3033() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,6,-1,-1,0,0,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3034() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,0,-1,-1,3,4,1,-1,5,0,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3035() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,0,-1,7,0,-1,-1,0,8,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3036() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,2,-1,0,5,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3037() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,5,-1,0,7,-1,-1,0,8,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3038() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,0,6,2,-1,0,3,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3039() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3040() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,0,0,2,-1,7,0,-1,-1,-1,6,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3041() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,1,-1,-1,0,7,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3042() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,0,6,-1,-1,7,8,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3043() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,3,-1,5,6,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3044() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,0,7,2,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3045() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,0,7,2,-1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3046() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,5,-1,-1,-1,0,0,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3047() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,0,-1,-1,0,7,2,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3048() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,4,0,1,-1,0,0,-1,-1,7,0,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3049() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,6,0,1,-1,0,0,-1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3050() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,6,-1,0,0,-1,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3051() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,7,-1,0,0,-1,-1,0,0,2,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3052() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,0,0,-1,-1,0,0,2,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3053() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,2,-1,7,0,-1,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3054() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,6,-1,-1,-1,0,7,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3055() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,2,-1,-1,0,6,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3056() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,0,-1,0,8,-1,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3057() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,8,-1,-1,0,0,2,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3058() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,0,7,2,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3059() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,0,7,2,-1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3060() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,0,7,2,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3061() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,7,-1,-1,0,8,2,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3062() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,5,-1,-1,-1,6,7,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3063() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,6,-1,-1,-1,7,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3064() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,0,-1,-1,-1,0,6,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3065() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,7,8,-1,-1,0,0,2,-1,3,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3066() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,0,5,2,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3067() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,4,-1,-1,0,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3068() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,5,-1,-1,0,0,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3069() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,2,-1,5,0,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3070() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,4,-1,-1,0,7,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3071() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,7,-1,-1,0,8,2,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3072() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,2,-1,0,6,2,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3073() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3074() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,5,-1,0,7,2,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3075() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3076() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,3,1,-1,5,0,2,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3077() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,0,1,-1,-1,-1,-1,-1,4,0,-1,-1,8,0,2,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest3078() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,6,0,1,-1,7,0,2,-1,8,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3079() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,7,-1,-1,8,0,2,-1,0,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3080() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,7,-1,-1,8,0,2,-1,0,1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3081() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,7,-1,-1,8,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3082() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,3,1,-1,5,0,2,-1,0,6,2,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3083() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,6,-1,7,0,2,-1,0,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3084() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,6,-1,-1,0,0,4,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3085() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,7,8,2,-1,8,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3086() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,0,-1,-1,7,8,2,-1,-1,8,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3087() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,2,-1,0,0,-1,-1,8,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3088() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,6,7,1,-1,8,0,2,-1,0,0,-1,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest3089() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,6,0,1,-1,7,0,2,-1,0,8,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3090() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,6,-1,-1,0,0,4,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3091() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,3,-1,0,0,-1,-1,5,6,2,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3092() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,0,-1,-1,7,8,2,-1,-1,6,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3093() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,2,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3094() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,-1,-1,6,7,2,-1,1,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3095() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,7,0,2,-1,1,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3096() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,7,0,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3097() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,3,-1,0,0,-1,-1,7,0,2,-1,-1,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3098() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,6,0,1,-1,0,0,-1,-1,7,0,2,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3099() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,6,0,1,-1,0,7,-1,-1,8,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3100() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,6,-1,-1,0,0,4,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3101() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,6,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3102() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,7,8,2,-1,-1,7,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3103() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,2,-1,-1,0,6,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3104() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,4,1,-1,0,5,2,-1,6,7,2,-1,0,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3105() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,7,0,2,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3106() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,4,-1,0,0,-1,-1,8,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3107() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,0,-1,-1,3,4,1,-1,5,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3108() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,4,-1,-1,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3109() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,7,8,2,-1,0,2,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3110() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,6,-1,-1,0,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3111() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,0,-1,-1,7,8,2,-1,4,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3112() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,0,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3113() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,2,-1,6,0,2,-1,0,4,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3114() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,0,0,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3115() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,0,-1,-1,3,4,1,-1,-1,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3116() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,4,-1,-1,6,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3117() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,0,-1,-1,6,0,-1,-1,7,0,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3118() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,4,-1,-1,-1,-1,-1,-1,7,0,-1,-1,8,0,2,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest3119() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,6,0,1,-1,7,0,-1,-1,8,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3120() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,7,-1,-1,8,0,2,-1,7,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3121() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,6,3,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3122() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,2,-1,-1,0,-1,-1,5,6,2,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3123() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,2,-1,-1,3,4,1,-1,-1,0,-1,-1,5,6,2,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3124() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,-1,-1,0,6,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3125() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3126() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,6,0,1,-1,7,0,-1,-1,8,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3127() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,7,-1,7,0,2,-1,-1,-1,-1,-1,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3128() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,6,5,2,-1,7,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3129() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,0,-1,-1,5,6,2,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3130() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,7,8,2,-1,2,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3131() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,6,-1,0,0,-1,-1,7,8,2,-1,-1,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3132() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,0,0,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3133() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,2,-1,-1,3,4,1,-1,5,0,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3134() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,1,-1,-1,3,4,1,-1,5,0,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3135() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,0,-1,0,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3136() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3137() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,-1,-1,5,0,2,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3138() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,2,-1,-1,5,0,2,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3139() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,6,0,2,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3140() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,4,-1,-1,-1,0,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3141() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,6,-1,-1,0,0,4,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3142() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,-1,-1,5,6,2,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3143() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,4,-1,-1,0,0,-1,-1,6,7,2,-1,0,0,5,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3144() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,-1,-1,0,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3145() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,7,0,2,-1,4,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3146() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,0,6,-1,-1,5,0,2,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3147() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,5,-1,-1,0,7,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3148() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,7,-1,-1,8,0,2,-1,6,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3149() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,6,0,1,-1,0,7,-1,-1,8,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3150() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,6,4,-1,0,0,4,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3151() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,0,5,-1,0,0,-1,-1,3,6,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3152() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,4,-1,0,0,-1,-1,7,8,2,-1,-1,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3153() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,6,0,1,-1,0,0,-1,-1,7,8,2,-1,0,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3154() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,0,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3155() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,6,-1,7,6,2,-1,0,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3156() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,0,0,1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3157() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,1,-1,4,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3158() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,1,-1,4,5,4,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3159() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,0,4,1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3160() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,6,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3161() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,0,-1,-1,-1,-1,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3162() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,0,1,-1,-1,-1,-1,-1,2,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3163() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,7,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3164() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,-1,-1,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3165() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,1,-1,5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3166() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,1,-1,5,0,0,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3167() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,1,-1,5,6,3,-1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3168() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,0,1,-1,5,6,1,-1,-1,-1,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3169() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,-1,5,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3170() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,0,-1,-1,-1,0,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3171() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,0,0,2,-1,7,0,-1,-1,-1,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3172() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,2,-1,-1,7,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3173() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,7,-1,-1,0,0,2,-1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3174() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,7,-1,-1,-1,-1,-1,-1,0,4,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3175() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,4,-1,-1,6,7,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3176() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,0,5,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3177() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,0,7,2,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3178() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,-1,-1,-1,-1,-1,-1,-1,8,0,-1,-1,0,4,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3179() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,5,-1,-1,6,0,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3180() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,6,-1,-1,-1,0,7,2,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3181() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,7,-1,-1,0,8,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3182() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3183() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3184() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,1,-1,-1,3,4,1,-1,0,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3185() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,6,7,1,-1,0,0,-1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3186() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,0,-1,-1,0,0,2,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3187() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,8,0,-1,-1,0,0,2,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3188() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,0,8,-1,-1,0,0,2,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3189() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,7,8,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3190() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,7,-1,7,8,-1,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3191() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,0,7,2,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3192() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,0,-1,-1,0,7,2,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3193() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,6,-1,-1,-1,0,7,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3194() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,7,-1,-1,-1,-1,-1,-1,0,8,-1,-1,0,4,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3195() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,6,3,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3196() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3197() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,0,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3198() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3199() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,0,8,-1,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3200() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,-1,-1,7,8,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3201() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,0,-1,-1,-1,6,0,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3202() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,5,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3203() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,6,-1,0,6,2,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3204() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,6,0,1,-1,7,0,-1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3205() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,7,8,-1,-1,0,0,2,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3206() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,2,5,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3207() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,4,-1,0,0,2,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3208() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,-1,-1,-1,0,0,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3209() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,0,6,-1,-1,0,0,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3210() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,0,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3211() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,0,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3212() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,6,7,1,-1,0,0,-1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3213() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,8,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3214() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,7,0,-1,-1,0,0,2,-1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3215() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,2,-1,0,8,-1,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3216() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,6,7,1,-1,0,0,2,-1,0,8,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3217() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,0,-1,-1,0,0,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3218() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,1,-1,-1,0,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3219() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,7,-1,-1,0,8,2,-1,3,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3220() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,4,-1,-1,-1,6,7,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3221() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,8,1,-1,-1,-1,-1,-1,4,0,-1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3222() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,8,-1,-1,0,0,2,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3223() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,6,-1,0,0,2,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3224() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,7,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3225() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,3,-1,-1,6,7,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3226() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,1,-1,-1,3,4,1,-1,5,6,2,-1,0,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3227() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,0,0,-1,-1,0,0,2,-1,1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3228() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,3,-1,-1,6,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3229() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,4,7,-1,-1,-1,-1,-1,-1,8,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3230() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,-1,-1,-1,-1,-1,-1,-1,4,7,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3231() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,8,-1,-1,0,0,2,-1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3232() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,2,-1,-1,3,4,1,-1,-1,5,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3233() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,4,-1,-1,0,0,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3234() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,4,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,8,2,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3235() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,0,6,-1,-1,7,0,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3236() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,0,7,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3237() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,3,-1,0,7,-1,-1,0,8,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3238() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,3,-1,0,5,2,-1,0,6,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3239() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,0,0,2,-1,3,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3240() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3241() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,6,7,1,-1,0,0,2,-1,0,0,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3242() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,0,1,-1,-1,-1,-1,-1,4,0,-1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3243() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,0,6,-1,-1,7,8,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3244() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,4,-1,5,6,2,-1,0,0,2,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3245() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,0,6,-1,-1,0,0,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3246() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,0,0,-1,-1,0,8,2,-1,3,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3247() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3248() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,-1,-1,0,6,2,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3249() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,5,6,2,-1,0,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3250() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,6,7,2,-1,0,3,2,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3251() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3252() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,5,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3253() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,4,-1,-1,-1,0,0,-1,-1,6,0,2,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3254() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,4,-1,-1,-1,-1,-1,-1,0,0,-1,-1,7,0,2,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3255() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,7,-1,0,0,-1,-1,8,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3256() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,6,0,1,-1,7,0,-1,-1,8,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3257() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,2,-1,0,5,-1,-1,6,0,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3258() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,3,6,2,-1,7,0,2,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3259() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,4,-1,0,5,2,-1,6,7,2,-1,0,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3260() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,3,-1,-1,0,-1,-1,5,0,2,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3261() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,0,-1,-1,8,0,2,-1,7,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3262() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,-1,-1,7,0,-1,-1,6,0,2,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3263() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,2,5,-1,-1,6,0,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3264() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,-1,-1,-1,-1,-1,-1,-1,4,7,-1,-1,8,0,2,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest3265() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,0,6,2,-1,7,0,2,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3266() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,0,6,-1,-1,0,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3267() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,7,0,-1,-1,6,8,2,-1,0,0,5,-1,-1,-1,-1,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3268() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3269() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,0,-1,-1,-1,6,0,-1,-1,7,0,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3270() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,7,0,-1,-1,8,0,2,-1,-1,7,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3271() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,7,0,-1,-1,8,0,2,-1,4,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3272() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,0,-1,-1,0,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3273() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,1,-1,-1,6,7,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3274() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,0,-1,-1,-1,6,-1,-1,7,3,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3275() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,6,0,-1,-1,7,5,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3276() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,3,-1,-1,-1,6,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3277() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,4,0,1,-1,0,0,-1,-1,0,0,-1,-1,7,0,2,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3278() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,0,0,-1,-1,8,0,2,-1,6,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3279() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,1,-1,-1,7,0,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3280() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,1,-1,-1,3,4,1,-1,0,5,-1,-1,6,0,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3281() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3282() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,7,0,2,-1,-1,-1,-1,-1,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3283() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,7,-1,0,0,-1,-1,7,8,2,-1,-1,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3284() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3285() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,4,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3286() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,0,-1,-1,7,0,2,-1,1,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3287() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,0,-1,-1,8,0,2,-1,0,6,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3288() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,-1,-1,-1,6,7,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3289() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,0,5,-1,0,6,2,-1,3,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3290() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,3,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3291() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,0,-1,-1,-1,6,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3292() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,2,-1,6,7,2,-1,0,8,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3293() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3294() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,7,0,2,-1,-1,8,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3295() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,-1,-1,-1,6,0,-1,-1,7,0,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3296() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,0,-1,-1,8,0,2,-1,5,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3297() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,7,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3298() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,4,-1,0,5,2,-1,6,0,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3299() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,-1,-1,5,6,2,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3300() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,0,-1,-1,-1,0,0,-1,-1,6,7,2,-1,0,0,5,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3301() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,3,-1,-1,6,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3302() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,0,-1,-1,6,0,-1,-1,7,3,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3303() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,0,-1,-1,-1,0,6,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3304() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,2,-1,6,7,2,-1,0,6,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3305() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,0,-1,-1,0,6,2,-1,7,3,2,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3306() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,6,0,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3307() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,0,4,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3308() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,2,-1,-1,0,0,-1,-1,7,0,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3309() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,6,0,1,-1,0,0,-1,-1,7,0,2,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3310() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,-1,-1,-1,0,0,6,-1,8,0,-1,-1,4,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3311() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,6,-1,7,0,-1,-1,8,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3312() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,2,-1,6,0,2,-1,0,1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3313() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,6,5,-1,0,0,4,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3314() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,0,-1,-1,-1,6,7,2,-1,0,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3315() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,0,-1,-1,0,0,-1,-1,6,7,2,-1,0,0,5,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3316() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,8,-1,-1,0,0,6,-1,0,0,-1,-1,4,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3317() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,7,-1,-1,8,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3318() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,4,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3319() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,0,-1,-1,-1,0,-1,-1,6,3,2,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3320() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,0,0,-1,-1,6,7,2,-1,0,0,5,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3321() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,6,0,1,-1,0,0,-1,-1,7,8,2,-1,0,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3322() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,2,-1,6,7,2,-1,0,5,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3323() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,-1,5,-1,-1,6,0,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3324() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,0,-1,-1,3,4,1,-1,-1,5,-1,-1,6,0,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3325() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,1,0,-1,-1,5,0,2,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3326() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,0,-1,-1,7,0,2,-1,-1,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3327() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,0,5,-1,-1,6,0,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3328() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,0,-1,-1,-1,6,7,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3329() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,0,-1,-1,-1,6,7,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3330() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,3,1,-1,5,0,2,-1,6,7,2,-1,0,0,3,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3331() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3332() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3333() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,0,0,1,-1,4,-1,-1,-1,5,0,-1,-1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3334() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,0,0,1,-1,4,-1,-1,-1,5,0,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3335() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,0,1,-1,5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3336() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3337() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,1,-1,4,5,1,-1,1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3338() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,0,1,-1,4,5,1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3339() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,0,1,-1,5,6,1,-1,-1,-1,-1,-1,7,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3340() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,0,0,1,-1,4,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3341() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,0,4,1,-1,5,-1,-1,-1,-1,-1,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3342() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,0,4,1,-1,5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3343() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,0,0,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3344() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,0,1,-1,5,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3345() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,1,-1,5,6,1,-1,-1,-1,-1,-1,3,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3346() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,0,1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3347() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,0,1,-1,5,6,1,-1,-1,-1,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3348() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3349() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,0,0,2,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3350() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,4,-1,0,0,-1,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3351() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3352() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,7,-1,-1,0,0,2,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3353() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,0,8,-1,-1,0,0,2,-1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3354() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,0,7,2,-1,3,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3355() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,0,0,-1,-1,0,8,2,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3356() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,0,-1,-1,0,8,2,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3357() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,7,0,-1,-1,0,8,2,-1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3358() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,0,-1,0,5,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3359() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,-1,-1,-1,-1,-1,-1,-1,4,7,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3360() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,-1,-1,0,6,2,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3361() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,0,5,2,-1,0,6,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3362() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,0,0,2,-1,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3363() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,0,-1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3364() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,0,6,-1,-1,7,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3365() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,4,-1,0,5,2,-1,0,6,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3366() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,6,7,2,-1,0,8,2,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3367() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,0,0,-1,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3368() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3369() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,7,0,-1,-1,0,0,2,-1,3,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3370() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3371() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,5,-1,-1,-1,6,7,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3372() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,1,-1,-1,6,0,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3373() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,6,0,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3374() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,0,-1,-1,-1,6,7,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3375() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,4,1,-1,5,6,2,-1,0,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3376() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,0,0,2,-1,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3377() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,6,7,-1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3378() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,7,-1,-1,0,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3379() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,0,8,-1,-1,0,0,2,-1,4,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3380() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,-1,-1,0,0,2,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3381() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,0,-1,-1,0,7,2,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3382() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,4,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3383() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,2,-1,0,7,2,-1,-1,-1,-1,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3384() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,8,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,2,-1,4,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3385() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,7,1,-1,0,0,-1,-1,0,0,2,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3386() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,7,0,-1,-1,0,0,2,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3387() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,7,8,-1,-1,0,0,2,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3388() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3389() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,4,-1,-1,5,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3390() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,0,0,-1,-1,0,8,2,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3391() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,0,-1,-1,3,4,1,-1,0,5,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3392() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,7,6,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3393() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,0,-1,-1,-1,0,6,2,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3394() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,0,-1,-1,-1,6,7,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3395() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,2,-1,0,6,2,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3396() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,3,1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3397() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,7,-1,0,7,-1,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3398() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,3,-1,-1,7,8,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3399() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,0,5,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3400() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,0,0,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3401() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,0,0,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3402() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,7,-1,-1,-1,-1,-1,-1,4,0,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3403() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,7,0,-1,-1,0,8,2,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3404() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,0,0,2,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3405() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,0,6,-1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3406() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,4,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,2,-1,0,8,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3407() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,7,-1,-1,-1,-1,-1,-1,8,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3408() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,6,-1,8,0,-1,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3409() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,7,-1,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3410() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,0,1,-1,0,7,-1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3411() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,2,-1,0,0,2,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3412() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,3,-1,0,5,2,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3413() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,5,6,2,-1,0,0,2,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3414() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,6,0,1,-1,0,7,2,-1,0,0,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3415() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,7,-1,-1,0,8,2,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3416() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,7,-1,-1,0,8,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3417() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,4,-1,-1,-1,-1,-1,-1,0,7,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3418() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,7,-1,-1,0,8,2,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3419() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,7,-1,-1,0,8,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3420() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3421() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3422() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,-1,-1,0,0,-1,-1,0,0,2,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3423() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,0,-1,0,0,-1,-1,0,0,2,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3424() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,0,5,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3425() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,6,7,1,-1,0,8,-1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3426() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,4,-1,-1,7,8,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3427() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,0,7,2,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3428() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,0,7,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3429() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,6,7,1,-1,0,0,-1,-1,0,8,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3430() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,3,-1,-1,-1,6,7,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3431() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,3,1,-1,0,5,2,-1,0,6,2,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3432() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,2,-1,-1,3,4,1,-1,0,5,2,-1,0,6,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3433() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,5,6,2,-1,0,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3434() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,0,-1,-1,6,3,2,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3435() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,2,-1,-1,3,4,1,-1,-1,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3436() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,0,-1,-1,3,4,1,-1,-1,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3437() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,0,0,2,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3438() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,0,0,2,-1,4,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3439() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,0,0,2,-1,2,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3440() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,0,0,2,-1,7,0,-1,-1,-1,5,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3441() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,0,-1,-1,-1,0,6,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3442() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,3,1,-1,0,0,2,-1,5,6,2,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3443() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,1,-1,0,0,2,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3444() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,2,-1,-1,3,4,1,-1,5,6,2,-1,0,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3445() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,0,-1,-1,7,0,2,-1,5,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3446() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,5,-1,0,0,-1,-1,7,0,2,-1,-1,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3447() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,0,-1,-1,3,4,1,-1,5,0,-1,-1,6,0,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3448() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,0,7,-1,-1,8,0,2,-1,4,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3449() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,4,-1,-1,0,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3450() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,0,-1,0,5,-1,-1,6,0,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3451() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,5,6,4,-1,7,0,2,-1,-1,-1,-1,-1,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3452() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,0,0,-1,-1,5,6,2,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3453() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,7,-1,-1,0,0,-1,-1,0,0,-1,-1,8,4,2,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest3454() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3455() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,4,-1,-1,0,-1,-1,5,0,2,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3456() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,4,0,-1,-1,5,0,2,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3457() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,1,-1,0,0,-1,-1,5,0,2,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3458() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,0,-1,-1,7,0,2,-1,8,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3459() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,0,6,-1,-1,7,0,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3460() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,0,-1,-1,-1,6,0,2,-1,0,7,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3461() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,0,7,-1,-1,6,0,2,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3462() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,3,-1,-1,0,7,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3463() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,3,-1,0,5,2,-1,6,0,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3464() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,6,7,-1,0,0,4,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3465() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,6,-1,-1,0,0,4,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3466() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,2,-1,0,0,-1,-1,5,6,2,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3467() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,0,-1,-1,-1,0,0,-1,-1,6,7,2,-1,0,0,5,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3468() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3469() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3470() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,4,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,7,0,2,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3471() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,6,-1,-1,-1,7,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3472() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,7,-1,0,8,-1,-1,7,0,2,-1,-1,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3473() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,-1,-1,-1,7,8,-1,-1,6,0,2,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3474() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,-1,-1,6,0,2,-1,5,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3475() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,0,2,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3476() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,4,1,-1,-1,0,-1,-1,5,0,2,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3477() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,7,0,2,-1,-1,3,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3478() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,6,-1,-1,-1,7,0,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3479() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,-1,-1,-1,7,0,-1,-1,8,0,2,-1,0,7,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3480() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,6,-1,-1,7,0,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3481() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,0,-1,6,0,2,-1,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3482() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,6,-1,-1,-1,7,8,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3483() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,1,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3484() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,0,-1,-1,3,4,1,-1,-1,0,-1,-1,5,0,2,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3485() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,0,-1,-1,7,0,2,-1,7,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3486() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,0,-1,0,0,-1,-1,7,0,2,-1,-1,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3487() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3488() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,6,-1,-1,0,0,4,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3489() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,0,-1,-1,-1,0,6,-1,-1,7,8,2,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3490() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,6,-1,-1,7,0,2,-1,-1,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3491() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,0,0,-1,-1,8,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3492() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,-1,-1,0,0,-1,-1,6,7,2,-1,0,0,5,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3493() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,4,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3494() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,0,5,-1,-1,6,7,2,-1,2,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3495() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3496() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,5,-1,-1,0,0,-1,-1,6,0,2,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3497() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,0,-1,-1,-1,6,0,-1,-1,7,0,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3498() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,-1,-1,6,0,-1,-1,7,0,2,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3499() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,7,0,-1,-1,8,0,2,-1,6,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3500() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,6,-1,-1,0,0,4,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3501() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,0,-1,-1,0,0,-1,-1,6,3,2,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3502() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,5,-1,6,0,-1,-1,5,7,2,-1,0,0,4,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3503() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,0,5,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3504() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,7,0,-1,-1,8,0,2,-1,5,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3505() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,0,6,-1,-1,0,7,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3506() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,0,7,-1,-1,8,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3507() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,6,0,1,-1,0,7,-1,-1,8,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3508() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,0,-1,-1,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3509() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,6,7,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3510() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,0,3,-1,7,-1,-1,-1,0,0,4,-1,4,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3511() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3512() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,4,6,1,-1,7,0,3,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3513() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,0,0,-1,-1,7,0,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3514() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3515() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,6,-1,-1,7,0,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3516() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,7,0,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3517() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,7,0,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3518() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,6,-1,-1,8,0,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest3519() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,6,4,1,-1,0,7,-1,-1,-1,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest3520() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,7,0,-1,-1,8,0,3,-1,7,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3521() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,0,-1,-1,4,5,1,-1,6,0,3,-1,7,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3522() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,0,2,-1,6,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3523() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,3,-1,5,2,1,-1,0,0,-1,-1,6,0,3,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3524() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,0,2,-1,6,7,2,-1,0,0,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3525() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,3,-1,-1,4,5,1,-1,6,7,3,-1,0,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3526() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,1,-1,-1,4,5,1,-1,6,7,3,-1,0,8,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3527() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,6,7,2,-1,0,8,-1,-1,-1,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3528() {
        assertEquals(false, symKorat.isSat("1,1,-1,1,2,-1,-1,3,4,1,-1,5,0,2,-1,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3529() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,4,1,-1,0,0,-1,-1,6,0,3,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3530() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3531() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,8,0,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest3532() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,1,-1,-1,4,5,1,-1,6,0,3,-1,0,7,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3533() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,0,-1,-1,4,5,1,-1,6,0,3,-1,0,7,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3534() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,0,0,6,-1,-1,-1,-1,-1,4,0,3,-1,0,8,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3535() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,3,-1,8,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3536() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,0,-1,-1,7,0,3,-1,8,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3537() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,3,-1,8,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3538() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,1,-1,-1,-1,7,0,3,-1,8,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3539() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,7,0,3,-1,8,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3540() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,4,5,1,-1,6,0,3,-1,7,8,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3541() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,0,2,-1,6,0,6,-1,0,0,3,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3542() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,6,0,2,-1,5,0,2,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3543() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,3,-1,5,0,2,-1,6,0,2,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3544() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,4,5,-1,-1,0,0,3,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3545() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,7,3,-1,0,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3546() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,4,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3547() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,4,5,1,-1,6,7,3,-1,0,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3548() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3549() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,6,1,-1,0,0,5,-1,4,7,3,-1,0,0,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3550() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,7,3,-1,0,2,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3551() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,4,1,-1,0,6,-1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3552() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,4,1,-1,0,6,-1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3553() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,-1,-1,4,5,1,-1,6,7,3,-1,0,8,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3554() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,3,-1,2,6,1,-1,0,0,2,-1,0,0,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3555() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,-1,0,-1,-1,4,5,1,-1,6,7,3,-1,8,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3556() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,4,1,-1,6,0,-1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3557() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,7,0,-1,-1,0,0,3,-1,0,0,-1,-1,-1,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3558() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,7,0,2,-1,0,0,3,-1,0,0,-1,-1,7,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3559() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,7,0,-1,-1,0,0,3,-1,0,0,-1,-1,-1,8,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3560() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,0,2,-1,3,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3561() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,2,-1,5,0,2,-1,6,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3562() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,4,-1,4,5,1,-1,2,0,3,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3563() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,0,3,-1,7,-1,-1,-1,0,0,4,-1,7,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3564() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,2,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3565() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,7,-1,-1,-1,8,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3566() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,6,-1,6,7,1,-1,-1,-1,-1,-1,0,-1,-1,-1,8,0,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest3567() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,8,0,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest3568() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,4,1,-1,0,6,-1,-1,7,0,3,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3569() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,0,-1,5,0,2,-1,0,6,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3570() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,1,-1,-1,7,0,3,-1,8,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3571() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,0,2,-1,6,0,-1,-1,0,0,3,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3572() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,0,2,-1,6,7,2,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3573() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,4,5,-1,-1,0,0,3,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3574() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3575() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,7,0,-1,-1,8,7,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3576() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,6,7,1,-1,0,-1,-1,-1,0,0,-1,-1,8,5,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest3577() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,4,5,1,-1,6,7,3,-1,0,8,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3578() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,7,3,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3579() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,7,2,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3580() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,7,4,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3581() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,4,1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3582() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,2,-1,-1,3,4,1,-1,5,0,2,-1,6,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3583() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,0,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest3584() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,2,-1,-1,-1,8,0,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest3585() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,-1,0,-1,-1,4,5,1,-1,6,0,3,-1,0,7,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3586() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,3,-1,0,8,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3587() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,3,-1,0,8,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3588() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,7,0,3,-1,0,8,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3589() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,4,-1,-1,7,0,3,-1,8,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3590() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,3,-1,8,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3591() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,3,-1,5,0,2,-1,6,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3592() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,4,5,5,-1,0,0,3,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3593() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,4,1,-1,0,0,-1,-1,6,7,3,-1,0,0,5,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3594() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,4,1,-1,0,0,-1,-1,6,7,3,-1,0,0,5,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3595() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,0,-1,-1,4,5,1,-1,6,7,3,-1,8,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3596() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,5,6,2,-1,7,0,2,-1,0,0,3,-1,0,0,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3597() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,4,5,6,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3598() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,4,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3599() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,-1,-1,-1,5,2,1,-1,-1,-1,-1,-1,6,0,3,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3600() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,8,-1,-1,-1,8,0,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest3601() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,8,0,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest3602() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,0,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest3603() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,4,5,1,-1,6,0,3,-1,0,7,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3604() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,2,-1,-1,7,0,3,-1,0,8,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3605() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,2,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,3,-1,8,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3606() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,5,-1,-1,7,0,3,-1,8,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3607() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,0,-1,-1,4,5,1,-1,6,0,3,-1,7,8,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3608() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,6,0,2,-1,7,8,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3609() {
        assertEquals(false, symKorat.isSat("1,1,-1,1,2,-1,-1,3,4,1,-1,5,0,2,-1,6,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3610() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,0,2,-1,6,0,-1,-1,0,0,3,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3611() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,0,-1,5,0,2,-1,6,0,2,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3612() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,0,2,-1,6,0,0,-1,0,0,3,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3613() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,4,5,0,-1,0,0,3,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3614() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,4,5,-1,-1,0,0,3,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3615() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,6,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3616() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,5,6,2,-1,0,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3617() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,6,7,2,-1,5,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3618() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3619() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,0,0,-1,-1,7,4,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3620() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3621() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,2,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3622() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,6,7,1,-1,0,0,-1,-1,0,0,-1,-1,8,4,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest3623() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,2,-1,-1,4,5,1,-1,6,7,3,-1,8,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3624() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,7,3,-1,8,0,3,-1,0,0,4,-1,0,0,-1,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3625() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,1,0,-1,-1,7,0,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3626() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3627() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,4,-1,6,7,1,-1,-1,-1,-1,-1,0,-1,-1,-1,8,0,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest3628() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,5,0,2,-1,0,6,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3629() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,0,3,-1,0,7,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3630() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,0,0,5,-1,4,0,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3631() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,3,-1,0,8,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3632() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,3,-1,5,6,1,-1,0,-1,-1,-1,7,0,3,-1,0,8,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3633() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,0,-1,-1,-1,7,0,3,-1,8,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3634() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,3,-1,-1,4,5,1,-1,6,0,3,-1,7,8,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3635() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,6,0,2,-1,7,5,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3636() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,6,0,2,-1,7,5,2,-1,-1,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3637() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,4,-1,5,0,2,-1,6,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3638() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,4,5,-1,-1,0,0,3,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3639() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3640() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,3,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3641() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,8,3,-1,0,4,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3642() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,2,-1,5,6,2,-1,0,7,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3643() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,7,0,-1,-1,0,0,3,-1,0,0,-1,-1,-1,2,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3644() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,2,-1,5,6,2,-1,7,0,2,-1,0,0,3,-1,0,0,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3645() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,4,0,2,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3646() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,-1,-1,-1,4,2,1,-1,5,0,3,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3647() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,1,-1,-1,7,0,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3648() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,3,-1,-1,-1,8,0,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest3649() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,8,0,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest3650() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,8,0,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest3651() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,0,-1,6,7,1,-1,-1,-1,-1,-1,0,-1,-1,-1,8,0,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest3652() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,0,-1,5,0,2,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3653() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,2,0,-1,-1,7,0,3,-1,0,8,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3654() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,7,-1,-1,8,0,3,-1,0,7,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3655() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,4,6,1,-1,7,0,3,-1,0,0,-1,-1,8,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3656() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,2,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,0,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3657() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,4,5,1,-1,6,0,3,-1,7,8,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3658() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,6,1,-1,0,0,5,-1,4,0,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3659() {
        assertEquals(false, symKorat.isSat("1,1,-1,0,2,-1,-1,3,4,1,-1,5,0,2,-1,6,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3660() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,7,3,-1,8,-1,-1,-1,0,0,4,-1,0,0,-1,-1,0,1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3661() {
        assertEquals(false, symKorat.isSat("1,1,-1,0,2,-1,-1,3,4,1,-1,5,6,2,-1,0,0,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3662() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3663() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,-1,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3664() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,3,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3665() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3666() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,0,-1,5,6,1,-1,0,-1,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3667() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,7,0,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3668() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,4,-1,5,0,2,-1,6,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3669() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,4,5,1,-1,6,0,3,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3670() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,1,0,-1,-1,4,5,1,-1,6,0,3,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3671() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,6,-1,-1,-1,8,0,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest3672() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,4,-1,-1,8,0,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest3673() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,4,-1,-1,7,0,3,-1,0,8,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3674() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,6,1,-1,0,0,5,-1,4,0,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3675() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,3,-1,0,8,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3676() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,5,0,2,-1,6,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3677() {
        assertEquals(false, symKorat.isSat("1,1,-1,0,2,-1,-1,3,4,1,-1,5,0,2,-1,6,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3678() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,0,-1,-1,4,5,1,-1,6,0,3,-1,7,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3679() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,6,7,1,-1,0,0,6,-1,-1,-1,-1,-1,4,0,3,-1,8,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3680() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,4,6,1,-1,7,0,3,-1,-1,-1,-1,-1,8,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3681() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,3,-1,8,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3682() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,0,3,-1,4,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest3683() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,4,6,1,-1,7,0,3,-1,-1,-1,-1,-1,8,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3684() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,5,6,1,-1,0,-1,-1,-1,7,0,3,-1,8,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3685() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,2,-1,-1,4,5,1,-1,6,0,3,-1,7,8,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3686() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,4,2,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3687() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,4,-1,5,6,2,-1,0,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3688() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,0,3,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3689() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,4,-1,4,5,1,-1,2,6,3,-1,0,0,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3690() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,6,-1,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3691() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,6,4,1,-1,0,0,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,6,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3692() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,7,3,-1,0,8,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3693() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,0,-1,-1,4,5,1,-1,6,7,3,-1,0,8,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3694() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,7,0,2,-1,0,0,3,-1,0,0,-1,-1,6,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3695() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3696() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,-1,4,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3697() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,4,-1,-1,0,7,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3698() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,4,1,-1,0,0,-1,-1,0,6,3,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3699() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3700() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3701() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,2,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3702() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,6,5,1,-1,0,-1,-1,-1,0,0,-1,-1,0,7,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3703() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,3,-1,0,5,2,-1,0,6,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3704() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,0,0,5,-1,0,4,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3705() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,0,4,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest3706() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,0,6,3,-1,2,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3707() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,4,-1,-1,0,7,3,-1,8,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3708() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,6,7,1,-1,0,-1,-1,-1,0,0,6,-1,0,5,3,-1,8,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3709() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,0,7,3,-1,8,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3710() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,0,6,2,-1,7,8,2,-1,-1,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3711() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,0,6,2,-1,7,8,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3712() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,3,-1,5,6,2,-1,0,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3713() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,4,1,-1,0,0,-1,-1,6,7,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3714() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3715() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,0,0,-1,-1,-1,-1,-1,-1,4,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest3716() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3717() {
        assertEquals(false, symKorat.isSat("1,1,-1,0,2,-1,-1,3,4,1,-1,5,6,2,-1,0,7,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3718() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,4,5,6,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3719() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,-1,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3720() {
        assertEquals(false, symKorat.isSat("1,1,-1,1,2,-1,-1,3,4,1,-1,0,5,2,-1,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3721() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,0,6,3,-1,7,-1,-1,-1,0,0,4,-1,0,8,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3722() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,7,-1,-1,0,7,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3723() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,0,0,5,-1,0,4,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3724() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,3,-1,-1,4,5,1,-1,0,6,3,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3725() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,4,1,-1,0,0,-1,-1,0,6,3,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3726() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,2,-1,-1,0,7,3,-1,0,8,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3727() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,0,0,-1,-1,0,7,3,-1,0,8,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3728() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,8,3,-1,0,4,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest3729() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,0,-1,0,5,2,-1,0,6,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3730() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,2,-1,6,6,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3731() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,3,-1,8,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3732() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,4,0,-1,-1,0,7,3,-1,8,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3733() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,4,5,1,-1,0,6,3,-1,7,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3734() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,4,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest3735() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,0,6,2,-1,7,0,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3736() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,3,-1,6,2,1,-1,0,0,-1,-1,-1,-1,-1,-1,0,7,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3737() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,4,-1,0,5,2,-1,6,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3738() {
        assertEquals(false, symKorat.isSat("1,1,-1,0,2,-1,-1,3,4,1,-1,5,6,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3739() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,0,0,6,-1,-1,-1,-1,-1,8,4,3,-1,0,0,-1,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3740() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,7,3,-1,0,8,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3741() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,3,-1,-1,4,5,1,-1,6,7,3,-1,8,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3742() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,7,0,3,-1,0,0,-1,-1,0,0,3,-1,-1,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3743() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,-1,-1,4,5,1,-1,6,7,3,-1,2,0,3,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3744() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,0,6,3,-1,7,-1,-1,-1,0,0,4,-1,5,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3745() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,0,6,3,-1,7,-1,-1,-1,0,0,4,-1,0,6,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3746() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3747() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3748() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest3749() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,4,6,1,-1,0,7,3,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3750() {
        assertEquals(false, symKorat.isSat("1,1,-1,0,2,-1,-1,3,4,1,-1,0,5,2,-1,0,6,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3751() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,1,-1,-1,0,7,3,-1,8,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3752() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,0,-1,-1,4,5,1,-1,0,6,3,-1,7,8,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3753() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,0,6,3,-1,7,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3754() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,2,-1,6,0,2,-1,0,0,3,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3755() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,2,-1,6,0,1,-1,0,0,3,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3756() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,4,5,-1,-1,2,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3757() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,2,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3758() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,4,1,-1,0,0,-1,-1,-1,-1,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest3759() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,3,-1,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3760() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,6,7,1,-1,0,0,-1,-1,0,0,-1,-1,4,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest3761() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,8,3,-1,0,4,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3762() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,-1,4,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3763() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,-1,4,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3764() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,2,-1,2,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3765() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,0,-1,0,5,2,-1,6,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3766() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,2,-1,0,5,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3767() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,7,-1,-1,0,8,3,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3768() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,2,0,-1,-1,4,5,1,-1,0,6,3,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3769() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,4,-1,-1,-1,0,7,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3770() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,5,-1,-1,-1,0,7,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3771() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,8,-1,-1,-1,0,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest3772() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,-1,-1,7,4,1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,0,0,7,-1"));
    }

    @Test
    public void TreeSetSolverTest3773() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,3,-1,0,4,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3774() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,-1,0,-1,-1,4,5,1,-1,0,6,3,-1,0,7,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3775() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,1,-1,-1,0,7,3,-1,0,8,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3776() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,4,5,1,-1,0,6,3,-1,0,7,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3777() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,6,4,1,-1,0,7,-1,-1,0,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest3778() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,2,-1,-1,-1,0,7,3,-1,8,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3779() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,2,-1,0,5,2,-1,6,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3780() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,-1,-1,4,5,1,-1,0,6,3,-1,7,8,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3781() {
        assertEquals(false, symKorat.isSat("1,1,-1,0,2,-1,-1,3,4,1,-1,0,5,2,-1,6,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3782() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,2,-1,6,7,2,-1,0,0,3,-1,2,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3783() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,0,-1,-1,4,5,1,-1,6,7,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3784() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,6,7,1,-1,0,0,-1,-1,-1,-1,-1,-1,4,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest3785() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3786() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,1,-1,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3787() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,7,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3788() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,1,-1,-1,4,5,1,-1,6,7,3,-1,8,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3789() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,4,5,1,-1,6,7,3,-1,8,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3790() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,7,0,2,-1,0,0,-1,-1,0,0,3,-1,7,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3791() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,-1,4,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3792() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,2,-1,6,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3793() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,0,6,3,-1,7,-1,-1,-1,0,0,4,-1,7,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3794() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,2,-1,0,1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3795() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,4,-1,-1,0,7,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3796() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,1,-1,-1,0,7,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3797() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,4,1,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,8,3,-1,0,0,7,-1"));
    }

    @Test
    public void TreeSetSolverTest3798() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,6,4,1,-1,0,7,-1,-1,-1,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest3799() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,6,-1,-1,0,7,3,-1,8,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3800() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,3,-1,8,4,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3801() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,0,6,3,-1,7,0,3,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3802() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,3,-1,2,5,1,-1,0,0,2,-1,6,7,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3803() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,0,5,2,-1,6,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3804() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,4,-1,4,5,1,-1,6,2,3,-1,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3805() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,1,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3806() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,3,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3807() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,3,-1,2,6,1,-1,0,0,-1,-1,0,0,2,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3808() {
        assertEquals(false, symKorat.isSat("1,1,-1,1,2,-1,-1,3,4,1,-1,5,6,2,-1,7,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3809() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,7,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,6,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3810() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,7,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,2,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3811() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,3,-1,5,2,1,-1,0,0,-1,-1,6,7,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3812() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,2,4,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3813() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,2,-1,0,3,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3814() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,-1,-1,4,2,1,-1,0,5,3,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3815() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,-1,0,-1,-1,4,5,1,-1,0,6,3,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3816() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,8,1,-1,0,0,7,-1,-1,-1,-1,-1,0,0,-1,-1,0,4,3,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3817() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,3,-1,0,8,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3818() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,0,-1,-1,0,7,3,-1,0,8,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3819() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,4,5,1,-1,0,6,3,-1,0,7,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3820() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,3,-1,0,8,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3821() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,0,5,2,-1,0,6,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3822() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,7,-1,-1,0,8,3,-1,7,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3823() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,4,-1,-1,0,7,3,-1,8,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3824() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,4,1,-1,6,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3825() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,4,5,1,-1,0,6,3,-1,7,8,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3826() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,2,-1,6,2,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3827() {
        assertEquals(false, symKorat.isSat("1,1,-1,1,2,-1,-1,3,4,1,-1,0,5,2,-1,6,0,2,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3828() {
        assertEquals(false, symKorat.isSat("1,1,-1,0,2,-1,-1,3,4,1,-1,0,5,2,-1,6,0,2,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3829() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,2,-1,6,7,5,-1,0,0,3,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3830() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,2,-1,6,7,2,-1,0,0,3,-1,3,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3831() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,3,-1,2,5,1,-1,0,0,2,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3832() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,3,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3833() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3834() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,4,-1,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3835() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,4,-1,5,6,2,-1,0,7,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3836() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,6,1,-1,0,0,5,-1,7,4,3,-1,0,8,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3837() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,7,8,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3838() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,7,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3839() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,4,5,-1,-1,6,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3840() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,3,4,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3841() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,0,-1,-1,0,4,2,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3842() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,0,-1,0,5,2,-1,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3843() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,0,6,3,-1,7,-1,-1,-1,0,0,4,-1,0,7,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3844() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3845() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest3846() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,0,0,5,-1,0,4,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3847() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,3,-1,-1,4,5,1,-1,0,6,3,-1,0,7,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3848() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,4,1,-1,0,7,-1,-1,-1,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest3849() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,4,-1,4,5,1,-1,0,2,3,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3850() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,7,0,-1,-1,0,8,3,-1,7,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3851() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,-1,0,-1,-1,4,5,1,-1,0,6,3,-1,7,8,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3852() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,2,-1,6,7,-1,-1,0,0,3,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3853() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,2,-1,0,5,2,-1,6,7,2,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3854() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,0,6,3,-1,2,7,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3855() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,6,5,2,-1,0,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3856() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,0,0,-1,-1,4,7,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3857() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,4,6,1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest3858() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,6,1,-1,0,0,5,-1,7,4,3,-1,8,0,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3859() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,0,5,2,-1,6,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3860() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,4,-1,4,5,1,-1,0,2,3,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3861() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,6,-1,-1,0,7,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3862() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,7,-1,-1,0,8,3,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3863() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,5,-1,-1,0,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest3864() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,5,-1,-1,0,7,3,-1,0,8,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3865() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,7,0,-1,-1,0,7,3,-1,8,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3866() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,-1,-1,-1,0,7,3,-1,8,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3867() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,0,7,3,-1,8,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3868() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,4,-1,4,5,1,-1,0,2,3,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3869() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,4,5,1,-1,-1,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3870() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,2,-1,5,6,2,-1,0,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3871() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,0,-1,5,6,2,-1,0,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3872() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,2,-1,5,6,2,-1,7,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3873() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,7,0,-1,-1,8,7,3,-1,0,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3874() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,6,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3875() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3876() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,0,0,5,-1,7,4,3,-1,0,8,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3877() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,2,-1,5,6,2,-1,7,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3878() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3879() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,0,1,-1,3,6,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3880() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,0,1,-1,6,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3881() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,4,0,1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3882() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,2,-1,6,0,1,-1,-1,-1,-1,-1,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3883() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,-1,-1,-1,-1,0,4,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3884() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,6,0,1,-1,0,7,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3885() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,0,1,-1,-1,-1,-1,-1,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3886() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,6,-1,6,0,1,-1,-1,-1,-1,-1,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3887() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,-1,-1,-1,-1,7,8,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3888() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,-1,-1,7,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3889() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,0,0,3,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3890() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,-1,-1,-1,5,2,1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3891() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,6,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3892() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3893() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,6,-1,6,7,1,-1,-1,-1,-1,-1,0,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3894() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,-1,-1,4,7,1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3895() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,5,6,1,-1,0,-1,-1,-1,0,0,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3896() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,4,-1,-1,0,0,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3897() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,5,-1,6,7,1,-1,-1,-1,-1,-1,0,-1,-1,-1,0,0,3,-1,0,8,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3898() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,2,-1,0,0,2,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3899() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,2,-1,-1,3,4,1,-1,0,0,2,-1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3900() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3901() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,0,-1,-1,0,0,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3902() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,3,-1,-1,0,0,3,-1,8,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3903() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3904() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,2,0,-1,-1,4,5,1,-1,0,0,3,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3905() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,6,7,1,-1,0,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,5,8,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3906() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,6,-1,-1,0,0,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3907() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,3,-1,-1,0,0,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3908() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,0,2,-1,5,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3909() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,0,2,-1,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3910() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,0,2,-1,5,0,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3911() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,7,-1,-1,0,7,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3912() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,2,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3913() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,5,-1,-1,-1,0,7,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3914() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,7,-1,-1,0,8,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3915() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,3,-1,-1,0,8,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3916() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,4,3,-1,0,8,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3917() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,6,-1,-1,-1,0,7,3,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3918() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,7,-1,-1,0,8,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3919() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,0,7,3,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3920() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,0,2,3,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3921() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,3,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3922() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,2,-1,6,0,2,-1,-1,-1,-1,-1,3,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3923() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,4,-1,0,5,2,-1,6,0,2,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3924() {
        assertEquals(false, symKorat.isSat("1,1,-1,0,2,-1,-1,3,4,1,-1,0,5,2,-1,6,0,2,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3925() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,2,-1,6,7,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3926() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,4,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3927() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,8,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3928() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,3,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3929() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,3,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3930() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,5,-1,-1,-1,7,0,3,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3931() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,6,5,1,-1,0,-1,-1,-1,7,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3932() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,5,0,2,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3933() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,2,-1,5,0,2,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3934() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,3,-1,-1,4,5,1,-1,6,0,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3935() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,4,-1,5,0,2,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3936() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3937() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,2,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3938() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,3,-1,-1,4,5,2,-1,-1,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3939() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,7,3,-1,8,-1,-1,-1,0,0,-1,-1,0,0,4,-1,0,8,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3940() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,4,-1,5,6,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3941() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3942() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,4,1,-1,0,6,-1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3943() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,-1,0,-1,-1,4,5,1,-1,6,7,3,-1,8,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3944() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,4,5,5,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3945() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,2,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3946() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,7,3,-1,8,-1,-1,-1,0,0,-1,-1,0,0,4,-1,0,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3947() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,3,-1,2,6,1,-1,0,0,-1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3948() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,6,7,1,-1,0,0,6,-1,0,0,-1,-1,8,4,3,-1,0,0,-1,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3949() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,0,-1,-1,4,5,1,-1,6,7,3,-1,0,8,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3950() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,4,1,-1,6,0,-1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3951() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,3,-1,5,6,2,-1,7,0,2,-1,0,0,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3952() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,4,6,1,-1,7,8,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest3953() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,4,-1,4,5,1,-1,6,2,3,-1,0,7,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3954() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,4,5,1,-1,6,7,3,-1,0,8,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3955() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,0,0,5,-1,7,4,3,-1,8,0,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3956() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,0,-1,-1,4,5,1,-1,6,7,3,-1,8,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3957() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,0,-1,-1,4,5,1,-1,6,7,3,-1,8,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3958() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,1,0,-1,-1,4,5,1,-1,6,7,3,-1,8,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3959() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,5,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3960() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,5,6,2,-1,0,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3961() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,6,7,2,-1,0,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3962() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,-1,0,-1,-1,4,5,1,-1,6,7,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3963() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,4,6,1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest3964() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,2,-1,-1,3,4,1,-1,5,6,2,-1,7,0,2,-1,0,0,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3965() {
        assertEquals(false, symKorat.isSat("1,1,-1,1,2,-1,-1,3,4,1,-1,5,6,2,-1,7,0,2,-1,0,0,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3966() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3967() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,0,0,-1,-1,4,7,3,-1,0,8,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3968() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,7,3,-1,8,-1,-1,-1,0,0,-1,-1,0,0,4,-1,8,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3969() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,7,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3970() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,6,1,-1,0,0,5,-1,7,4,3,-1,0,0,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3971() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,6,7,1,-1,0,-1,-1,-1,0,0,-1,-1,5,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest3972() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,6,7,2,-1,0,8,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3973() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,2,0,-1,-1,4,5,1,-1,6,7,3,-1,8,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3974() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,7,4,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3975() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3976() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,2,-1,-1,3,4,1,-1,5,6,2,-1,0,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3977() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,-1,-1,-1,5,2,1,-1,-1,-1,-1,-1,6,7,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3978() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,7,3,-1,8,-1,-1,-1,0,0,-1,-1,0,0,4,-1,1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3979() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,0,4,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3980() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,5,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3981() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,6,5,2,-1,7,0,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3982() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,7,0,2,-1,0,0,-1,-1,0,0,3,-1,2,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3983() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,7,3,-1,8,-1,-1,-1,0,0,-1,-1,0,0,4,-1,5,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3984() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,3,-1,5,6,2,-1,0,7,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3985() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,7,0,7,-1,0,0,-1,-1,0,0,3,-1,-1,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3986() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,4,5,3,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3987() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,7,3,-1,8,-1,-1,-1,0,0,-1,-1,0,0,4,-1,2,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3988() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,1,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest3989() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,0,-1,5,6,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3990() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,-1,-1,4,5,1,-1,2,6,3,-1,0,7,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3991() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,1,-1,-1,4,5,1,-1,6,7,3,-1,0,8,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3992() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,6,7,2,-1,0,5,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3993() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,2,-1,-1,3,4,1,-1,5,6,2,-1,7,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3994() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,-1,0,-1,-1,4,5,1,-1,6,7,3,-1,8,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3995() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,7,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3996() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,7,0,1,-1,0,0,-1,-1,0,0,3,-1,-1,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3997() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,0,3,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3998() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,6,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest3999() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,4,0,1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4000() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,0,1,-1,-1,-1,-1,-1,2,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4001() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4002() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,4,0,1,-1,0,0,3,-1,-1,-1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4003() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,3,-1,6,0,1,-1,-1,-1,-1,-1,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4004() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,3,-1,0,0,2,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4005() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,1,-1,-1,4,5,1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4006() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,-1,0,-1,-1,4,5,1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4007() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,5,7,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4008() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,4,-1,6,7,1,-1,-1,-1,-1,-1,8,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4009() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,3,-1,6,7,1,-1,-1,-1,-1,-1,8,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4010() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4011() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4012() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,4,1,-1,0,7,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4013() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,0,0,2,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4014() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,2,-1,-1,0,0,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4015() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,6,7,1,-1,0,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,8,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4016() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,6,-1,7,8,1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,6,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4017() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,7,-1,-1,0,0,3,-1,8,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4018() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,0,2,-1,5,6,4,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4019() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,4,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4020() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,0,5,2,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4021() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,0,6,3,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4022() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,2,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4023() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4024() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4025() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,6,-1,-1,0,8,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4026() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,3,-1,2,5,1,-1,-1,-1,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4027() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,0,0,-1,-1,0,7,3,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4028() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,4,3,-1,0,8,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4029() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,3,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4030() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,0,-1,-1,4,5,1,-1,0,6,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4031() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,3,-1,-1,0,7,3,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4032() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,3,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4033() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,7,-1,-1,0,7,3,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4034() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,2,-1,-1,4,5,1,-1,0,6,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4035() {
        assertEquals(false, symKorat.isSat("1,1,-1,1,2,-1,-1,3,4,1,-1,0,5,2,-1,6,0,2,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4036() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,0,6,3,-1,2,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4037() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,0,2,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4038() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4039() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,0,-1,-1,7,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4040() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,5,-1,-1,7,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4041() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,7,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4042() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4043() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4044() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,2,-1,5,0,2,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4045() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,4,-1,-1,7,0,3,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4046() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,7,-1,-1,8,0,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4047() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,3,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4048() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,6,-1,-1,7,0,3,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4049() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,6,4,1,-1,7,0,-1,-1,-1,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4050() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,2,-1,-1,3,4,1,-1,5,0,2,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4051() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,0,-1,-1,4,5,1,-1,6,0,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4052() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,4,1,-1,6,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4053() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,0,2,-1,6,0,1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4054() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,0,2,-1,6,7,2,-1,-1,-1,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4055() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,7,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4056() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,0,-1,-1,4,5,1,-1,6,7,3,-1,8,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4057() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,0,0,-1,-1,4,7,3,-1,8,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4058() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,4,5,2,-1,-1,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4059() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,-1,-1,-1,-1,-1,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4060() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,4,5,6,-1,-1,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4061() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,7,-1,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4062() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,-1,0,-1,-1,4,5,1,-1,6,7,3,-1,0,8,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4063() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,4,1,-1,0,6,-1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4064() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,-1,0,-1,-1,4,5,1,-1,6,7,3,-1,8,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4065() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,7,0,2,-1,0,0,-1,-1,0,0,3,-1,-1,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4066() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,7,3,-1,8,-1,-1,-1,0,0,-1,-1,0,0,4,-1,0,3,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4067() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4068() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,5,6,2,-1,0,7,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4069() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,7,7,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4070() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4071() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,-1,-1,4,5,1,-1,2,6,3,-1,7,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4072() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,0,3,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4073() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,-1,-1,4,5,1,-1,6,7,3,-1,0,8,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4074() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,6,5,2,-1,7,0,2,-1,0,0,3,-1,0,0,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4075() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,6,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4076() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,4,5,-1,-1,3,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4077() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,6,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4078() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,3,-1,-1,4,5,1,-1,6,7,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4079() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4080() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4081() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,6,7,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4082() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,0,0,5,-1,7,4,3,-1,8,0,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4083() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,8,3,-1,4,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4084() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,6,7,2,-1,8,0,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4085() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4086() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,2,-1,-1,4,5,2,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4087() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,4,-1,4,5,1,-1,6,2,3,-1,7,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4088() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,7,0,2,-1,0,0,-1,-1,0,0,3,-1,8,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4089() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4090() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,4,-1,5,6,2,-1,7,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4091() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,7,3,-1,2,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4092() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,7,3,-1,8,-1,-1,-1,0,0,-1,-1,0,0,4,-1,0,7,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4093() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,3,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4094() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,6,7,1,-1,0,0,-1,-1,-1,-1,-1,-1,4,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4095() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,2,-1,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4096() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,7,2,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4097() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,7,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,4,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4098() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,4,5,0,-1,-1,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4099() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,7,3,-1,8,-1,-1,-1,0,0,-1,-1,0,0,4,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4100() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,7,3,-1,0,2,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4101() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,0,-1,5,6,2,-1,0,7,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4102() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,7,0,2,-1,0,0,-1,-1,0,0,3,-1,4,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4103() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,-1,-1,4,5,1,-1,2,6,3,-1,7,0,3,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4104() {
        assertEquals(false, symKorat.isSat("1,1,-1,0,2,-1,-1,3,4,1,-1,5,6,2,-1,0,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4105() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,7,3,-1,8,-1,-1,-1,0,0,-1,-1,0,0,4,-1,0,1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4106() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,0,0,5,-1,7,4,3,-1,0,0,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4107() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,0,0,-1,-1,4,7,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4108() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,7,1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4109() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,8,3,-1,4,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4110() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,0,-1,-1,4,0,1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4111() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,0,1,-1,-1,5,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4112() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,0,1,-1,4,6,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4113() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,0,1,-1,0,6,-1,-1,0,0,3,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4114() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,0,1,-1,0,6,-1,-1,0,0,3,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4115() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,4,-1,5,0,1,-1,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4116() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,0,0,3,-1,6,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4117() {
        assertEquals(false, symKorat.isSat("1,1,-1,0,2,-1,-1,3,4,1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4118() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,0,7,-1,-1,0,0,3,-1,0,0,-1,-1,0,7,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4119() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4120() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,5,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4121() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,3,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4122() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,8,0,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4123() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,-1,0,-1,-1,4,5,1,-1,0,0,3,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4124() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,4,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4125() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,6,7,1,-1,0,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,5,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4126() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,1,-1,-1,0,0,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4127() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,7,-1,-1,0,0,3,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4128() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,0,0,3,-1,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4129() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,0,0,3,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4130() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4131() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4132() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,0,-1,0,0,2,-1,5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4133() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,2,-1,0,0,2,-1,5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4134() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,0,2,-1,5,6,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4135() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,0,0,2,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4136() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,2,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4137() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,2,-1,-1,3,4,1,-1,0,5,2,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4138() {
        assertEquals(false, symKorat.isSat("1,1,-1,1,2,-1,-1,3,4,1,-1,0,5,2,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4139() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,0,6,3,-1,7,-1,-1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4140() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,0,6,3,-1,7,-1,-1,-1,-1,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4141() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4142() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,8,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4143() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,2,-1,-1,4,5,1,-1,0,6,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4144() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,3,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4145() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,3,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4146() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,7,-1,-1,-1,0,8,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4147() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,2,-1,-1,0,7,3,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4148() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,1,-1,-1,0,7,3,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4149() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,0,-1,-1,4,5,1,-1,0,6,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4150() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,0,5,2,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4151() {
        assertEquals(false, symKorat.isSat("1,1,-1,0,2,-1,-1,3,4,1,-1,0,5,2,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4152() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,2,-1,6,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4153() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,0,5,2,-1,6,0,2,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4154() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,0,2,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4155() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,3,-1,2,5,1,-1,-1,-1,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4156() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,4,1,-1,0,7,-1,-1,-1,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4157() {
        assertEquals(false, symKorat.isSat("1,1,-1,0,2,-1,-1,3,4,1,-1,5,0,2,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4158() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,3,-1,8,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4159() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,-1,0,-1,-1,4,5,1,-1,6,0,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4160() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,0,2,-1,6,0,-1,-1,-1,-1,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4161() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,0,2,-1,6,0,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4162() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,3,-1,2,5,1,-1,-1,-1,-1,-1,6,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4163() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,3,-1,6,2,1,-1,0,0,-1,-1,-1,-1,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4164() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,5,6,2,-1,7,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4165() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4166() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,6,7,1,-1,0,0,6,-1,-1,-1,-1,-1,8,4,3,-1,0,0,-1,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4167() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,0,0,5,-1,7,4,3,-1,0,0,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4168() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,4,1,-1,0,6,-1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4169() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,1,0,-1,-1,4,5,1,-1,6,7,3,-1,0,8,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4170() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,4,5,2,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4171() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4172() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,6,7,2,-1,8,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4173() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,4,5,1,-1,6,7,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4174() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,3,-1,5,6,1,-1,0,-1,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4175() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,-1,0,-1,-1,4,5,1,-1,6,7,3,-1,0,8,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4176() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,2,-1,-1,4,5,1,-1,6,7,3,-1,8,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4177() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,-1,-1,4,5,1,-1,6,7,3,-1,8,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4178() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,7,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4179() {
        assertEquals(false, symKorat.isSat("1,1,-1,1,2,-1,-1,3,4,1,-1,5,6,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4180() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,5,-1,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4181() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,2,-1,5,6,1,-1,0,-1,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4182() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,4,5,1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4183() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,0,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4184() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,4,5,1,-1,6,7,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4185() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,6,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4186() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,4,-1,4,5,1,-1,6,2,3,-1,7,0,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4187() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,8,3,-1,4,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4188() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,-1,-1,-1,4,2,1,-1,5,6,3,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4189() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,7,-1,-1,-1,8,7,3,-1,0,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4190() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,6,5,2,-1,0,7,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4191() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,7,0,0,-1,0,0,-1,-1,0,0,3,-1,-1,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4192() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4193() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4194() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,5,6,2,-1,7,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4195() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,-1,0,-1,-1,4,5,1,-1,6,7,3,-1,0,8,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4196() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,7,3,-1,2,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4197() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,4,1,-1,6,0,-1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4198() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,7,3,-1,8,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4199() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,5,6,2,-1,0,7,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4200() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,6,1,-1,0,0,-1,-1,4,7,3,-1,0,8,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4201() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,7,0,5,-1,0,0,-1,-1,0,0,3,-1,-1,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4202() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,7,3,-1,0,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4203() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,6,5,2,-1,7,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4204() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,5,6,2,-1,7,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4205() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,0,0,-1,-1,4,7,3,-1,8,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4206() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,0,1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4207() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,0,1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4208() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,6,0,1,-1,-1,-1,-1,-1,0,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4209() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,-1,-1,-1,-1,7,1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4210() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,0,2,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4211() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,0,2,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4212() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,2,7,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4213() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,2,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4214() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,2,0,-1,-1,0,0,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4215() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,1,0,-1,-1,0,0,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4216() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,2,-1,-1,4,5,1,-1,0,0,3,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4217() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4218() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,5,-1,-1,-1,0,0,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4219() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,5,-1,-1,0,0,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4220() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,7,-1,-1,-1,0,0,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4221() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,0,-1,-1,-1,0,0,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4222() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,4,-1,-1,0,0,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4223() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,0,0,2,-1,6,5,2,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4224() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,0,0,3,-1,6,7,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4225() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,0,2,-1,5,6,7,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4226() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,0,6,3,-1,7,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4227() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,0,6,3,-1,7,-1,-1,-1,-1,-1,-1,-1,0,5,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4228() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,-1,0,-1,-1,4,5,1,-1,0,6,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4229() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4230() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,4,-1,-1,-1,0,7,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4231() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,8,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4232() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,-1,-1,7,8,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,4,3,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4233() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,4,5,1,-1,0,6,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4234() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,4,1,-1,0,6,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4235() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,0,4,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4236() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,0,6,3,-1,2,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4237() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,4,1,-1,7,0,-1,-1,-1,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4238() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,3,-1,8,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4239() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,3,-1,0,5,2,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4240() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,0,6,2,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4241() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,2,-1,6,0,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4242() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,2,-1,0,5,2,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4243() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,0,2,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4244() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,-1,0,-1,-1,4,5,1,-1,6,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4245() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4246() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,7,-1,-1,-1,8,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4247() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,6,-1,7,8,1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,6,0,3,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4248() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,0,3,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4249() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,0,-1,-1,7,0,3,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4250() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,0,-1,-1,4,5,1,-1,6,0,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4251() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,4,6,1,-1,7,0,3,-1,-1,-1,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4252() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,3,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4253() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,5,-1,-1,-1,7,0,3,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4254() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,7,0,3,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4255() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,-1,-1,4,5,1,-1,6,0,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4256() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,0,2,-1,6,0,5,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4257() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,0,2,-1,6,0,2,-1,-1,-1,-1,-1,1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4258() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,6,0,2,-1,7,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4259() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,3,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4260() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,0,-1,5,6,2,-1,7,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4261() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,4,5,1,-1,6,7,3,-1,0,8,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4262() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,5,6,2,-1,0,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4263() {
        assertEquals(false, symKorat.isSat("1,1,-1,1,2,-1,-1,3,4,1,-1,5,6,2,-1,7,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4264() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,5,6,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4265() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,-1,0,-1,-1,4,5,1,-1,6,7,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4266() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,4,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4267() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,4,5,1,-1,6,7,3,-1,0,8,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4268() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,3,-1,-1,4,5,1,-1,6,7,3,-1,0,8,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4269() {
        assertEquals(false, symKorat.isSat("1,1,-1,0,2,-1,-1,3,4,1,-1,5,6,2,-1,7,0,2,-1,0,0,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4270() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4271() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4272() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,6,4,1,-1,0,0,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4273() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,7,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,3,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4274() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4275() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,4,-1,4,5,1,-1,6,2,3,-1,0,0,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4276() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,4,-1,4,5,1,-1,6,2,3,-1,7,0,3,-1,0,0,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4277() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4278() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,4,5,-1,-1,4,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4279() {
        assertEquals(false, symKorat.isSat("1,1,-1,0,2,-1,-1,3,4,1,-1,5,6,2,-1,7,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4280() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,4,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4281() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,7,5,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4282() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,-1,-1,4,5,1,-1,2,6,3,-1,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4283() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,5,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4284() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,0,0,-1,-1,4,7,3,-1,0,8,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4285() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,1,-1,-1,4,5,2,-1,-1,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4286() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,2,1,-1,-1,-1,-1,-1,6,7,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4287() {
        assertEquals(false, symKorat.isSat("1,1,-1,0,2,-1,-1,3,4,1,-1,5,6,2,-1,7,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4288() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,7,6,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4289() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,7,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,5,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4290() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,4,5,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4291() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,2,-1,-1,3,4,1,-1,5,6,2,-1,7,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4292() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,6,7,1,-1,0,0,6,-1,-1,-1,-1,-1,8,4,3,-1,0,0,-1,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4293() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,0,-1,-1,4,5,2,-1,-1,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4294() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,3,-1,2,6,1,-1,0,0,-1,-1,0,0,2,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4295() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4296() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,2,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4297() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,0,1,-1,4,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4298() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,3,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4299() {
        assertEquals(false, symKorat.isSat("1,1,-1,1,2,-1,-1,3,4,1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4300() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,0,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4301() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4302() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4303() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4304() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,0,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4305() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,-1,-1,7,4,1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4306() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,4,6,1,-1,0,0,3,-1,0,0,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4307() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,1,0,-1,-1,0,0,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4308() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4309() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,2,-1,5,6,1,-1,0,-1,-1,-1,0,0,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4310() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,0,2,-1,5,0,2,-1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4311() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,0,2,-1,5,6,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4312() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,0,2,-1,5,6,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4313() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,0,6,2,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4314() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,2,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4315() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,3,-1,0,5,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4316() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,2,0,-1,-1,4,5,1,-1,0,6,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4317() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4318() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,1,-1,-1,0,7,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4319() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,3,-1,-1,-1,0,8,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4320() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,0,-1,-1,-1,0,8,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4321() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,0,-1,0,5,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4322() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,1,0,-1,-1,4,5,1,-1,0,6,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4323() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,0,7,3,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4324() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,3,-1,0,5,2,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4325() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,4,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4326() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,4,-1,5,6,1,-1,0,-1,-1,-1,0,7,3,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4327() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,2,-1,6,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4328() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,0,6,2,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4329() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,0,4,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4330() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4331() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4332() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,8,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,4,0,3,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4333() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,0,-1,-1,4,5,1,-1,6,0,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4334() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,2,-1,-1,-1,7,0,3,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4335() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,4,-1,5,6,1,-1,0,-1,-1,-1,7,0,3,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4336() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,7,0,3,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4337() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,0,2,-1,6,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4338() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,0,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4339() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,7,0,-1,-1,7,0,3,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4340() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,3,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4341() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,3,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4342() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,6,-1,-1,-1,7,0,3,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4343() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,7,-1,-1,7,0,3,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4344() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,5,0,2,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4345() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,3,-1,-1,4,5,2,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4346() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,7,3,-1,8,-1,-1,-1,0,0,-1,-1,0,0,4,-1,3,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4347() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,1,0,-1,-1,4,5,1,-1,6,7,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4348() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4349() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,4,5,4,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4350() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,6,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4351() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,1,-1,-1,4,5,1,-1,6,7,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4352() {
        assertEquals(false, symKorat.isSat("1,1,-1,1,2,-1,-1,3,4,1,-1,5,6,2,-1,0,7,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4353() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,6,7,2,-1,5,0,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4354() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,7,3,-1,8,-1,-1,-1,0,0,-1,-1,0,0,4,-1,0,2,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4355() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,5,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4356() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,6,5,2,-1,0,0,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4357() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4358() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,4,-1,5,6,1,-1,0,-1,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4359() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4360() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,4,5,-1,-1,5,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4361() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,4,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4362() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4363() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4364() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,3,-1,2,6,1,-1,0,0,-1,-1,0,0,2,-1,7,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4365() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4366() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,7,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4367() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,4,6,1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest4368() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,0,1,-1,6,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4369() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,0,0,3,-1,6,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4370() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4371() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,0,7,-1,-1,0,0,3,-1,0,0,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4372() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,4,5,1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4373() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,0,8,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4374() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,0,-1,-1,-1,0,0,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4375() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,7,-1,-1,0,0,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4376() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,0,8,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4377() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,2,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4378() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,-1,0,-1,-1,4,5,1,-1,0,0,3,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4379() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4380() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4381() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,2,-1,-1,3,4,1,-1,0,0,2,-1,5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4382() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,3,-1,0,0,2,-1,5,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4383() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,2,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4384() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4385() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,7,-1,-1,-1,0,7,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4386() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,8,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4387() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4388() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,3,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4389() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,4,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4390() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,4,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4391() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,3,-1,8,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4392() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,2,-1,6,0,2,-1,-1,-1,-1,-1,1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4393() {
        assertEquals(false, symKorat.isSat("1,1,-1,0,2,-1,-1,3,4,1,-1,5,0,2,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4394() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,0,3,-1,7,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4395() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,0,3,-1,7,-1,-1,-1,-1,-1,-1,-1,0,2,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4396() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,0,2,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4397() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,4,5,1,-1,6,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4398() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,7,-1,-1,7,0,3,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4399() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,1,-1,-1,4,5,1,-1,6,0,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4400() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,0,3,-1,0,4,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4401() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,3,-1,2,5,1,-1,-1,-1,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4402() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,6,4,1,-1,7,0,-1,-1,0,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4403() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,-1,0,-1,-1,4,5,1,-1,6,0,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4404() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,4,5,1,-1,6,0,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4405() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,0,-1,5,0,2,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4406() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,0,3,-1,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4407() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,0,2,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4408() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,5,0,2,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4409() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4410() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,-1,-1,4,2,1,-1,5,6,3,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4411() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,0,-1,5,6,2,-1,7,0,2,-1,0,0,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4412() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,4,1,-1,0,0,-1,-1,6,7,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4413() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,-1,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4414() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,0,-1,5,6,1,-1,0,-1,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4415() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,4,-1,5,6,2,-1,7,0,2,-1,0,0,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4416() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,0,-1,-1,4,5,1,-1,6,7,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4417() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,7,0,2,-1,0,0,-1,-1,0,0,3,-1,5,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4418() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,5,6,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4419() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4420() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,4,-1,5,6,2,-1,0,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4421() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,0,-1,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4422() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,4,5,5,-1,-1,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4423() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,3,-1,5,6,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4424() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,7,-1,-1,8,7,3,-1,0,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4425() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,3,-1,2,6,1,-1,0,0,-1,-1,0,0,2,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4426() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,1,-1,-1,4,5,2,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4427() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,3,-1,2,6,1,-1,0,0,-1,-1,0,0,2,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4428() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,7,3,-1,8,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4429() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,6,7,2,-1,5,0,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4430() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,7,3,-1,8,-1,-1,-1,0,0,-1,-1,0,0,4,-1,7,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4431() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,0,1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4432() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4433() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,2,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4434() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,2,-1,-1,4,5,1,-1,6,7,3,-1,0,8,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4435() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,0,1,-1,6,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4436() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,2,-1,-1,4,0,1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4437() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,-1,-1,-1,-1,0,1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4438() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,0,0,3,-1,6,-1,-1,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4439() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,2,-1,6,7,1,-1,-1,-1,-1,-1,0,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4440() {
        assertEquals(false, symKorat.isSat("1,1,-1,0,2,-1,-1,3,4,1,-1,0,0,2,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4441() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,0,-1,-1,0,0,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4442() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,1,-1,-1,4,5,1,-1,0,0,3,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4443() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,6,0,-1,-1,0,0,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4444() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,6,7,1,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,3,-1,8,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4445() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,1,-1,-1,4,5,1,-1,0,0,3,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4446() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,4,0,-1,-1,0,0,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4447() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,6,4,1,-1,7,8,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4448() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,4,8,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4449() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,2,-1,-1,3,4,1,-1,0,0,2,-1,5,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4450() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,2,-1,0,0,2,-1,5,6,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4451() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4452() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,1,-1,-1,4,5,1,-1,0,6,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4453() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,2,-1,-1,3,4,1,-1,0,5,2,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4454() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,7,-1,-1,0,7,3,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4455() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,0,6,3,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4456() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,4,3,-1,8,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4457() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,3,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4458() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,3,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4459() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,4,-1,-1,-1,0,7,3,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4460() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,0,6,2,-1,5,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4461() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,0,6,2,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4462() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,0,5,2,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4463() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,3,-1,2,5,1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4464() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,4,5,1,-1,6,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4465() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,7,-1,-1,-1,8,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4466() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,0,2,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4467() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,4,5,1,-1,6,0,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4468() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,4,5,1,-1,6,0,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4469() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,3,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4470() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,0,3,-1,4,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4471() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,2,-1,-1,-1,7,0,3,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4472() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,5,-1,-1,7,0,3,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4473() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,2,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4474() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,2,-1,-1,4,5,1,-1,6,0,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4475() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,0,2,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4476() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,2,-1,5,0,2,-1,6,0,2,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4477() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,2,0,3,-1,6,7,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4478() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,-1,-1,4,5,1,-1,2,6,3,-1,7,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4479() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4480() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,6,1,-1,0,0,-1,-1,4,7,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4481() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,0,6,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4482() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,2,-1,5,6,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4483() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,3,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4484() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,8,3,-1,0,4,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4485() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,4,1,-1,6,0,-1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4486() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,7,3,-1,8,-1,-1,-1,0,0,-1,-1,0,0,4,-1,6,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4487() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,5,6,1,-1,0,-1,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4488() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,7,0,2,-1,0,0,-1,-1,0,0,3,-1,1,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4489() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,0,-1,-1,4,5,1,-1,6,7,3,-1,0,8,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4490() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,4,-1,5,6,2,-1,7,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4491() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,5,6,2,-1,7,0,2,-1,0,0,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4492() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,5,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4493() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,0,7,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4494() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,7,0,2,-1,0,0,-1,-1,0,0,3,-1,6,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4495() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,0,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4496() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,0,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4497() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,7,3,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4498() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,0,-1,-1,5,0,2,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4499() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,4,0,-1,-1,0,0,-1,-1,7,0,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4500() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,7,-1,-1,0,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4501() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,-1,-1,8,0,3,-1,0,0,7,-1"));
    }

    @Test
    public void TreeSetSolverTest4502() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,6,-1,7,6,1,-1,-1,-1,-1,-1,0,-1,-1,-1,8,0,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4503() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,6,7,1,-1,0,0,7,-1,-1,-1,-1,-1,8,0,-1,-1,4,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4504() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,0,0,7,-1,-1,-1,-1,-1,8,0,-1,-1,4,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4505() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,0,-1,-1,0,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4506() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,4,0,-1,-1,0,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4507() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,4,5,1,-1,6,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4508() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,0,-1,5,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4509() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,0,6,2,-1,5,0,2,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4510() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,-1,3,-1,-1,4,5,5,-1,0,0,3,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4511() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,0,-1,-1,5,6,2,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4512() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,1,0,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,6,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4513() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,6,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4514() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,4,6,1,-1,0,0,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,6,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4515() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,0,-1,5,0,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4516() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,2,-1,6,7,2,-1,0,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4517() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,3,-1,0,5,2,-1,6,7,2,-1,0,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4518() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,0,-1,6,7,2,-1,0,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4519() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,-1,0,-1,-1,4,5,1,-1,0,0,-1,-1,6,0,3,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4520() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,7,-1,-1,0,0,-1,-1,7,0,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4521() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,7,0,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4522() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4523() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,6,4,1,-1,7,0,3,-1,-1,-1,-1,-1,8,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4524() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4525() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,-1,-1,4,5,1,-1,6,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4526() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,0,4,-1,3,5,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4527() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,0,3,-1,-1,4,5,2,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4528() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,-1,0,-1,-1,6,5,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4529() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,-1,5,-1,-1,6,7,2,-1,3,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4530() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,0,-1,-1,5,6,2,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4531() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,0,0,7,-1,-1,-1,-1,-1,0,0,-1,-1,4,8,3,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4532() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,2,-1,5,6,1,-1,0,-1,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,6,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4533() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,6,7,1,-1,0,-1,-1,-1,0,0,7,-1,0,0,-1,-1,5,8,3,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4534() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,4,5,1,-1,0,6,-1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4535() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,-1,0,-1,-1,5,0,2,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4536() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,5,-1,-1,0,0,-1,-1,7,0,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4537() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,2,-1,-1,4,5,1,-1,0,0,-1,-1,6,0,3,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4538() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,4,6,1,-1,0,0,-1,-1,-1,-1,-1,-1,7,0,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4539() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,0,0,-1,-1,7,0,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4540() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,5,-1,-1,-1,0,0,-1,-1,8,0,3,-1,0,0,7,-1"));
    }

    @Test
    public void TreeSetSolverTest4541() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,8,0,3,-1,0,0,7,-1"));
    }

    @Test
    public void TreeSetSolverTest4542() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,3,-1,5,2,1,-1,0,0,2,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4543() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,2,-1,0,5,-1,-1,6,0,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4544() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,-1,0,-1,-1,4,5,1,-1,0,6,-1,-1,7,0,3,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4545() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4546() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,3,-1,5,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4547() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,-1,3,-1,-1,4,5,-1,-1,0,0,3,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4548() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,0,0,-1,-1,0,0,-1,-1,7,4,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4549() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,6,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4550() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,7,0,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,6,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4551() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,1,0,-1,-1,4,5,1,-1,0,0,-1,-1,6,7,3,-1,0,0,5,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4552() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,6,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4553() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,2,5,1,-1,-1,-1,-1,-1,6,7,3,-1,0,0,5,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4554() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,4,1,-1,6,7,3,-1,8,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4555() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,0,0,-1,-1,5,0,2,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4556() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,0,0,-1,-1,5,0,2,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4557() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,6,1,-1,0,0,6,-1,0,0,-1,-1,4,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4558() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,8,0,3,-1,0,0,7,-1"));
    }

    @Test
    public void TreeSetSolverTest4559() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,0,-1,-1,4,5,1,-1,6,0,-1,-1,7,0,3,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4560() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,3,-1,5,6,1,-1,0,-1,-1,-1,7,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4561() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,5,0,-1,-1,0,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4562() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4563() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,7,-1,-1,-1,0,8,-1,-1,7,0,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4564() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,6,5,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4565() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,2,-1,5,6,2,-1,7,0,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4566() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,7,-1,8,0,2,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest4567() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,2,3,-1,-1,4,5,2,-1,0,0,3,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4568() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,0,-1,-1,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4569() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,3,0,-1,-1,5,6,2,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4570() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,4,1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4571() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,3,-1,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,6,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4572() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4573() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,4,5,1,-1,0,6,-1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4574() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,3,-1,-1,5,0,2,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4575() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,0,-1,-1,0,-1,-1,5,0,2,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4576() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,7,0,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4577() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,0,0,-1,-1,7,0,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4578() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4579() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4580() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,4,0,-1,-1,8,0,3,-1,0,0,7,-1"));
    }

    @Test
    public void TreeSetSolverTest4581() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,6,4,1,-1,7,0,3,-1,0,0,-1,-1,0,8,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4582() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,5,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4583() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,4,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4584() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,2,-1,6,0,2,-1,0,4,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4585() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,0,-1,6,0,2,-1,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4586() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,-1,-1,2,4,1,-1,5,6,3,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4587() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,6,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4588() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,5,-1,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,6,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4589() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,2,-1,-1,4,5,1,-1,6,0,-1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4590() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,3,-1,5,0,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4591() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,-1,3,-1,-1,4,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4592() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,-1,3,-1,-1,4,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4593() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,-1,5,-1,-1,6,0,2,-1,2,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4594() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,-1,5,-1,-1,6,0,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4595() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,4,-1,-1,5,0,2,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4596() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,4,6,1,-1,0,0,-1,-1,-1,-1,-1,-1,7,0,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4597() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,7,0,-1,-1,0,0,-1,-1,7,0,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4598() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,4,6,1,-1,0,0,-1,-1,-1,-1,-1,-1,7,0,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4599() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,2,-1,-1,7,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4600() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,6,0,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4601() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,2,-1,-1,4,5,1,-1,0,6,-1,-1,7,0,3,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4602() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4603() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,1,-1,-1,5,6,2,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4604() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,-1,5,-1,-1,6,7,2,-1,-1,4,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4605() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,1,0,-1,-1,4,5,1,-1,6,0,-1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4606() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,5,-1,6,7,2,-1,0,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4607() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,1,-1,6,7,2,-1,0,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4608() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,0,4,-1,3,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4609() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,1,-1,-1,5,0,2,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4610() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,4,0,-1,-1,5,0,2,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4611() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,7,0,-1,-1,7,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4612() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,6,5,1,-1,0,-1,-1,-1,7,0,3,-1,0,8,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4613() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,0,-1,-1,4,5,1,-1,6,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4614() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,2,-1,-1,4,5,1,-1,6,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4615() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,4,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4616() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,-1,3,-1,-1,4,5,-1,-1,0,0,3,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4617() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,-1,5,-1,-1,6,7,2,-1,-1,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4618() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,0,0,6,-1,0,0,-1,-1,4,7,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4619() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,6,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4620() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,-1,3,-1,-1,4,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4621() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,3,-1,-1,0,-1,-1,5,0,2,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4622() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,-1,5,-1,-1,6,0,2,-1,-1,1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4623() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,8,0,3,-1,0,0,7,-1"));
    }

    @Test
    public void TreeSetSolverTest4624() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,-1,-1,8,0,3,-1,0,0,7,-1"));
    }

    @Test
    public void TreeSetSolverTest4625() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4626() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,7,-1,-1,8,0,-1,-1,7,0,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4627() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4628() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,-1,-1,6,0,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4629() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4630() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,3,-1,-1,4,5,1,-1,0,6,-1,-1,7,0,3,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4631() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,4,-1,-1,7,0,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4632() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,0,-1,-1,4,5,1,-1,0,6,-1,-1,7,0,3,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4633() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4634() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,4,1,-1,7,0,3,-1,-1,-1,-1,-1,0,8,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4635() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,6,7,1,-1,0,-1,-1,-1,-1,-1,-1,-1,0,5,-1,-1,8,0,3,-1,0,0,7,-1"));
    }

    @Test
    public void TreeSetSolverTest4636() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,0,0,6,-1,7,8,-1,-1,4,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4637() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,7,0,2,-1,-1,-1,-1,-1,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4638() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,4,-1,5,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4639() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,6,7,1,-1,0,0,7,-1,0,0,-1,-1,0,0,-1,-1,4,8,3,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4640() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,1,-1,-1,4,5,1,-1,6,0,-1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4641() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,6,1,-1,0,0,-1,-1,0,7,-1,-1,8,4,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4642() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,4,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4643() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,-1,3,-1,-1,1,4,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4644() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,0,-1,-1,0,5,2,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4645() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4646() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4647() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,4,5,1,-1,0,6,-1,-1,0,7,3,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4648() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,4,-1,-1,0,7,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4649() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,4,5,1,-1,6,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4650() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,2,-1,-1,4,5,1,-1,6,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4651() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,0,-1,5,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4652() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,4,-1,0,5,2,-1,0,6,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4653() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,6,5,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4654() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,2,-1,-1,0,-1,-1,5,6,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4655() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,-1,5,-1,-1,6,7,2,-1,4,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4656() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,2,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4657() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4658() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,2,5,1,-1,-1,-1,-1,-1,6,7,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4659() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,4,5,1,-1,0,6,-1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4660() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,3,-1,0,5,2,-1,6,7,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4661() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,2,-1,-1,4,5,1,-1,0,0,-1,-1,0,6,3,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4662() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,3,0,-1,-1,0,0,-1,-1,0,7,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4663() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,8,3,-1,0,0,7,-1"));
    }

    @Test
    public void TreeSetSolverTest4664() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,8,-1,-1,-1,0,0,-1,-1,0,8,3,-1,0,0,7,-1"));
    }

    @Test
    public void TreeSetSolverTest4665() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,-1,-1,0,8,3,-1,0,0,7,-1"));
    }

    @Test
    public void TreeSetSolverTest4666() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,4,1,-1,0,6,3,-1,7,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4667() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,0,-1,-1,0,8,3,-1,0,0,7,-1"));
    }

    @Test
    public void TreeSetSolverTest4668() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4669() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,4,6,1,-1,7,0,-1,-1,-1,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4670() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,4,1,-1,0,7,3,-1,-1,-1,-1,-1,8,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4671() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,-1,-1,-1,7,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4672() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,0,5,-1,-1,0,6,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4673() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,3,-1,5,2,1,-1,0,0,2,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4674() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,4,5,1,-1,0,6,-1,-1,0,7,3,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4675() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,0,0,7,-1,-1,-1,-1,-1,0,8,-1,-1,0,4,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4676() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,6,7,1,-1,0,-1,-1,-1,-1,-1,-1,-1,0,5,-1,-1,0,8,3,-1,0,0,7,-1"));
    }

    @Test
    public void TreeSetSolverTest4677() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,5,0,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4678() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,2,0,-1,-1,4,5,1,-1,6,0,-1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4679() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,4,5,1,-1,6,0,-1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4680() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,6,0,-1,-1,5,7,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4681() {
        assertEquals(false, symKorat.isSat("1,1,-1,1,2,-1,-1,3,4,1,-1,0,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4682() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,2,-1,6,7,2,-1,0,2,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4683() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,-1,3,-1,-1,4,5,0,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4684() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,8,-1,-1,0,0,-1,-1,0,8,3,-1,0,0,7,-1"));
    }

    @Test
    public void TreeSetSolverTest4685() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4686() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4687() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,6,0,-1,-1,7,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4688() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,6,0,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4689() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,7,0,-1,-1,0,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4690() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,0,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4691() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,4,-1,-1,0,8,3,-1,0,0,7,-1"));
    }

    @Test
    public void TreeSetSolverTest4692() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,2,-1,-1,3,4,1,-1,5,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4693() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,-1,3,-1,-1,4,5,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4694() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,-1,3,-1,-1,4,5,-1,-1,2,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4695() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,5,-1,-1,5,6,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4696() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4697() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,4,0,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4698() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,1,-1,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4699() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,6,7,1,-1,0,0,7,-1,0,0,-1,-1,0,0,-1,-1,8,4,3,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4700() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,1,-1,-1,4,5,1,-1,6,0,-1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4701() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,0,-1,-1,4,5,1,-1,6,0,-1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4702() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,-1,0,-1,-1,4,5,1,-1,0,6,-1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4703() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,4,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4704() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,0,4,-1,0,3,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4705() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,1,-1,-1,0,5,2,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4706() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,3,-1,-1,0,-1,-1,0,5,2,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4707() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,3,-1,-1,4,5,1,-1,0,0,-1,-1,0,6,3,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4708() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,7,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4709() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,8,3,-1,0,0,7,-1"));
    }

    @Test
    public void TreeSetSolverTest4710() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,4,1,-1,0,8,3,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest4711() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,0,0,-1,-1,0,6,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4712() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,4,0,-1,-1,0,7,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4713() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4714() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,0,-1,-1,0,8,3,-1,0,0,7,-1"));
    }

    @Test
    public void TreeSetSolverTest4715() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,7,-1,-1,8,0,-1,-1,0,7,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4716() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,3,0,-1,-1,7,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4717() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,7,-1,-1,0,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4718() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,0,8,3,-1,0,0,7,-1"));
    }

    @Test
    public void TreeSetSolverTest4719() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,1,-1,-1,4,5,1,-1,6,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4720() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,2,-1,5,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4721() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,2,-1,0,6,2,-1,0,1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4722() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,-1,3,-1,-1,4,5,-1,-1,-1,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4723() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,-1,0,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4724() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,4,-1,-1,5,6,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4725() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,0,0,-1,-1,6,5,2,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4726() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,1,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4727() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,2,-1,-1,4,5,1,-1,0,6,-1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4728() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,-1,5,-1,-1,0,6,2,-1,2,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4729() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,1,0,-1,-1,0,0,-1,-1,0,7,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4730() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,4,0,-1,-1,0,7,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4731() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,6,5,1,-1,0,-1,-1,-1,0,7,3,-1,8,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4732() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,5,0,-1,-1,0,6,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4733() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,2,-1,0,6,2,-1,0,6,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4734() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,3,-1,0,5,2,-1,0,6,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4735() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,0,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4736() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,6,7,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest4737() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,3,-1,-1,0,-1,-1,5,6,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4738() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,3,-1,-1,4,5,1,-1,0,0,-1,-1,6,7,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4739() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,5,6,1,-1,0,-1,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4740() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,6,7,1,-1,0,0,-1,-1,0,0,-1,-1,0,0,-1,-1,4,8,3,-1,0,0,7,-1"));
    }

    @Test
    public void TreeSetSolverTest4741() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,0,0,6,-1,0,7,-1,-1,8,4,3,-1,-1,-1,-1,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4742() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,2,0,-1,-1,4,5,1,-1,0,6,-1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4743() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,-1,5,-1,-1,0,6,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4744() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,-1,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4745() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,0,0,-1,-1,0,7,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4746() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4747() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,0,-1,-1,0,8,3,-1,0,0,7,-1"));
    }

    @Test
    public void TreeSetSolverTest4748() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4749() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,4,-1,-1,0,7,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4750() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,0,-1,-1,4,5,1,-1,6,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4751() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,4,-1,5,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4752() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,6,-1,0,6,2,-1,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4753() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,8,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4754() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,-1,3,-1,-1,4,5,0,-1,-1,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4755() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,-1,3,-1,-1,4,5,4,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4756() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,-1,5,-1,-1,6,7,2,-1,-1,1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4757() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,0,0,-1,-1,0,0,-1,-1,4,7,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4758() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,0,-1,-1,4,5,1,-1,0,6,-1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4759() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,-1,-1,6,7,2,-1,5,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4760() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,-1,3,-1,-1,4,5,6,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4761() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,4,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4762() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,4,1,-1,0,6,3,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4763() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,6,4,1,-1,0,7,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4764() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,6,7,1,-1,0,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,8,3,-1,0,0,7,-1"));
    }

    @Test
    public void TreeSetSolverTest4765() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,5,-1,6,7,1,-1,-1,-1,-1,-1,0,-1,-1,-1,0,0,-1,-1,0,8,3,-1,0,0,7,-1"));
    }

    @Test
    public void TreeSetSolverTest4766() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,1,-1,-1,-1,7,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4767() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,0,-1,-1,-1,7,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4768() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,7,-1,-1,8,0,-1,-1,0,7,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4769() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,0,-1,5,6,1,-1,0,-1,-1,-1,7,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4770() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,4,-1,-1,0,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4771() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,1,0,-1,-1,4,5,1,-1,0,6,-1,-1,0,7,3,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4772() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,4,6,1,-1,0,7,-1,-1,-1,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4773() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,-1,0,-1,-1,4,5,1,-1,6,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4774() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,3,-1,-1,4,5,1,-1,6,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4775() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,-1,-1,0,6,2,-1,6,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4776() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,7,-1,0,7,2,-1,-1,-1,-1,-1,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4777() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,0,7,2,-1,-1,-1,-1,-1,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4778() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,2,3,-1,-1,4,5,2,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4779() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,7,0,-1,-1,0,0,-1,-1,8,7,3,-1,0,0,6,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4780() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,5,-1,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4781() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,3,-1,5,6,1,-1,0,-1,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4782() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,0,-1,5,6,1,-1,0,-1,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4783() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,1,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4784() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,3,-1,0,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4785() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,6,-1,6,7,2,-1,0,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4786() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,7,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4787() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,2,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,7,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4788() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,7,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4789() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,0,-1,-1,-1,0,0,-1,-1,0,8,3,-1,0,0,7,-1"));
    }

    @Test
    public void TreeSetSolverTest4790() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,0,0,6,-1,0,7,-1,-1,0,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4791() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,2,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4792() {
        assertEquals(false, symKorat.isSat("1,1,-1,1,2,-1,-1,3,4,1,-1,5,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4793() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,-1,3,-1,-1,4,5,-1,-1,-1,6,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4794() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,-1,0,-1,-1,5,6,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4795() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,3,0,-1,-1,5,6,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4796() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,2,0,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4797() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4798() {
        assertEquals(false, symKorat.isSat("1,1,-1,0,2,-1,-1,3,4,1,-1,5,0,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4799() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,4,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4800() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,4,1,-1,6,7,3,-1,0,8,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4801() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,-1,-1,5,7,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4802() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,2,-1,6,7,2,-1,0,5,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4803() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,5,1,-1,4,6,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4804() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,5,1,-1,6,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4805() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,0,4,1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4806() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4807() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,-1,5,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4808() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4809() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,7,7,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4810() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,2,7,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4811() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,6,7,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4812() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,0,7,-1,-1,0,0,-1,-1,0,0,3,-1,0,1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4813() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4814() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4815() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4816() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,2,-1,-1,-1,7,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4817() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,3,-1,-1,-1,7,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4818() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,4,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4819() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,3,-1,-1,-1,0,8,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4820() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,2,6,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4821() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,4,5,1,-1,6,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4822() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,8,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4823() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,7,8,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4824() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,4,6,1,-1,7,8,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4825() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,-1,0,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4826() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,0,0,-1,-1,0,2,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4827() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4828() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,6,-1,-1,-1,0,0,-1,-1,0,8,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4829() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,4,-1,6,7,1,-1,-1,-1,-1,-1,0,-1,-1,-1,0,0,-1,-1,0,8,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4830() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,-1,-1,0,8,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4831() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,2,-1,-1,7,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4832() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,5,-1,-1,7,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4833() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,7,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4834() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,2,5,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4835() {
        assertEquals(false, symKorat.isSat("1,1,-1,0,2,-1,-1,3,4,1,-1,0,5,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4836() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,3,-1,-1,4,5,1,-1,0,6,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4837() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,3,-1,-1,-1,0,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4838() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,5,-1,-1,0,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4839() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,6,4,1,-1,0,7,3,-1,0,0,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4840() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,4,1,-1,0,6,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4841() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,6,7,2,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4842() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,4,5,1,-1,0,0,-1,-1,6,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4843() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,-1,0,-1,-1,4,5,1,-1,0,0,-1,-1,6,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4844() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,1,-1,-1,4,5,1,-1,0,0,-1,-1,6,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4845() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,7,-1,-1,-1,0,0,-1,-1,8,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4846() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,6,7,1,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,-1,-1,8,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4847() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,-1,-1,8,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4848() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,0,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4849() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4850() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,1,0,-1,-1,4,5,1,-1,0,6,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4851() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,8,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4852() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4853() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,3,-1,5,6,1,-1,0,-1,-1,-1,0,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4854() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,2,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4855() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,2,-1,-1,3,4,1,-1,5,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4856() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,7,-1,7,0,2,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4857() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,-1,3,-1,-1,4,5,-1,-1,-1,-1,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4858() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,2,-1,-1,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4859() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,-1,5,-1,-1,6,7,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4860() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,0,-1,-1,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4861() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,0,0,6,-1,0,0,-1,-1,7,4,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4862() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,4,1,-1,6,7,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4863() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,4,5,1,-1,0,0,-1,-1,6,7,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4864() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,3,-1,-1,5,6,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4865() {
        assertEquals(false, symKorat.isSat("1,1,-1,1,2,-1,-1,3,4,1,-1,0,0,-1,-1,5,6,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4866() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,4,1,-1,6,7,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4867() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4868() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,7,-1,-1,-1,0,0,-1,-1,8,7,3,-1,0,0,6,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4869() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4870() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,0,-1,0,0,-1,-1,5,6,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4871() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest4872() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,-1,6,-1,-1,5,7,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4873() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,6,4,1,-1,7,8,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest4874() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,4,1,-1,6,7,3,-1,8,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4875() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,2,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4876() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,4,-1,0,5,2,-1,6,7,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4877() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,-1,3,-1,-1,4,5,-1,-1,-1,4,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4878() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,-1,3,-1,-1,4,5,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4879() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,0,-1,-1,4,5,1,-1,0,0,-1,-1,6,7,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4880() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,6,4,1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest4881() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,6,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4882() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,6,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest4883() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,4,-1,5,0,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4884() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,-1,5,-1,-1,6,7,2,-1,-1,6,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4885() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,5,0,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4886() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,3,-1,-1,4,5,1,-1,6,0,-1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4887() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,0,-1,6,7,2,-1,0,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4888() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,-1,3,-1,-1,4,5,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4889() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,0,4,-1,5,3,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4890() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,-1,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4891() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,2,-1,5,6,1,-1,0,-1,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4892() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,1,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4893() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,-1,-1,7,5,2,-1,0,0,4,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4894() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,3,-1,-1,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4895() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,4,5,1,-1,0,0,-1,-1,6,7,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4896() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,-1,-1,6,7,2,-1,7,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4897() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,-1,3,-1,-1,4,5,-1,-1,-1,2,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4898() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,-1,5,-1,-1,6,7,2,-1,-1,3,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4899() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,1,-1,-1,4,5,1,-1,0,0,-1,-1,6,7,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4900() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,7,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4901() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,4,6,1,-1,0,0,-1,-1,-1,-1,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4902() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,4,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4903() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,0,2,-1,-1,6,7,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4904() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,-1,-1,6,7,2,-1,4,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4905() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,-1,3,-1,-1,4,5,1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4906() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,4,5,1,-1,0,0,-1,-1,6,7,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4907() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,1,0,-1,-1,4,5,1,-1,0,0,-1,-1,6,7,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4908() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,6,5,1,-1,0,-1,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4909() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,3,-1,6,2,1,-1,0,0,-1,-1,0,0,2,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4910() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,5,1,-1,0,6,-1,-1,0,0,3,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4911() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,5,1,-1,6,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4912() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,5,1,-1,6,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4913() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,0,4,1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4914() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,1,4,-1,-1,0,5,1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4915() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,-1,0,-1,-1,4,5,1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4916() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4917() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4918() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,4,6,1,-1,7,0,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4919() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,2,-1,-1,-1,8,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4920() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,2,0,-1,-1,0,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4921() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,3,-1,-1,0,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4922() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,6,4,1,-1,0,0,3,-1,0,0,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4923() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,6,-1,6,7,1,-1,-1,-1,-1,-1,0,-1,-1,-1,0,8,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4924() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,3,-1,5,6,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4925() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,8,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4926() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,8,4,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4927() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,-1,-1,0,0,2,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4928() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,-1,3,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4929() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,3,-1,-1,0,4,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4930() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,-1,-1,4,5,1,-1,0,0,-1,-1,0,6,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4931() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,-1,-1,0,8,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4932() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,5,-1,-1,7,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4933() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,4,1,-1,0,7,3,-1,-1,-1,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4934() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,4,-1,-1,7,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4935() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,7,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4936() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,3,0,-1,-1,0,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4937() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4938() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,-1,-1,-1,0,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4939() {
        assertEquals(false, symKorat.isSat("1,1,-1,0,2,-1,-1,3,4,1,-1,5,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4940() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,3,-1,5,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4941() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,0,-1,-1,0,-1,-1,5,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4942() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,8,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4943() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,4,6,1,-1,0,0,-1,-1,-1,-1,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4944() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,4,6,1,-1,0,0,-1,-1,0,0,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4945() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,6,-1,7,8,1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,6,0,3,-1"));
    }

    @Test
    public void TreeSetSolverTest4946() {
        assertEquals(false, symKorat.isSat("1,1,-1,0,2,-1,-1,3,4,1,-1,5,0,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4947() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,4,0,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4948() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,0,-1,-1,4,5,1,-1,6,0,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4949() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,4,-1,5,6,1,-1,0,-1,-1,-1,7,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4950() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4951() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,4,6,1,-1,0,7,-1,-1,0,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4952() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,3,-1,-1,4,5,1,-1,6,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4953() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,-1,3,-1,-1,4,5,-1,-1,-1,-1,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4954() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,-1,3,-1,-1,4,5,1,-1,-1,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4955() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,4,5,1,-1,6,0,-1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4956() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,0,0,6,-1,7,0,-1,-1,8,4,3,-1,-1,-1,-1,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4957() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,2,-1,-1,4,5,1,-1,6,0,-1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4958() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,2,-1,5,0,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4959() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,1,-1,-1,4,5,1,-1,0,6,-1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4960() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,-1,3,-1,-1,4,5,2,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4961() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,0,-1,-1,6,5,2,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4962() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,3,-1,0,0,-1,-1,5,6,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4963() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,6,1,-1,0,0,6,-1,7,0,-1,-1,8,4,3,-1,-1,-1,-1,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4964() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,0,0,-1,-1,0,7,-1,-1,4,8,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4965() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,-1,3,-1,-1,4,5,-1,-1,-1,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4966() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,5,-1,-1,6,5,2,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4967() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,2,-1,-1,5,6,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4968() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4969() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,3,-1,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4970() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,0,-1,-1,0,-1,-1,5,6,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4971() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,-1,5,-1,-1,6,7,2,-1,-1,5,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4972() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,2,-1,0,0,-1,-1,5,6,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4973() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,0,-1,-1,4,5,1,-1,0,0,-1,-1,6,7,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4974() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,-1,-1,4,8,3,-1,0,0,7,-1"));
    }

    @Test
    public void TreeSetSolverTest4975() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,0,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4976() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,2,-1,-1,3,4,1,-1,5,0,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4977() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,4,1,-1,6,7,3,-1,8,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4978() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,1,0,-1,-1,4,5,1,-1,6,0,-1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4979() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,4,5,1,-1,0,6,-1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4980() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4981() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,-1,-1,4,5,1,-1,0,0,-1,-1,2,6,3,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4982() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,5,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4983() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4984() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,4,1,-1,6,7,3,-1,8,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4985() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,0,6,2,-1,7,5,2,-1,0,0,4,-1,0,0,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4986() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,-1,-1,6,7,2,-1,8,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4987() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4988() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,3,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4989() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,2,-1,0,5,2,-1,6,7,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4990() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4991() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,4,-1,5,6,1,-1,0,-1,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest4992() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,0,0,6,-1,7,0,-1,-1,8,4,3,-1,-1,-1,-1,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4993() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,-1,0,-1,-1,4,5,1,-1,0,6,-1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4994() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,0,-1,-1,5,6,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4995() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,6,4,1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest4996() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,0,-1,-1,4,5,1,-1,0,6,-1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest4997() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,2,-1,6,7,2,-1,0,8,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4998() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,5,1,-1,2,6,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest4999() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,0,5,1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5000() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,0,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5001() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,1,-1,-1,-1,-1,-1,7,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5002() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,0,6,1,-1,-1,-1,-1,-1,7,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5003() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,3,-1,-1,5,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5004() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,-1,5,-1,-1,0,0,2,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5005() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,0,-1,-1,4,5,1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5006() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,6,5,1,-1,0,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5007() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5008() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,-1,-1,7,8,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,0,-1,-1,0,0,3,-1"));
    }

    @Test
    public void TreeSetSolverTest5009() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,3,-1,-1,7,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5010() {
        assertEquals(false, symKorat.isSat("1,1,-1,0,2,-1,-1,3,4,1,-1,0,5,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5011() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,5,-1,-1,0,8,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5012() {
        assertEquals(false, symKorat.isSat("1,1,-1,0,2,-1,-1,3,4,1,-1,5,6,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5013() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,8,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5014() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,3,0,-1,-1,7,8,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5015() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,7,-1,-1,7,8,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5016() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,6,4,1,-1,0,0,3,-1,0,0,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5017() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,4,5,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5018() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,4,-1,0,0,2,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5019() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,3,0,-1,-1,0,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5020() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,4,6,1,-1,0,0,-1,-1,-1,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5021() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,4,6,1,-1,0,0,-1,-1,0,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5022() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,7,-1,-1,0,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5023() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,5,-1,6,7,1,-1,-1,-1,-1,-1,0,-1,-1,-1,0,0,-1,-1,0,8,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5024() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,2,-1,-1,0,0,-1,-1,0,8,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5025() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,4,5,1,-1,6,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5026() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,6,4,1,-1,0,7,3,-1,-1,-1,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5027() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,4,-1,0,5,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5028() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5029() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,0,4,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5030() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,4,1,-1,0,7,3,-1,-1,-1,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5031() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,6,-1,-1,0,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5032() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,0,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5033() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,4,1,-1,0,6,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5034() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,-1,-1,4,5,1,-1,6,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5035() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,0,3,-1,-1,4,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5036() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,8,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5037() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,5,-1,-1,0,0,-1,-1,8,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5038() {
        assertEquals(false, symKorat.isSat("1,1,-1,1,2,-1,-1,3,4,1,-1,0,5,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5039() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,-1,-1,4,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5040() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,0,-1,-1,4,5,1,-1,0,6,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5041() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,2,-1,-1,4,5,1,-1,6,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5042() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,6,7,-1,-1,5,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5043() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,0,-1,-1,4,5,1,-1,0,0,-1,-1,6,7,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5044() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,6,0,-1,-1,7,5,2,-1,0,0,4,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5045() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,-1,3,-1,-1,4,5,6,-1,-1,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5046() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,6,7,1,-1,0,0,7,-1,-1,-1,-1,-1,0,0,-1,-1,8,4,3,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5047() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,7,-1,-1,0,0,-1,-1,8,7,3,-1,0,0,6,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5048() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5049() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,2,0,-1,-1,6,7,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5050() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,2,-1,6,7,2,-1,0,7,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5051() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,-1,5,-1,-1,6,7,2,-1,-1,4,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5052() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5053() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5054() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,-1,5,-1,-1,6,7,2,-1,5,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5055() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,4,1,-1,6,7,3,-1,0,8,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5056() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,0,-1,-1,3,5,2,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5057() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,-1,0,-1,-1,5,6,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5058() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,2,-1,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5059() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,0,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5060() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,2,-1,-1,4,5,1,-1,0,0,-1,-1,6,7,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5061() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5062() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,2,0,-1,-1,4,5,1,-1,0,0,-1,-1,6,7,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5063() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,-1,-1,4,5,1,-1,0,0,-1,-1,6,7,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5064() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,3,0,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5065() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5066() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,-1,3,-1,-1,4,5,-1,-1,-1,1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5067() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,-1,3,-1,-1,4,5,-1,-1,4,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5068() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,0,-1,-1,5,6,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5069() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,3,-1,-1,4,5,1,-1,0,6,-1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest5070() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,1,0,-1,-1,4,5,1,-1,0,6,-1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest5071() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,-1,3,-1,-1,4,5,-1,-1,-1,-1,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5072() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,0,3,3,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5073() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,0,6,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5074() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,4,-1,-1,0,5,1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5075() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,0,6,1,-1,-1,-1,-1,-1,0,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5076() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5077() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,3,-1,-1,4,5,1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5078() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,3,7,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5079() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,0,7,-1,-1,0,0,-1,-1,0,0,3,-1,0,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5080() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,3,-1,5,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5081() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5082() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,4,5,1,-1,6,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5083() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,-1,-1,4,5,1,-1,6,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5084() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,1,-1,-1,7,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5085() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5086() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,3,-1,6,7,1,-1,-1,-1,-1,-1,0,-1,-1,-1,8,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5087() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,-1,0,-1,-1,4,5,1,-1,0,6,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5088() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5089() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,-1,-1,-1,0,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5090() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,4,6,1,-1,0,7,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5091() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,7,-1,-1,-1,0,8,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5092() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,-1,0,-1,-1,4,5,1,-1,6,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5093() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,2,-1,0,5,2,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5094() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5095() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,4,0,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5096() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5097() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,8,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5098() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,4,1,-1,0,7,3,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5099() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,5,-1,-1,0,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5100() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,4,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5101() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,-1,-1,0,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5102() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,5,0,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5103() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,4,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5104() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,5,0,-1,-1,0,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5105() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,4,-1,-1,-1,0,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5106() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,-1,-1,0,6,2,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5107() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5108() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,3,-1,-1,5,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5109() {
        assertEquals(false, symKorat.isSat("1,1,-1,1,2,-1,-1,3,4,1,-1,0,0,-1,-1,5,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5110() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5111() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,4,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5112() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,6,7,1,-1,0,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,5,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5113() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,4,5,1,-1,0,6,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5114() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,3,-1,-1,4,5,1,-1,0,6,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5115() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,1,-1,-1,0,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5116() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,4,-1,-1,8,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5117() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,1,-1,-1,4,5,1,-1,6,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5118() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,4,-1,0,0,-1,-1,5,6,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5119() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,-1,0,-1,-1,4,5,1,-1,0,0,-1,-1,6,7,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5120() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,0,-1,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5121() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,2,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5122() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,4,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5123() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,-1,3,-1,-1,4,5,4,-1,-1,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5124() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,-1,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5125() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,4,1,-1,6,7,3,-1,0,8,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5126() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,6,1,-1,0,0,-1,-1,0,7,-1,-1,4,8,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5127() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,-1,3,-1,-1,4,5,-1,-1,5,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5128() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,0,5,2,-1,6,7,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5129() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,0,6,2,-1,5,7,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5130() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,-1,3,-1,-1,4,5,-1,-1,-1,-1,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5131() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,-1,5,-1,-1,6,7,2,-1,-1,7,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5132() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,0,0,-1,-1,0,0,-1,-1,4,7,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5133() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,0,-1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest5134() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,4,5,1,-1,6,0,-1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest5135() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,3,-1,5,0,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5136() {
        assertEquals(false, symKorat.isSat("1,1,-1,0,2,-1,-1,3,4,1,-1,0,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5137() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,0,5,2,-1,6,7,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5138() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,6,-1,7,8,2,-1,0,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest5139() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,0,3,-1,-1,4,5,2,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5140() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5141() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,3,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5142() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,-1,-1,6,7,2,-1,1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5143() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,-1,3,-1,-1,4,5,2,-1,-1,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5144() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,1,3,-1,-1,4,5,2,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5145() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,0,-1,-1,5,6,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5146() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,-1,3,-1,-1,4,5,-1,-1,-1,-1,-1,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5147() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,1,0,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5148() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,0,0,-1,-1,7,0,-1,-1,4,8,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5149() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,4,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5150() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,2,-1,0,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5151() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,-1,0,-1,-1,4,5,1,-1,0,6,-1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest5152() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,2,0,-1,-1,5,6,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5153() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,-1,3,-1,-1,4,5,-1,-1,-1,-1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5154() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,-1,3,-1,-1,4,5,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5155() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,5,1,-1,1,6,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5156() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,1,-1,-1,-1,-1,-1,0,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5157() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,0,3,4,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5158() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,-1,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5159() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,-1,5,-1,-1,0,0,2,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5160() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,4,7,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5161() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,4,1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5162() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,-1,-1,4,5,1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5163() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5164() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,8,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5165() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,6,-1,6,7,1,-1,-1,-1,-1,-1,8,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5166() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,8,6,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5167() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,2,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5168() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,-1,0,-1,-1,4,5,1,-1,6,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5169() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,-1,0,-1,-1,4,5,1,-1,0,6,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5170() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5171() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,7,0,-1,-1,0,8,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5172() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5173() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,-1,-1,4,7,1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5174() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5175() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5176() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,4,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5177() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,2,0,-1,-1,4,5,1,-1,6,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5178() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,4,1,-1,0,0,3,-1,-1,-1,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5179() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,-1,0,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5180() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,0,0,-1,-1,0,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5181() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,2,0,-1,-1,4,5,1,-1,0,0,-1,-1,0,6,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5182() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5183() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,0,-1,-1,4,5,1,-1,6,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5184() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5185() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,4,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5186() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,4,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5187() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,4,5,1,-1,6,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5188() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,3,-1,-1,4,5,1,-1,6,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5189() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,0,-1,-1,2,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5190() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,0,-1,-1,8,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5191() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5192() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,0,-1,-1,-1,7,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5193() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5194() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,4,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5195() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,2,-1,-1,-1,0,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5196() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,4,1,-1,6,0,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5197() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,5,-1,6,0,2,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5198() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,-1,5,-1,-1,6,7,2,-1,8,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5199() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,0,0,6,-1,0,0,-1,-1,7,4,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5200() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,-1,3,-1,-1,4,5,-1,-1,-1,-1,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5201() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,-1,-1,2,4,1,-1,5,6,3,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5202() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,3,-1,6,7,2,-1,0,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5203() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,2,-1,6,7,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5204() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,-1,5,-1,-1,6,7,2,-1,6,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5205() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,6,7,1,-1,0,0,7,-1,-1,-1,-1,-1,0,0,-1,-1,8,4,3,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5206() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5207() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,0,-1,-1,4,5,1,-1,6,0,-1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest5208() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,-1,0,-1,-1,4,5,1,-1,0,0,-1,-1,6,7,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5209() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,3,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5210() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,5,0,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5211() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,1,-1,-1,5,6,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5212() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5213() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,-1,-1,6,7,2,-1,3,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5214() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,-1,6,-1,-1,7,5,2,-1,0,0,4,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5215() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,-1,5,-1,-1,6,7,2,-1,3,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5216() {
        assertEquals(false, symKorat.isSat("1,1,-1,0,2,-1,-1,3,4,1,-1,0,0,-1,-1,5,6,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5217() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,4,6,1,-1,0,0,-1,-1,-1,-1,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5218() {
        assertEquals(false, symKorat.isSat("1,1,-1,1,2,-1,-1,3,4,1,-1,5,0,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5219() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,0,0,6,-1,0,7,-1,-1,8,4,3,-1,-1,-1,-1,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5220() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,0,6,2,-1,7,8,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest5221() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,4,0,-1,-1,5,6,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5222() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,6,7,1,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,-1,-1,4,8,3,-1,0,0,7,-1"));
    }

    @Test
    public void TreeSetSolverTest5223() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5224() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,2,-1,6,7,2,-1,0,1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5225() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,0,5,1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5226() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,5,1,-1,-1,3,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5227() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,5,1,-1,5,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5228() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,5,1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5229() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,0,-1,-1,0,5,1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5230() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,1,-1,-1,-1,-1,-1,0,1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5231() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,-1,5,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5232() {
        assertEquals(false, symKorat.isSat("1,1,-1,0,2,-1,-1,3,4,1,-1,0,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5233() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,6,4,1,-1,0,0,3,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5234() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5235() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5236() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,6,-1,7,6,1,-1,-1,-1,-1,-1,0,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5237() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,8,3,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5238() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,6,0,-1,-1,7,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5239() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5240() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,6,4,1,-1,0,0,3,-1,0,0,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5241() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,2,-1,-1,3,4,1,-1,0,5,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5242() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5243() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,5,-1,-1,0,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5244() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,2,0,-1,-1,4,5,1,-1,0,6,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5245() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,4,1,-1,0,0,3,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5246() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5247() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,0,-1,-1,-1,0,8,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5248() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,1,-1,-1,4,5,1,-1,6,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5249() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,7,-1,-1,-1,7,8,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5250() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,-1,-1,-1,7,8,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5251() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,-1,3,-1,-1,0,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5252() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,4,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5253() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,0,-1,-1,-1,0,0,-1,-1,0,8,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5254() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,6,-1,6,7,1,-1,-1,-1,-1,-1,0,-1,-1,-1,0,0,-1,-1,0,8,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5255() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,0,-1,-1,0,8,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5256() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,1,-1,-1,7,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5257() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5258() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,8,-1,-1,0,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5259() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,0,6,2,-1,0,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5260() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,4,-1,-1,0,-1,-1,5,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5261() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,-1,5,-1,-1,6,0,2,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5262() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,-1,-1,2,4,1,-1,5,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5263() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,4,5,1,-1,0,0,-1,-1,6,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5264() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5265() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,7,-1,-1,0,0,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5266() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,3,-1,-1,-1,7,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5267() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,4,1,-1,6,0,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5268() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,-1,0,-1,-1,6,5,2,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5269() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,6,0,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5270() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,-1,0,-1,-1,4,5,1,-1,6,0,-1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest5271() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,4,5,1,-1,0,6,-1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest5272() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,4,-1,6,7,2,-1,0,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5273() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,-1,3,-1,-1,4,5,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5274() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,4,1,-1,6,7,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5275() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,-1,0,-1,-1,4,5,1,-1,6,0,-1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest5276() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,0,6,-1,-1,5,7,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5277() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,-1,3,-1,-1,4,5,-1,-1,-1,5,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5278() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5279() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5280() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,2,-1,6,7,2,-1,0,4,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5281() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,3,-1,6,2,1,-1,0,0,-1,-1,0,0,2,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5282() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,-1,3,-1,-1,4,5,-1,-1,1,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5283() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,6,1,-1,0,0,-1,-1,0,0,-1,-1,4,7,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5284() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,4,-1,5,4,1,-1,6,2,3,-1,0,7,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5285() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,0,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5286() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,3,-1,6,2,1,-1,0,0,-1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5287() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,0,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5288() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,-1,5,-1,-1,6,7,2,-1,7,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5289() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,4,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5290() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,3,-1,-1,0,4,1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5291() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,4,-1,-1,0,5,1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5292() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,4,1,-1,0,0,3,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5293() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,2,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5294() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,2,-1,-1,3,4,1,-1,0,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5295() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5296() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5297() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,7,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5298() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5299() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,4,-1,-1,-1,7,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5300() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,8,-1,-1,8,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5301() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,4,7,1,-1,8,0,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5302() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,5,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5303() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,6,4,1,-1,0,0,3,-1,-1,-1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5304() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,1,-1,-1,0,8,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5305() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,4,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5306() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,8,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5307() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,3,-1,-1,0,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5308() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5309() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,6,-1,-1,0,0,-1,-1,0,8,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5310() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,2,-1,5,0,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5311() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5312() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,2,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5313() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,5,-1,-1,-1,7,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5314() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,5,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5315() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,0,-1,-1,-1,0,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5316() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,4,-1,-1,0,8,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5317() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,4,5,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5318() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,-1,-1,0,6,2,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5319() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,2,0,-1,-1,5,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5320() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,3,-1,-1,4,5,1,-1,0,0,-1,-1,6,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5321() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,4,1,-1,7,0,3,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5322() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,6,4,1,-1,7,0,3,-1,0,0,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5323() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,4,-1,6,7,1,-1,-1,-1,-1,-1,0,-1,-1,-1,0,0,-1,-1,8,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5324() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,0,-1,-1,8,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5325() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,7,-1,-1,-1,0,8,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5326() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,6,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5327() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,2,-1,6,7,2,-1,0,6,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5328() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,4,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5329() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,6,1,-1,0,0,6,-1,0,7,-1,-1,8,4,3,-1,-1,-1,-1,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5330() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,5,-1,6,7,2,-1,0,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5331() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,1,-1,6,7,2,-1,0,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5332() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,0,0,-1,-1,7,0,-1,-1,4,8,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5333() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5334() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,-1,3,-1,-1,4,5,-1,-1,-1,-1,-1,-1,0,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5335() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,6,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5336() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,0,-1,0,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5337() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,-1,-1,6,7,2,-1,2,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5338() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,-1,-1,4,5,1,-1,6,0,-1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest5339() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,4,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5340() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,6,-1,7,6,2,-1,0,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5341() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,2,-1,6,7,2,-1,0,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5342() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,-1,3,-1,-1,4,5,-1,-1,-1,3,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5343() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,0,0,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5344() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,-1,3,-1,-1,4,5,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5345() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,0,6,-1,-1,7,5,2,-1,0,0,4,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5346() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5347() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,0,1,-1,1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5348() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,0,1,-1,5,6,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5349() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,1,4,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5350() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,0,4,1,-1,0,0,1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5351() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,0,-1,0,0,1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5352() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,5,1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5353() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,5,1,-1,4,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5354() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,0,6,1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5355() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5356() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,0,6,1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5357() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,1,-1,-1,4,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5358() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,0,1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5359() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,0,1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5360() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,2,4,-1,-1,5,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5361() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,6,0,1,-1,-1,-1,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5362() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5363() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,4,5,1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5364() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5365() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,2,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5366() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5367() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,8,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5368() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,2,-1,5,6,1,-1,0,-1,-1,-1,7,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5369() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,3,-1,-1,0,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5370() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,7,-1,-1,0,8,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5371() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,4,6,1,-1,7,8,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5372() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,1,-1,-1,7,8,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5373() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,4,-1,5,6,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5374() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,4,-1,5,0,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5375() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5376() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5377() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,0,-1,-1,0,4,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5378() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,8,0,-1,-1,0,4,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5379() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,3,5,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5380() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,0,7,2,-1,-1,-1,-1,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5381() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5382() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5383() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,3,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5384() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5385() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,4,7,1,-1,0,0,-1,-1,-1,-1,-1,-1,8,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5386() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,5,0,-1,-1,7,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5387() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,4,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5388() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,6,-1,-1,-1,7,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5389() {
        assertEquals(false, symKorat.isSat("1,1,-1,1,2,-1,-1,3,4,1,-1,0,5,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5390() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,0,-1,-1,4,5,1,-1,0,6,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5391() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,1,0,-1,-1,0,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5392() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,3,-1,-1,4,5,1,-1,0,6,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5393() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,4,1,-1,0,0,3,-1,-1,-1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5394() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,4,-1,-1,0,8,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5395() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,0,-1,-1,4,5,1,-1,6,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5396() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,4,1,-1,0,0,3,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5397() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,4,-1,5,6,1,-1,0,-1,-1,-1,7,8,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5398() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,4,5,1,-1,0,0,-1,-1,0,6,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5399() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,-1,-1,4,7,1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5400() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,7,-1,-1,7,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5401() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,3,0,-1,-1,7,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5402() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,4,1,-1,0,6,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5403() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5404() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,4,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5405() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,-1,0,-1,-1,4,5,1,-1,6,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5406() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,7,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5407() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,1,0,-1,-1,4,5,1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5408() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,4,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5409() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5410() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,5,-1,6,7,1,-1,-1,-1,-1,-1,8,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5411() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5412() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5413() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,2,-1,-1,7,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5414() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,2,-1,-1,4,5,1,-1,0,6,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5415() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,2,-1,-1,0,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5416() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,4,1,-1,0,0,3,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5417() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,2,-1,-1,-1,7,8,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5418() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,-1,-1,0,0,2,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5419() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,5,6,2,-1,0,0,2,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5420() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,4,5,1,-1,0,0,-1,-1,0,6,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5421() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5422() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,0,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5423() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,2,5,1,-1,-1,-1,-1,-1,0,6,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5424() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,0,-1,-1,4,5,1,-1,6,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5425() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,6,7,1,-1,0,-1,-1,-1,-1,-1,-1,-1,5,0,-1,-1,0,8,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5426() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,4,1,-1,0,6,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5427() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,7,0,-1,-1,0,8,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5428() {
        assertEquals(false, symKorat.isSat("1,1,-1,1,2,-1,-1,3,4,1,-1,5,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5429() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,2,-1,0,6,2,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5430() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5431() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,0,7,2,-1,-1,-1,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5432() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,4,6,1,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5433() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5434() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,4,-1,5,6,1,-1,0,-1,-1,-1,0,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5435() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,6,7,1,-1,0,-1,-1,-1,-1,-1,-1,-1,0,5,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5436() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,2,-1,5,6,1,-1,0,-1,-1,-1,7,8,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5437() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,3,-1,5,6,1,-1,0,-1,-1,-1,7,8,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5438() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,5,6,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5439() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,5,6,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5440() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,4,1,-1,0,6,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5441() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,6,4,1,-1,0,7,3,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5442() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5443() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,6,5,1,-1,0,-1,-1,-1,0,7,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5444() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,8,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5445() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,4,6,1,-1,7,0,-1,-1,-1,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5446() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,7,-1,-1,7,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5447() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,3,-1,5,2,1,-1,-1,-1,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5448() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,2,-1,-1,0,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5449() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,0,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5450() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,0,-1,5,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5451() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,3,-1,4,2,1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5452() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,7,8,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5453() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,4,6,1,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5454() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,8,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5455() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,7,0,-1,-1,7,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5456() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5457() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,2,-1,-1,-1,0,8,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5458() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,8,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,4,-1,-1,0,0,3,-1"));
    }

    @Test
    public void TreeSetSolverTest5459() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5460() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,3,-1,-1,4,5,1,-1,6,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5461() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,4,-1,-1,7,8,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5462() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,2,-1,-1,7,8,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5463() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,0,6,2,-1,0,0,2,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5464() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,0,5,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5465() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,3,-1,-1,5,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5466() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,3,-1,-1,4,5,1,-1,0,0,-1,-1,0,6,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5467() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,5,-1,-1,-1,0,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5468() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,3,-1,-1,-1,0,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5469() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,-1,-1,0,4,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5470() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,2,-1,-1,-1,7,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5471() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,2,-1,-1,4,5,1,-1,0,6,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5472() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,4,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5473() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,2,0,-1,-1,4,5,1,-1,0,6,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5474() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,6,7,1,-1,0,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,0,5,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5475() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,5,6,1,-1,0,-1,-1,-1,0,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5476() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,2,-1,0,6,2,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5477() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,0,-1,-1,5,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5478() {
        assertEquals(false, symKorat.isSat("1,1,-1,1,2,-1,-1,3,4,1,-1,5,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5479() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,2,-1,6,7,1,-1,-1,-1,-1,-1,0,-1,-1,-1,8,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5480() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,0,6,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5481() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,-1,-1,4,5,1,-1,0,6,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5482() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,4,1,-1,0,0,3,-1,-1,-1,-1,-1,0,0,-1,-1,0,8,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5483() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,0,-1,-1,-1,7,8,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5484() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,4,-1,0,5,2,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5485() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,0,0,2,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5486() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,0,0,2,-1,-1,-1,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5487() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,0,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5488() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,2,-1,-1,4,5,1,-1,0,0,-1,-1,0,6,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5489() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5490() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,4,1,-1,0,6,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5491() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,6,4,1,-1,0,7,3,-1,-1,-1,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5492() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,7,-1,-1,8,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5493() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5494() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,6,7,1,-1,0,-1,-1,-1,-1,-1,-1,-1,0,5,-1,-1,0,8,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5495() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,6,-1,0,6,2,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5496() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,0,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5497() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,-1,5,-1,-1,0,0,2,-1,1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5498() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5499() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,2,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5500() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,4,-1,6,7,1,-1,-1,-1,-1,-1,8,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5501() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,8,8,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5502() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,4,1,-1,0,0,3,-1,-1,-1,-1,-1,8,0,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5503() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,4,0,-1,-1,7,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5504() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,6,5,1,-1,0,-1,-1,-1,0,0,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5505() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,-1,-1,7,4,1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5506() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,2,-1,-1,-1,0,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5507() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,8,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5508() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,8,-1,-1,0,8,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5509() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,8,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5510() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,2,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,8,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5511() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,2,-1,0,0,2,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5512() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,8,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5513() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,-1,-1,0,8,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5514() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,2,-1,-1,4,5,1,-1,6,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5515() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,5,0,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5516() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,-1,0,-1,-1,4,5,1,-1,0,6,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5517() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,7,-1,-1,0,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5518() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,-1,-1,0,6,2,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5519() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,0,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5520() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5521() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,4,-1,-1,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5522() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,0,7,-1,-1,0,0,-1,-1,0,0,3,-1,0,5,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5523() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,8,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5524() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,-1,-1,7,4,1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5525() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,5,-1,-1,-1,7,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5526() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,8,-1,-1,-1,8,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5527() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,8,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5528() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,2,-1,0,5,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5529() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,7,-1,-1,0,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5530() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5531() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,2,0,-1,-1,7,8,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5532() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,4,-1,5,6,2,-1,0,0,2,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5533() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,2,0,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5534() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,8,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5535() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,0,-1,5,6,1,-1,0,-1,-1,-1,0,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5536() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,8,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5537() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,0,-1,-1,0,4,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5538() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,6,-1,-1,7,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5539() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,0,0,-1,-1,0,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5540() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5541() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,4,-1,5,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5542() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,0,0,-1,-1,0,0,-1,-1,7,0,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5543() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,4,1,-1,6,0,3,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5544() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,0,-1,-1,6,0,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5545() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,2,5,1,-1,-1,-1,-1,-1,6,0,3,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5546() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,0,-1,-1,8,0,3,-1,0,0,7,-1"));
    }

    @Test
    public void TreeSetSolverTest5547() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,0,0,6,-1,0,7,-1,-1,4,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5548() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,2,0,-1,-1,4,5,1,-1,0,6,-1,-1,7,0,3,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5549() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,3,-1,-1,0,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5550() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,0,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5551() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,2,-1,5,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5552() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,6,7,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest5553() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,8,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5554() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,1,0,-1,-1,5,6,2,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5555() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,6,4,1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5556() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,7,-1,-1,0,0,-1,-1,8,7,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5557() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,4,-1,5,6,1,-1,0,-1,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,6,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5558() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,-1,0,-1,-1,4,5,1,-1,6,0,-1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5559() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,0,0,-1,-1,7,0,-1,-1,8,4,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5560() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,0,0,6,-1,0,7,-1,-1,4,8,3,-1,-1,-1,-1,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5561() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,-1,-1,6,7,2,-1,3,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5562() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,2,0,-1,-1,0,0,-1,-1,7,0,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5563() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,2,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,7,0,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5564() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,3,-1,-1,7,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5565() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,4,-1,5,6,1,-1,0,-1,-1,-1,7,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5566() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,3,-1,0,5,-1,-1,6,0,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5567() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5568() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,5,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5569() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,6,-1,6,0,2,-1,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5570() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5571() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,0,-1,7,0,2,-1,-1,-1,-1,-1,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5572() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,6,-1,-1,0,0,4,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5573() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,6,-1,-1,0,0,4,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5574() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,6,5,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5575() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,6,3,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5576() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,3,-1,-1,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5577() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,0,0,-1,-1,6,7,3,-1,0,0,5,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5578() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,4,5,1,-1,0,0,-1,-1,6,7,3,-1,0,0,5,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5579() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,6,7,1,-1,0,0,7,-1,-1,-1,-1,-1,0,0,-1,-1,4,8,3,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5580() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,4,1,-1,6,7,3,-1,8,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5581() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,6,0,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5582() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,0,3,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5583() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,6,-1,-1,0,0,-1,-1,7,0,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5584() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,3,-1,5,0,-1,-1,6,0,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5585() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,0,-1,-1,4,5,1,-1,6,0,-1,-1,7,0,3,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5586() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,0,6,-1,-1,5,0,2,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5587() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,4,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5588() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,-1,5,-1,-1,6,7,2,-1,1,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5589() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,-1,5,-1,-1,6,7,2,-1,0,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5590() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,1,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,6,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5591() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,6,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5592() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5593() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,3,-1,0,0,-1,-1,5,0,2,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5594() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,-1,0,-1,-1,4,5,1,-1,0,0,-1,-1,6,0,3,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5595() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,7,0,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5596() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,0,0,6,-1,0,0,-1,-1,4,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5597() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,0,0,6,-1,7,0,-1,-1,4,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5598() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,2,-1,5,6,1,-1,0,-1,-1,-1,7,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5599() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,7,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5600() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,4,5,1,-1,0,6,-1,-1,7,0,3,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5601() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,3,-1,-1,4,5,1,-1,6,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest5602() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,6,7,-1,0,0,4,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5603() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,4,-1,0,0,-1,-1,5,6,2,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5604() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,2,-1,-1,3,4,1,-1,0,0,-1,-1,5,6,2,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5605() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,6,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5606() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,0,4,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5607() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,7,0,-1,-1,0,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5608() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,6,4,1,-1,7,0,3,-1,-1,-1,-1,-1,8,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5609() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,2,-1,-1,7,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5610() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,0,6,-1,-1,7,0,3,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5611() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,0,-1,0,5,-1,-1,6,0,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5612() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,6,7,-1,-1,5,0,2,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5613() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,6,-1,-1,0,0,4,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5614() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,6,-1,-1,0,0,4,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5615() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,6,-1,-1,0,0,4,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5616() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,5,-1,-1,5,6,2,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5617() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,4,-1,-1,5,6,2,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5618() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,0,-1,-1,4,5,1,-1,6,0,-1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5619() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,6,0,-1,-1,5,7,2,-1,0,0,4,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5620() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,0,0,-1,-1,0,7,-1,-1,8,4,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5621() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,0,6,2,-1,7,5,2,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5622() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,0,5,2,-1,6,7,2,-1,0,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5623() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,8,0,3,-1,0,0,7,-1"));
    }

    @Test
    public void TreeSetSolverTest5624() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,4,6,1,-1,7,0,-1,-1,-1,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5625() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,4,6,1,-1,7,0,-1,-1,-1,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5626() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,4,1,-1,7,0,3,-1,-1,-1,-1,-1,8,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5627() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,5,-1,-1,-1,7,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5628() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,5,0,-1,-1,6,0,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5629() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,5,-1,-1,6,0,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5630() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,1,-1,-1,4,5,1,-1,6,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest5631() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,4,-1,0,5,2,-1,6,0,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5632() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,-1,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5633() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,0,0,6,-1,0,0,-1,-1,4,7,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5634() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,6,0,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,6,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5635() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,6,7,1,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,-1,-1,8,4,3,-1,0,0,7,-1"));
    }

    @Test
    public void TreeSetSolverTest5636() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,4,-1,5,4,1,-1,2,6,3,-1,0,7,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5637() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,0,-1,-1,4,5,1,-1,0,6,-1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5638() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,6,-1,6,7,2,-1,0,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5639() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,7,0,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5640() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,2,-1,-1,-1,0,0,-1,-1,7,0,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5641() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,-1,-1,4,7,1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,0,3,-1,0,0,7,-1"));
    }

    @Test
    public void TreeSetSolverTest5642() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5643() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5644() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,3,-1,-1,7,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5645() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,3,-1,5,2,1,-1,0,0,2,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5646() {
        assertEquals(false, symKorat.isSat("1,1,-1,1,2,-1,-1,3,4,1,-1,0,5,-1,-1,6,0,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5647() {
        assertEquals(false, symKorat.isSat("1,1,-1,0,2,-1,-1,3,4,1,-1,0,5,-1,-1,6,0,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5648() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,6,4,1,-1,7,0,3,-1,-1,-1,-1,-1,0,8,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5649() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5650() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,3,-1,7,0,2,-1,-1,-1,-1,-1,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5651() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,7,0,2,-1,-1,-1,-1,-1,0,6,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5652() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,2,-1,-1,5,6,2,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5653() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,3,-1,0,0,-1,-1,5,6,2,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5654() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,1,-1,-1,4,5,1,-1,0,0,-1,-1,6,7,3,-1,0,0,5,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5655() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,0,6,-1,-1,7,5,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5656() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,4,-1,-1,7,8,3,-1,0,0,6,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5657() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,0,6,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5658() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,2,-1,6,7,2,-1,0,3,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5659() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,3,-1,-1,5,-1,-1,6,0,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5660() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,7,0,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5661() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,3,-1,-1,0,0,-1,-1,7,0,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5662() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,4,6,1,-1,0,0,-1,-1,0,0,-1,-1,7,0,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5663() {
        assertEquals(false, symKorat.isSat("1,1,-1,1,2,-1,-1,3,4,1,-1,5,0,-1,-1,6,0,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5664() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5665() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,4,6,1,-1,7,0,-1,-1,-1,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5666() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,6,7,1,-1,0,0,7,-1,-1,-1,-1,-1,0,8,-1,-1,4,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5667() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5668() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,7,-1,-1,0,8,-1,-1,7,0,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5669() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,1,-1,-1,0,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5670() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,0,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5671() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,7,0,2,-1,-1,-1,-1,-1,0,1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5672() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,-1,5,-1,-1,6,7,2,-1,-1,1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5673() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,3,-1,6,2,1,-1,0,0,2,-1,0,0,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5674() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,5,0,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5675() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,4,1,-1,6,0,3,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5676() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,7,-1,-1,0,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5677() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,6,5,-1,0,0,4,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5678() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,6,7,1,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,-1,-1,8,4,3,-1,0,0,7,-1"));
    }

    @Test
    public void TreeSetSolverTest5679() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,7,0,-1,-1,0,0,-1,-1,8,7,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5680() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,3,-1,-1,4,5,1,-1,0,0,-1,-1,6,7,3,-1,0,0,5,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5681() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,0,-1,-1,4,5,1,-1,0,0,-1,-1,6,7,3,-1,0,0,5,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5682() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,5,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,6,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5683() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,4,5,1,-1,6,0,-1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5684() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,-1,-1,4,5,1,-1,0,6,-1,-1,7,2,3,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5685() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5686() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5687() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,0,0,1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5688() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,0,-1,0,0,1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5689() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,0,0,1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5690() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,0,6,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5691() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,-1,-1,0,6,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5692() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,-1,-1,0,6,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5693() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,1,-1,-1,-1,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5694() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,0,1,-1,4,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5695() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5696() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5697() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,1,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5698() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,2,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5699() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,-1,-1,4,7,1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5700() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,6,7,1,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5701() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5702() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5703() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,-1,0,-1,-1,4,5,1,-1,6,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5704() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,0,-1,-1,7,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5705() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,7,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5706() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,4,6,1,-1,7,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5707() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,4,-1,6,7,1,-1,-1,-1,-1,-1,0,-1,-1,-1,8,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5708() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,6,-1,7,6,1,-1,-1,-1,-1,-1,0,-1,-1,-1,0,0,3,-1,0,8,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5709() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,4,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5710() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,3,-1,-1,-1,7,8,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5711() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,6,7,2,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5712() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,6,7,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5713() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,0,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5714() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,2,-1,-1,0,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5715() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,2,-1,0,0,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5716() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,4,5,1,-1,0,0,-1,-1,0,6,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5717() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,8,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5718() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,-1,-1,0,8,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5719() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,4,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5720() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,5,0,-1,-1,7,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5721() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5722() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5723() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,4,5,1,-1,0,6,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5724() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,0,4,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5725() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5726() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,-1,5,-1,-1,0,0,2,-1,3,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5727() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5728() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5729() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,3,-1,6,7,1,-1,-1,-1,-1,-1,0,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5730() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,8,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5731() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5732() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,0,0,-1,-1,7,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5733() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,0,5,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5734() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,0,5,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5735() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,4,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5736() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,0,5,2,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5737() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,4,6,1,-1,0,0,-1,-1,-1,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5738() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,8,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5739() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,4,-1,-1,0,0,-1,-1,0,8,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5740() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5741() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,6,5,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5742() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,2,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5743() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,2,-1,0,6,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5744() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5745() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,6,7,1,-1,0,-1,-1,-1,-1,-1,-1,-1,5,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5746() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,-1,-1,-1,7,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5747() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5748() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,0,-1,5,6,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5749() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,4,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5750() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,4,-1,-1,0,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5751() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5752() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,6,4,1,-1,0,7,3,-1,0,0,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5753() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,2,-1,-1,-1,0,0,-1,-1,0,8,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5754() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,8,-1,-1,-1,0,0,-1,-1,0,8,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5755() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,6,-1,7,8,1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,6,3,-1"));
    }

    @Test
    public void TreeSetSolverTest5756() {
        assertEquals(false, symKorat.isSat("1,1,-1,1,2,-1,-1,3,4,1,-1,5,0,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5757() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,0,-1,-1,-1,7,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5758() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,4,5,1,-1,0,6,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5759() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,1,0,-1,-1,4,5,1,-1,0,6,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5760() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,0,8,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5761() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,1,-1,-1,4,5,1,-1,6,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5762() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,0,-1,0,7,2,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5763() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,0,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5764() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,7,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5765() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,6,-1,6,7,1,-1,-1,-1,-1,-1,0,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5766() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,8,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,0,0,-1,-1,0,0,3,-1"));
    }

    @Test
    public void TreeSetSolverTest5767() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,3,-1,6,7,1,-1,-1,-1,-1,-1,8,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5768() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,4,6,1,-1,7,0,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5769() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,4,-1,-1,7,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5770() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,4,1,-1,0,0,3,-1,-1,-1,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5771() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,0,6,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5772() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,7,0,-1,-1,8,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5773() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,0,0,2,-1,-1,-1,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5774() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,5,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5775() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,-1,5,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5776() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,6,4,1,-1,0,7,3,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5777() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5778() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,8,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5779() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,6,-1,-1,0,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5780() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,3,-1,-1,4,5,1,-1,6,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5781() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,4,0,-1,-1,0,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5782() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,2,0,-1,-1,0,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5783() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,4,6,1,-1,0,7,-1,-1,0,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5784() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,2,-1,5,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5785() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,3,-1,0,6,2,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5786() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,7,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5787() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,0,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5788() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,0,-1,-1,4,5,1,-1,6,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5789() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,3,0,-1,-1,0,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5790() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,5,-1,-1,0,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5791() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,5,-1,6,7,1,-1,-1,-1,-1,-1,0,-1,-1,-1,0,8,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5792() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,1,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5793() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,2,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5794() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,3,-1,-1,0,0,-1,-1,0,8,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5795() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,0,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5796() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,6,0,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5797() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,3,-1,0,5,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5798() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,4,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5799() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,5,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5800() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,5,6,2,-1,0,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5801() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,4,7,1,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5802() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,8,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5803() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,4,1,-1,0,0,3,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5804() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,4,5,1,-1,0,6,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5805() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5806() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,1,0,-1,-1,4,5,1,-1,0,6,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5807() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,6,5,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5808() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,7,8,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5809() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,-1,-1,0,0,2,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5810() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5811() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5812() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5813() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,4,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5814() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5815() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,7,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5816() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,0,-1,5,0,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5817() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,6,0,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5818() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,-1,5,-1,-1,0,0,2,-1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5819() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5820() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5821() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,5,-1,-1,-1,8,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5822() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,6,7,1,-1,0,-1,-1,-1,-1,-1,-1,-1,8,5,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5823() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5824() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,0,-1,5,6,2,-1,0,0,2,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5825() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,2,0,-1,-1,0,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5826() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,0,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5827() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,0,-1,-1,0,2,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5828() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,3,-1,-1,-1,7,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5829() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,6,5,1,-1,0,-1,-1,-1,0,7,3,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5830() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,3,-1,-1,7,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5831() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5832() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,2,-1,-1,4,5,1,-1,6,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5833() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,5,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5834() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,-1,6,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5835() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,0,-1,6,7,1,-1,-1,-1,-1,-1,0,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5836() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,6,-1,7,8,1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1"));
    }

    @Test
    public void TreeSetSolverTest5837() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,1,0,-1,-1,4,5,1,-1,6,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5838() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,0,-1,-1,-1,7,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5839() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,7,-1,-1,8,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5840() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,6,7,1,-1,0,0,-1,-1,-1,-1,-1,-1,8,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5841() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,-1,-1,7,4,1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5842() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,3,5,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5843() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,4,6,1,-1,7,8,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5844() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,7,8,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5845() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,0,-1,5,6,1,-1,0,-1,-1,-1,7,8,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5846() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,6,-1,0,0,2,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5847() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,0,0,2,-1,-1,-1,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5848() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,0,0,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5849() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,3,-1,5,0,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5850() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,0,0,-1,-1,7,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5851() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,4,6,1,-1,0,7,-1,-1,-1,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5852() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,4,-1,-1,0,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5853() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,2,6,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5854() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,0,5,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5855() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,5,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5856() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,-1,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5857() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,0,0,-1,-1,6,0,3,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5858() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,0,0,7,-1,-1,-1,-1,-1,0,0,-1,-1,4,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5859() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,4,1,-1,6,0,3,-1,7,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5860() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,6,5,1,-1,0,-1,-1,-1,7,0,3,-1,8,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5861() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,7,-1,-1,8,0,-1,-1,7,0,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5862() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,2,-1,5,6,1,-1,0,-1,-1,-1,0,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5863() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,5,-1,-1,6,0,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5864() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,2,-1,6,0,2,-1,0,1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5865() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,6,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5866() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,4,0,-1,-1,5,6,2,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5867() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,6,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5868() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,4,-1,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,6,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5869() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,0,-1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5870() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,2,-1,6,7,2,-1,0,4,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5871() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,4,5,1,-1,0,0,-1,-1,6,0,3,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5872() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,0,-1,-1,4,5,1,-1,0,0,-1,-1,6,0,3,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5873() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,6,4,1,-1,7,0,3,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5874() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,4,1,-1,7,0,3,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5875() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5876() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,3,-1,-1,-1,7,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5877() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,6,4,1,-1,7,0,3,-1,0,0,-1,-1,8,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5878() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,6,0,-1,-1,5,0,2,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5879() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,4,-1,5,0,-1,-1,6,0,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5880() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,1,-1,-1,0,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5881() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,1,-1,-1,-1,0,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5882() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,0,-1,-1,4,5,1,-1,6,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest5883() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,-1,-1,6,0,2,-1,5,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5884() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,-1,5,-1,-1,6,7,2,-1,6,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5885() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,-1,-1,4,5,1,-1,6,0,-1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5886() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,-1,0,-1,-1,4,5,1,-1,0,6,-1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5887() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,2,-1,0,5,2,-1,6,7,2,-1,0,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5888() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5889() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,4,5,1,-1,0,0,-1,-1,6,0,3,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5890() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,0,-1,5,6,1,-1,0,-1,-1,-1,0,0,-1,-1,7,0,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5891() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5892() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,5,-1,-1,7,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5893() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,4,-1,-1,7,0,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5894() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,4,1,-1,6,0,3,-1,7,8,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5895() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,1,5,-1,-1,6,0,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5896() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,3,-1,6,0,2,-1,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5897() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,6,-1,-1,0,0,4,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5898() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,6,-1,-1,0,0,4,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5899() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,6,3,-1,0,0,4,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5900() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,-1,5,-1,-1,6,7,2,-1,-1,6,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5901() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,6,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,6,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5902() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,6,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5903() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,6,7,1,-1,0,0,-1,-1,0,0,-1,-1,0,0,-1,-1,8,4,3,-1,0,0,7,-1"));
    }

    @Test
    public void TreeSetSolverTest5904() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,6,7,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5905() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,7,0,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5906() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,5,-1,-1,-1,0,0,-1,-1,7,0,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5907() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,1,-1,-1,7,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5908() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,4,5,1,-1,6,0,-1,-1,7,0,3,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5909() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,1,0,-1,-1,4,5,1,-1,6,0,-1,-1,7,0,3,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5910() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,0,-1,-1,-1,0,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5911() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,0,-1,5,6,1,-1,0,-1,-1,-1,0,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5912() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5913() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,2,-1,-1,4,5,1,-1,0,0,-1,-1,6,7,3,-1,0,0,5,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5914() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,6,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5915() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,-1,-1,8,4,3,-1,0,0,7,-1"));
    }

    @Test
    public void TreeSetSolverTest5916() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,0,-1,-1,4,5,1,-1,0,6,-1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5917() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5918() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,2,-1,-1,5,0,2,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5919() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,4,-1,5,4,1,-1,2,0,3,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5920() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,5,6,2,-1,7,0,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5921() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,6,2,-1,0,0,4,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5922() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,6,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5923() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,5,6,1,-1,0,-1,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,6,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5924() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,-1,-1,4,5,1,-1,6,0,-1,-1,7,2,3,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5925() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,2,-1,5,0,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5926() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,4,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5927() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5928() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,-1,0,-1,-1,6,0,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5929() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,2,-1,-1,0,0,-1,-1,7,0,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5930() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,6,7,1,-1,0,-1,-1,-1,0,0,7,-1,0,0,-1,-1,5,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5931() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,2,-1,6,7,1,-1,-1,-1,-1,-1,0,-1,-1,-1,0,0,-1,-1,8,0,3,-1,0,0,7,-1"));
    }

    @Test
    public void TreeSetSolverTest5932() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,7,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5933() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,4,-1,5,6,1,-1,0,-1,-1,-1,0,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5934() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,-1,-1,-1,0,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5935() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,5,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,6,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5936() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,0,0,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,6,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5937() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,6,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5938() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,0,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5939() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,0,2,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5940() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,-1,5,-1,-1,6,0,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5941() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,-1,6,-1,-1,5,0,2,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5942() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,0,-1,5,0,-1,-1,6,0,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5943() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,0,5,-1,-1,6,0,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5944() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,8,0,3,-1,0,0,7,-1"));
    }

    @Test
    public void TreeSetSolverTest5945() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest5946() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,4,1,-1,6,0,3,-1,7,8,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5947() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,-1,0,-1,-1,4,5,1,-1,6,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest5948() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,3,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5949() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,3,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5950() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,4,5,1,-1,0,0,-1,-1,6,0,3,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5951() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,7,0,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5952() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,7,0,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5953() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,8,-1,-1,-1,0,0,-1,-1,8,0,3,-1,0,0,7,-1"));
    }

    @Test
    public void TreeSetSolverTest5954() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5955() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,2,-1,-1,-1,0,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5956() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,2,-1,0,0,-1,-1,5,6,2,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5957() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,0,0,-1,-1,0,0,-1,-1,7,4,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5958() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,1,-1,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,6,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5959() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,6,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5960() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,2,-1,-1,4,5,1,-1,0,6,-1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5961() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,0,-1,-1,4,5,1,-1,0,0,-1,-1,6,0,3,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5962() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,7,-1,-1,-1,0,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest5963() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,8,0,3,-1,0,0,7,-1"));
    }

    @Test
    public void TreeSetSolverTest5964() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,2,-1,-1,4,5,1,-1,6,0,-1,-1,7,0,3,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5965() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,7,-1,-1,-1,8,0,-1,-1,7,0,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5966() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,8,0,3,-1,0,0,7,-1"));
    }

    @Test
    public void TreeSetSolverTest5967() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,6,7,1,-1,0,0,7,-1,0,0,-1,-1,0,8,-1,-1,4,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5968() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,0,0,-1,-1,5,6,2,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5969() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,6,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5970() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,4,1,-1,6,7,3,-1,0,8,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5971() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,0,1,-1,0,5,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5972() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,0,1,-1,0,5,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5973() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,0,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5974() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,0,0,1,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5975() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,4,-1,-1,0,5,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5976() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,2,-1,0,6,1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5977() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,6,-1,0,7,1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5978() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,0,1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5979() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,0,1,-1,0,6,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5980() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,4,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5981() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5982() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,4,1,-1,0,0,3,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5983() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,-1,-1,4,7,1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5984() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,5,0,-1,-1,0,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5985() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,4,-1,-1,-1,0,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5986() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,-1,0,-1,-1,4,5,1,-1,6,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5987() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,-1,0,-1,-1,4,5,1,-1,0,0,-1,-1,0,6,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5988() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,-1,-1,4,5,1,-1,6,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5989() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5990() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,0,5,2,-1,0,6,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5991() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,1,-1,-1,4,5,1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5992() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,4,1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5993() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,3,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5994() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,4,-1,-1,7,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5995() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,7,-1,-1,-1,8,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5996() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,6,-1,-1,-1,0,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5997() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,2,-1,6,7,1,-1,-1,-1,-1,-1,0,-1,-1,-1,0,8,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5998() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest5999() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,4,-1,-1,5,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6000() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,0,-1,-1,4,5,1,-1,0,0,-1,-1,0,6,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6001() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,5,6,1,-1,0,-1,-1,-1,0,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6002() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,8,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,-1,-1,0,4,3,-1"));
    }

    @Test
    public void TreeSetSolverTest6003() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,4,6,1,-1,7,0,-1,-1,-1,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6004() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,4,5,1,-1,6,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6005() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6006() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,6,5,1,-1,0,-1,-1,-1,0,7,3,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6007() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,1,0,-1,-1,4,5,1,-1,6,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6008() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,6,7,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6009() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,3,-1,0,5,2,-1,0,6,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6010() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,7,-1,-1,-1,8,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6011() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,4,-1,-1,8,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6012() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,6,-1,-1,8,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6013() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,4,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6014() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,0,0,-1,-1,0,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6015() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,1,-1,-1,4,5,1,-1,0,6,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6016() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6017() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,2,-1,5,6,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6018() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,-1,-1,4,5,1,-1,6,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6019() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,0,-1,0,0,2,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6020() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6021() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,3,-1,6,7,1,-1,-1,-1,-1,-1,0,-1,-1,-1,0,0,-1,-1,0,8,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6022() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6023() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,0,-1,-1,0,8,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6024() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,5,-1,-1,0,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6025() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6026() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,5,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6027() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,0,7,2,-1,-1,-1,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6028() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,4,1,-1,0,0,3,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6029() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6030() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6031() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,0,-1,-1,0,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6032() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,6,4,1,-1,0,0,3,-1,-1,-1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6033() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,0,-1,-1,-1,0,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6034() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,4,-1,-1,-1,0,8,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6035() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,5,-1,-1,-1,0,8,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6036() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,3,-1,-1,0,8,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6037() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,0,-1,-1,5,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6038() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,2,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6039() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,7,-1,-1,8,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6040() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,2,0,-1,-1,4,5,1,-1,6,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6041() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,2,-1,0,6,2,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6042() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,-1,5,-1,-1,0,0,2,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6043() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,1,-1,-1,4,5,1,-1,6,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6044() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6045() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6046() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,5,6,1,-1,0,-1,-1,-1,7,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6047() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,0,-1,5,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6048() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,4,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6049() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,6,4,1,-1,0,0,3,-1,-1,-1,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6050() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,8,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6051() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,2,-1,5,6,2,-1,0,0,2,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6052() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,-1,5,-1,-1,0,6,2,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6053() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,7,0,-1,-1,0,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6054() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6055() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6056() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,0,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6057() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,0,-1,-1,4,5,1,-1,6,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6058() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,4,-1,0,5,2,-1,0,6,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6059() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,0,7,-1,-1,0,0,-1,-1,0,0,3,-1,0,3,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6060() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,4,-1,5,6,1,-1,0,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6061() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,8,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,-1,-1,0,0,3,-1"));
    }

    @Test
    public void TreeSetSolverTest6062() {
        assertEquals(false, symKorat.isSat("1,1,-1,0,2,-1,-1,3,4,1,-1,5,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6063() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,3,-1,4,2,1,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6064() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6065() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,3,-1,-1,-1,0,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6066() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,0,0,2,-1,-1,-1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6067() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,0,-1,-1,0,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6068() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,-1,5,-1,-1,0,6,2,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6069() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,1,0,-1,-1,7,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6070() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,6,7,1,-1,0,-1,-1,-1,-1,-1,-1,-1,8,0,-1,-1,0,5,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6071() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6072() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,-1,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6073() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6074() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,-1,0,-1,-1,4,5,1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6075() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6076() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,4,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6077() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6078() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,8,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6079() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,7,0,-1,-1,0,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6080() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,8,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6081() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,4,5,1,-1,6,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6082() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,8,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6083() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,6,7,1,-1,0,-1,-1,-1,-1,-1,-1,-1,5,8,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6084() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,5,-1,-1,0,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6085() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,7,-1,-1,0,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6086() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,4,-1,5,6,1,-1,0,-1,-1,-1,0,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6087() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,0,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6088() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,4,5,1,-1,6,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6089() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6090() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,6,-1,-1,7,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6091() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,0,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6092() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,1,5,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6093() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,2,-1,5,6,2,-1,0,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6094() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,0,7,-1,-1,0,0,-1,-1,0,0,3,-1,8,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6095() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,2,-1,-1,4,5,1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6096() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6097() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6098() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6099() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,4,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6100() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,0,-1,-1,-1,8,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6101() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6102() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,5,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6103() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,1,5,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6104() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,4,-1,-1,0,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6105() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,8,-1,-1,0,0,-1,-1,0,8,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6106() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,3,-1,5,6,1,-1,0,-1,-1,-1,7,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6107() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,2,-1,5,6,1,-1,0,-1,-1,-1,0,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6108() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,3,-1,5,6,1,-1,0,-1,-1,-1,0,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6109() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,4,-1,0,6,2,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6110() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,2,-1,0,6,2,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6111() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6112() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,3,-1,0,7,2,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6113() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,7,0,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6114() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,5,-1,-1,0,0,-1,-1,7,0,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6115() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,5,-1,6,7,1,-1,-1,-1,-1,-1,0,-1,-1,-1,0,0,-1,-1,8,0,3,-1,0,0,7,-1"));
    }

    @Test
    public void TreeSetSolverTest6116() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,6,-1,-1,0,0,-1,-1,8,0,3,-1,0,0,7,-1"));
    }

    @Test
    public void TreeSetSolverTest6117() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,3,-1,-1,0,0,-1,-1,8,0,3,-1,0,0,7,-1"));
    }

    @Test
    public void TreeSetSolverTest6118() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,-1,-1,8,0,3,-1,0,0,7,-1"));
    }

    @Test
    public void TreeSetSolverTest6119() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,-1,-1,7,4,1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest6120() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,6,-1,-1,0,0,4,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6121() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,0,-1,-1,4,5,1,-1,0,0,-1,-1,6,7,3,-1,0,0,5,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6122() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,6,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6123() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,0,6,-1,-1,5,7,2,-1,0,0,4,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6124() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,-1,-1,6,7,2,-1,7,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6125() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6126() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,-1,0,-1,-1,5,0,2,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6127() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,0,-1,-1,4,5,1,-1,0,0,-1,-1,6,0,3,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6128() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,7,0,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6129() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest6130() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,0,2,-1,-1,6,0,3,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6131() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,4,6,1,-1,0,7,-1,-1,-1,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest6132() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,2,0,-1,-1,4,5,1,-1,0,0,-1,-1,6,7,3,-1,0,0,5,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6133() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,0,-1,0,0,-1,-1,5,6,2,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6134() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6135() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,7,0,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6136() {
        assertEquals(false, symKorat.isSat("1,1,-1,0,2,-1,-1,3,4,1,-1,5,0,-1,-1,6,0,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6137() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,0,-1,-1,-1,7,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest6138() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,7,-1,-1,7,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest6139() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,7,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest6140() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,6,7,1,-1,0,0,7,-1,0,0,-1,-1,8,0,-1,-1,4,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6141() {
        assertEquals(false, symKorat.isSat("1,1,-1,1,2,-1,-1,3,4,1,-1,5,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6142() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,4,5,1,-1,6,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest6143() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,0,6,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6144() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,7,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,6,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6145() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,-1,-1,7,5,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6146() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,-1,-1,6,7,2,-1,5,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6147() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,-1,5,-1,-1,6,0,2,-1,-1,6,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6148() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,-1,0,-1,-1,4,5,1,-1,0,0,-1,-1,6,0,3,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6149() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,0,-1,-1,0,0,-1,-1,7,0,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6150() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,1,-1,-1,-1,7,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest6151() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,7,-1,-1,0,8,-1,-1,7,0,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6152() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,6,0,-1,-1,0,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest6153() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest6154() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,2,-1,-1,0,-1,-1,5,6,2,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6155() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,-1,0,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6156() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,4,5,1,-1,0,0,-1,-1,6,7,3,-1,0,0,5,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6157() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,6,7,1,-1,0,-1,-1,-1,0,0,-1,-1,0,0,-1,-1,8,5,3,-1,0,0,7,-1"));
    }

    @Test
    public void TreeSetSolverTest6158() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,6,4,1,-1,7,8,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6159() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,8,-1,-1,0,0,-1,-1,8,0,3,-1,0,0,7,-1"));
    }

    @Test
    public void TreeSetSolverTest6160() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,4,0,-1,-1,7,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest6161() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,5,-1,-1,-1,0,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest6162() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,7,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6163() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,7,0,2,-1,-1,-1,-1,-1,0,4,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6164() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,4,-1,5,4,1,-1,2,6,3,-1,7,0,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6165() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,4,-1,0,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6166() {
        assertEquals(false, symKorat.isSat("1,1,-1,0,2,-1,-1,3,4,1,-1,0,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6167() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6168() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6169() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,8,1,-1,0,0,8,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,-1,-1,4,0,3,-1"));
    }

    @Test
    public void TreeSetSolverTest6170() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,4,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest6171() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,2,5,-1,-1,6,0,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6172() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,2,-1,6,0,2,-1,0,5,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6173() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,-1,6,-1,-1,5,7,2,-1,0,0,4,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6174() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,2,-1,-1,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6175() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,1,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,6,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6176() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,6,1,-1,0,0,-1,-1,7,0,-1,-1,8,4,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest6177() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,4,-1,0,5,2,-1,6,7,2,-1,0,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6178() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,2,-1,6,7,2,-1,0,8,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6179() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,3,-1,-1,4,5,1,-1,0,0,-1,-1,6,0,3,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6180() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,1,-1,-1,4,5,1,-1,0,6,-1,-1,7,0,3,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6181() {
        assertEquals(false, symKorat.isSat("1,1,-1,0,2,-1,-1,3,4,1,-1,5,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6182() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,-1,-1,6,0,2,-1,2,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6183() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,4,-1,6,0,2,-1,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6184() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,4,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,6,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6185() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,2,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,6,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6186() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,6,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6187() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,2,-1,0,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6188() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,0,-1,-1,5,0,2,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6189() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,4,-1,-1,0,0,-1,-1,7,0,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6190() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,1,-1,-1,0,0,-1,-1,7,0,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6191() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,6,7,1,-1,0,0,7,-1,0,0,-1,-1,0,0,-1,-1,4,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6192() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,5,-1,-1,7,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest6193() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,6,-1,-1,0,0,4,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6194() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,6,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6195() {
        assertEquals(false, symKorat.isSat("1,1,-1,1,2,-1,-1,3,4,1,-1,5,0,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6196() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,3,-1,6,7,2,-1,0,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6197() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,0,5,2,-1,6,7,2,-1,0,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6198() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,-1,-1,8,0,3,-1,0,0,7,-1"));
    }

    @Test
    public void TreeSetSolverTest6199() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,4,0,-1,-1,7,0,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6200() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,4,5,1,-1,6,0,-1,-1,7,0,3,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6201() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,-1,-1,-1,7,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest6202() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest6203() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,4,6,1,-1,0,7,-1,-1,-1,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest6204() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,0,1,-1,0,5,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6205() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,3,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6206() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6207() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,0,0,1,-1,-1,-1,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6208() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,5,1,-1,2,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6209() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,5,1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6210() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,0,6,1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6211() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,1,-1,-1,-1,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6212() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,0,6,1,-1,-1,-1,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6213() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,0,-1,0,6,1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6214() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,0,3,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6215() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,-1,0,-1,-1,4,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6216() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,0,-1,-1,5,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6217() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,6,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6218() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,4,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6219() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,5,-1,6,0,1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6220() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,-1,0,-1,-1,4,5,1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6221() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,6,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6222() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,6,4,1,-1,0,0,3,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6223() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,2,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6224() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,4,7,1,-1,0,8,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6225() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,5,0,-1,-1,7,8,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6226() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,8,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6227() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,4,1,-1,0,6,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6228() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6229() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,4,1,-1,0,6,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6230() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6231() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,-1,5,-1,-1,0,0,2,-1,2,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6232() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,6,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6233() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6234() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,4,5,1,-1,6,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6235() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,1,-1,-1,-1,7,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6236() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,3,-1,5,6,1,-1,0,-1,-1,-1,7,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6237() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,3,-1,-1,-1,8,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6238() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6239() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,2,-1,-1,4,5,1,-1,6,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6240() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,5,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6241() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,0,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6242() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,7,-1,-1,-1,0,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6243() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6244() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,0,-1,-1,7,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6245() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,0,-1,-1,4,5,1,-1,6,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6246() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,3,-1,-1,0,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6247() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,0,-1,0,5,2,-1,0,6,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6248() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,0,-1,-1,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6249() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6250() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,4,6,1,-1,0,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6251() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,8,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6252() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,4,5,1,-1,6,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6253() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6254() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,5,-1,6,7,1,-1,-1,-1,-1,-1,0,-1,-1,-1,8,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6255() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,4,-1,0,5,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6256() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6257() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,1,-1,-1,0,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6258() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,5,6,1,-1,0,-1,-1,-1,0,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6259() {
        assertEquals(false, symKorat.isSat("1,1,-1,1,2,-1,-1,3,4,1,-1,5,6,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6260() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,4,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6261() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,1,0,-1,-1,7,8,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6262() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,8,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6263() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,0,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6264() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,1,0,-1,-1,4,5,1,-1,0,0,-1,-1,0,6,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6265() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,-1,-1,7,4,1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6266() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,3,-1,5,6,2,-1,0,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6267() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,4,1,-1,0,0,3,-1,-1,-1,-1,-1,0,8,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6268() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,6,-1,7,6,1,-1,-1,-1,-1,-1,8,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6269() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6270() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,6,4,1,-1,0,0,3,-1,-1,-1,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6271() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,1,0,-1,-1,7,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6272() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,0,-1,-1,4,5,1,-1,6,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6273() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,1,-1,-1,-1,0,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6274() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,4,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6275() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,8,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6276() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,-1,-1,7,8,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,4,3,-1"));
    }

    @Test
    public void TreeSetSolverTest6277() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6278() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,5,6,1,-1,0,-1,-1,-1,7,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6279() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,5,-1,-1,-1,0,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6280() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,0,7,2,-1,-1,-1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6281() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,-1,-1,2,4,1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6282() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,8,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6283() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,2,0,-1,-1,7,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6284() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6285() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,5,-1,-1,7,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6286() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,6,-1,7,8,1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,6,0,-1,-1,0,0,3,-1"));
    }

    @Test
    public void TreeSetSolverTest6287() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,7,-1,-1,-1,8,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6288() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,4,-1,-1,-1,0,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6289() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,3,-1,-1,0,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6290() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,3,-1,-1,-1,0,0,-1,-1,0,8,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6291() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,1,-1,0,7,2,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6292() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,0,7,-1,-1,0,0,-1,-1,0,0,3,-1,0,8,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6293() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,8,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6294() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,-1,-1,0,0,2,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6295() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,-1,-1,0,0,2,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6296() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,-1,5,-1,-1,0,6,2,-1,1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6297() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,-1,0,-1,-1,4,5,1,-1,0,0,-1,-1,0,6,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6298() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,4,6,1,-1,7,0,-1,-1,-1,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6299() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,7,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6300() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,0,2,-1,-1,0,6,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6301() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,3,-1,5,2,1,-1,-1,-1,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6302() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6303() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,0,7,-1,-1,0,0,-1,-1,0,0,3,-1,1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6304() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6305() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,3,-1,5,6,1,-1,0,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6306() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,6,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6307() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,8,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6308() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,1,-1,-1,-1,8,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6309() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,0,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6310() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,6,-1,-1,7,8,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6311() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,0,5,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6312() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,4,6,1,-1,0,0,-1,-1,-1,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6313() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,2,-1,-1,3,4,1,-1,5,0,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6314() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,-1,0,-1,-1,4,5,1,-1,0,6,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6315() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,0,4,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6316() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,6,7,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6317() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,-1,5,-1,-1,0,0,2,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6318() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6319() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6320() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,2,-1,-1,4,5,1,-1,6,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6321() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6322() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6323() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,7,-1,-1,-1,0,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6324() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,6,-1,-1,0,8,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6325() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,0,-1,-1,4,5,1,-1,0,0,-1,-1,0,6,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6326() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,1,-1,-1,-1,7,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6327() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,7,-1,-1,0,8,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6328() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,6,-1,-1,0,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6329() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,8,-1,-1,0,4,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6330() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6331() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,2,0,-1,-1,4,5,1,-1,0,0,-1,-1,6,0,3,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6332() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,4,-1,-1,-1,7,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest6333() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,-1,5,-1,-1,6,7,2,-1,-1,5,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6334() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,2,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,6,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6335() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,3,-1,-1,4,5,1,-1,6,0,-1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6336() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,6,0,-1,-1,7,5,2,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6337() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6338() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,0,-1,-1,4,5,1,-1,6,0,-1,-1,7,0,3,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6339() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,7,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest6340() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,4,-1,0,5,-1,-1,6,0,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6341() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,1,0,-1,-1,4,5,1,-1,0,6,-1,-1,7,0,3,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6342() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6343() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,-1,5,-1,-1,6,0,2,-1,4,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6344() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest6345() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,2,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest6346() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,5,0,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6347() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,0,0,6,-1,7,0,-1,-1,4,8,3,-1,-1,-1,-1,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6348() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,1,-1,-1,4,5,1,-1,0,6,-1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6349() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,0,6,2,-1,5,7,2,-1,0,0,4,-1,0,0,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6350() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,0,-1,0,5,2,-1,6,7,2,-1,0,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6351() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,2,-1,-1,0,-1,-1,5,0,2,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6352() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,4,1,-1,6,0,3,-1,7,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6353() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,5,0,-1,-1,7,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest6354() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,0,0,-1,-1,0,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest6355() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,-1,-1,4,5,1,-1,0,6,-1,-1,7,0,3,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6356() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,0,0,6,-1,7,8,-1,-1,4,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6357() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,4,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest6358() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,4,1,-1,6,0,3,-1,7,8,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6359() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,6,7,2,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest6360() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,6,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6361() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,3,-1,-1,0,-1,-1,5,6,2,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6362() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,3,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,6,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6363() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,0,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6364() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,-1,-1,4,5,1,-1,0,6,-1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6365() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,4,-1,-1,5,-1,-1,6,0,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6366() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,7,0,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6367() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,6,0,-1,-1,0,0,-1,-1,7,0,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6368() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,1,-1,-1,-1,0,0,-1,-1,8,0,3,-1,0,0,7,-1"));
    }

    @Test
    public void TreeSetSolverTest6369() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,3,-1,-1,4,5,1,-1,6,0,-1,-1,7,0,3,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6370() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,6,-1,-1,7,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest6371() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,4,1,-1,6,0,3,-1,0,7,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6372() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,6,7,1,-1,0,-1,-1,-1,0,0,7,-1,0,8,-1,-1,5,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6373() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,7,0,2,-1,-1,-1,-1,-1,0,5,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6374() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,6,6,-1,0,0,4,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6375() {
        assertEquals(false, symKorat.isSat("1,1,-1,1,2,-1,-1,3,4,1,-1,0,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6376() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,-1,5,-1,-1,6,0,2,-1,7,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6377() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,0,0,-1,-1,7,0,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6378() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,2,0,-1,-1,6,0,3,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6379() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,-1,0,-1,-1,4,5,1,-1,6,0,-1,-1,7,0,3,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6380() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest6381() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,2,0,-1,-1,7,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest6382() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,7,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest6383() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6384() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,0,0,-1,-1,5,6,2,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6385() {
        assertEquals(false, symKorat.isSat("1,1,-1,1,2,-1,-1,3,4,1,-1,0,0,-1,-1,5,6,2,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6386() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,3,0,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,6,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6387() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,4,5,1,-1,0,0,-1,-1,6,7,3,-1,0,0,5,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6388() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,4,6,1,-1,0,0,-1,-1,-1,-1,-1,-1,7,8,3,-1,0,0,6,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6389() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,6,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,6,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6390() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,-1,-1,6,7,2,-1,8,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6391() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,6,-1,-1,0,0,4,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6392() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,6,7,1,-1,0,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,8,0,3,-1,0,0,7,-1"));
    }

    @Test
    public void TreeSetSolverTest6393() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,4,5,1,-1,6,0,-1,-1,7,0,3,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6394() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest6395() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,4,5,1,-1,0,6,-1,-1,7,0,3,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6396() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,4,-1,-1,0,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest6397() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,7,0,-1,-1,0,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest6398() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,8,0,3,-1,0,0,7,-1"));
    }

    @Test
    public void TreeSetSolverTest6399() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,0,0,7,-1,-1,-1,-1,-1,0,8,-1,-1,4,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6400() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,3,-1,5,2,1,-1,0,0,2,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6401() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,-1,-1,6,0,2,-1,4,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6402() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,5,-1,6,0,2,-1,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6403() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,0,5,2,-1,6,0,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6404() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,6,0,-1,0,0,4,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6405() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,0,-1,-1,4,5,1,-1,6,0,-1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6406() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,3,-1,-1,4,5,1,-1,0,6,-1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6407() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,2,-1,6,7,2,-1,0,6,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6408() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,0,0,-1,-1,7,0,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6409() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,5,-1,-1,0,0,-1,-1,8,0,3,-1,0,0,7,-1"));
    }

    @Test
    public void TreeSetSolverTest6410() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,0,-1,-1,7,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest6411() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,4,-1,-1,-1,0,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest6412() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,7,0,2,-1,-1,-1,-1,-1,0,8,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6413() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,6,-1,-1,0,0,4,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6414() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,4,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,6,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6415() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest6416() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,0,5,-1,-1,6,0,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6417() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,0,-1,-1,6,5,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6418() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,0,0,-1,-1,7,0,-1,-1,8,4,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest6419() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,6,-1,7,6,2,-1,0,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6420() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,0,1,-1,4,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6421() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,0,1,-1,0,5,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6422() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,0,1,-1,0,5,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6423() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,0,1,-1,5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6424() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,0,0,1,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6425() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6426() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,6,-1,0,0,1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6427() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,0,4,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6428() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,5,1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6429() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,5,1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6430() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,0,5,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6431() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,0,4,1,-1,0,5,1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6432() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,0,6,1,-1,-1,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6433() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,4,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6434() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,6,-1,7,0,1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6435() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,-1,-1,6,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6436() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,4,1,-1,0,0,3,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6437() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6438() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,3,-1,5,6,1,-1,0,-1,-1,-1,0,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6439() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,0,-1,-1,4,5,1,-1,6,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6440() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,0,5,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6441() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,-1,5,-1,-1,0,6,2,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6442() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,-1,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6443() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,0,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6444() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,4,-1,5,6,1,-1,0,-1,-1,-1,0,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6445() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,2,-1,0,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6446() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,7,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6447() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,-1,5,-1,-1,0,6,2,-1,2,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6448() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,2,-1,-1,3,4,1,-1,0,0,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6449() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,7,-1,-1,-1,0,0,-1,-1,0,8,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6450() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,-1,-1,0,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6451() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,0,-1,-1,0,8,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6452() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,4,6,1,-1,7,0,-1,-1,0,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6453() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,1,-1,-1,4,5,1,-1,0,6,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6454() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,3,-1,-1,0,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6455() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,6,-1,-1,-1,0,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6456() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6457() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,3,-1,0,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6458() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,3,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6459() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,0,7,-1,-1,0,0,-1,-1,0,0,3,-1,0,4,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6460() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6461() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6462() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,7,-1,-1,8,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6463() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,7,-1,-1,-1,7,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6464() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,8,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6465() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,0,-1,5,6,1,-1,0,-1,-1,-1,7,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6466() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,6,5,1,-1,0,-1,-1,-1,0,0,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6467() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,7,-1,-1,8,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6468() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,7,8,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6469() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,2,-1,0,0,2,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6470() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6471() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6472() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,6,4,1,-1,0,7,3,-1,-1,-1,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6473() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,4,5,1,-1,6,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6474() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6475() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,2,-1,-1,7,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6476() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6477() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,-1,-1,7,8,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,0,0,3,-1"));
    }

    @Test
    public void TreeSetSolverTest6478() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,2,-1,-1,7,8,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6479() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,-1,5,-1,-1,0,6,2,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6480() {
        assertEquals(false, symKorat.isSat("1,1,-1,0,2,-1,-1,3,4,1,-1,0,0,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6481() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,6,-1,7,6,1,-1,-1,-1,-1,-1,0,-1,-1,-1,0,8,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6482() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,7,-1,-1,0,2,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6483() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,5,6,2,-1,0,7,2,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6484() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,-1,5,-1,-1,0,0,2,-1,4,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6485() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,2,-1,5,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6486() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,8,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6487() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,8,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6488() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,-1,-1,0,0,2,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6489() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6490() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,5,-1,0,7,2,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6491() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,4,0,-1,-1,0,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6492() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,4,-1,-1,0,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6493() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,6,7,1,-1,0,0,-1,-1,-1,-1,-1,-1,0,8,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6494() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,-1,5,-1,-1,0,6,2,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6495() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,0,-1,-1,-1,0,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6496() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,5,-1,-1,0,0,-1,-1,0,8,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6497() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,-1,-1,0,8,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6498() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,-1,0,-1,-1,4,5,1,-1,6,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6499() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,7,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6500() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,8,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6501() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,6,0,-1,-1,0,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6502() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,7,-1,-1,0,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6503() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,5,-1,-1,7,8,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6504() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,0,-1,-1,4,5,1,-1,6,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6505() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,6,-1,-1,-1,7,8,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6506() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,-1,5,-1,-1,0,6,2,-1,4,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6507() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,-1,0,-1,-1,4,5,1,-1,6,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6508() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,-1,-1,-1,7,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6509() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,4,-1,-1,0,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6510() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,0,7,-1,-1,0,0,-1,-1,0,0,3,-1,5,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6511() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,0,7,-1,-1,0,0,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6512() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,5,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6513() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,6,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6514() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6515() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,7,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6516() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,6,4,1,-1,0,0,3,-1,-1,-1,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6517() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,2,-1,-1,0,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6518() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6519() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,1,-1,-1,-1,0,8,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6520() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,8,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6521() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,4,-1,-1,7,8,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6522() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,0,0,2,-1,-1,-1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6523() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,5,0,-1,-1,0,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6524() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6525() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6526() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,1,-1,-1,7,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6527() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,4,6,1,-1,0,7,-1,-1,-1,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6528() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,8,-1,-1,0,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6529() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,4,-1,-1,7,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest6530() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,3,-1,-1,0,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest6531() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,2,0,-1,-1,0,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest6532() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,0,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest6533() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,4,6,1,-1,0,7,-1,-1,0,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest6534() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,5,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6535() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,2,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6536() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,-1,-1,5,7,2,-1,0,0,4,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6537() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,4,-1,-1,-1,0,0,-1,-1,7,0,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6538() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,4,-1,-1,0,0,-1,-1,7,0,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6539() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,3,-1,6,7,1,-1,-1,-1,-1,-1,0,-1,-1,-1,0,0,-1,-1,8,0,3,-1,0,0,7,-1"));
    }

    @Test
    public void TreeSetSolverTest6540() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,6,-1,-1,0,0,4,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6541() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,6,6,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6542() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,2,-1,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,6,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6543() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,6,5,1,-1,0,-1,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6544() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,6,-1,-1,7,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest6545() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,6,1,-1,0,0,6,-1,7,0,-1,-1,4,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6546() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest6547() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,0,-1,-1,4,5,1,-1,0,6,-1,-1,7,0,3,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6548() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,-1,0,-1,-1,4,5,1,-1,6,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest6549() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,0,-1,0,5,2,-1,6,0,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6550() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,-1,6,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6551() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,3,-1,0,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6552() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,0,-1,0,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6553() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,-1,-1,6,7,2,-1,0,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6554() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6555() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,7,0,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6556() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,2,-1,-1,0,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest6557() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,2,-1,6,0,2,-1,0,3,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6558() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,1,-1,6,0,2,-1,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6559() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,5,6,2,-1,7,0,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6560() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,-1,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,6,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6561() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,1,0,-1,-1,4,5,1,-1,0,6,-1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6562() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,4,1,-1,6,0,3,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6563() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,0,0,-1,-1,7,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest6564() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,6,7,1,-1,0,0,7,-1,-1,-1,-1,-1,8,0,-1,-1,4,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6565() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,-1,-1,5,0,2,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6566() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,6,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6567() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,3,-1,5,6,1,-1,0,-1,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,6,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6568() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,4,-1,6,7,2,-1,0,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6569() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6570() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,-1,5,-1,-1,6,0,2,-1,-1,4,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6571() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,-1,5,-1,-1,6,0,2,-1,-1,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6572() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,3,-1,-1,-1,0,0,-1,-1,8,0,3,-1,0,0,7,-1"));
    }

    @Test
    public void TreeSetSolverTest6573() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,0,-1,-1,-1,0,0,-1,-1,8,0,3,-1,0,0,7,-1"));
    }

    @Test
    public void TreeSetSolverTest6574() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,0,0,6,-1,7,0,-1,-1,4,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6575() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,4,-1,-1,7,0,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6576() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,3,-1,5,6,2,-1,7,0,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6577() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,6,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6578() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,0,0,6,-1,7,0,-1,-1,4,8,3,-1,-1,-1,-1,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6579() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,-1,5,-1,-1,6,0,2,-1,-1,5,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6580() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,-1,5,-1,-1,6,0,2,-1,-1,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6581() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,7,-1,-1,0,0,-1,-1,7,0,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6582() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,4,-1,-1,-1,0,0,-1,-1,8,0,3,-1,0,0,7,-1"));
    }

    @Test
    public void TreeSetSolverTest6583() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,6,7,1,-1,0,-1,-1,-1,-1,-1,-1,-1,5,0,-1,-1,8,0,3,-1,0,0,7,-1"));
    }

    @Test
    public void TreeSetSolverTest6584() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,4,6,1,-1,7,0,-1,-1,0,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest6585() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,-1,0,-1,-1,4,5,1,-1,0,6,-1,-1,7,0,3,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6586() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,3,-1,0,5,2,-1,6,0,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6587() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,7,-1,-1,0,0,-1,-1,8,7,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest6588() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,-1,5,-1,-1,6,0,2,-1,3,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6589() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,7,-1,-1,-1,0,0,-1,-1,8,0,3,-1,0,0,7,-1"));
    }

    @Test
    public void TreeSetSolverTest6590() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,4,-1,-1,7,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest6591() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,1,0,-1,-1,7,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest6592() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,2,5,1,-1,-1,-1,-1,-1,6,0,3,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6593() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,7,0,-1,-1,0,8,-1,-1,7,0,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6594() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,5,-1,-1,6,5,2,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6595() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,1,0,-1,-1,4,5,1,-1,0,0,-1,-1,6,0,3,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6596() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,2,-1,-1,0,0,-1,-1,7,0,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6597() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,6,-1,-1,-1,0,0,-1,-1,8,0,3,-1,0,0,7,-1"));
    }

    @Test
    public void TreeSetSolverTest6598() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,-1,-1,-1,0,0,-1,-1,8,0,3,-1,0,0,7,-1"));
    }

    @Test
    public void TreeSetSolverTest6599() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,-1,0,-1,-1,4,5,1,-1,0,6,-1,-1,7,0,3,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6600() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,5,-1,-1,0,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest6601() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,-1,-1,6,0,2,-1,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6602() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,0,-1,-1,5,6,2,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6603() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,1,5,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6604() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6605() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,0,1,-1,0,5,-1,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6606() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,0,1,-1,5,6,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6607() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6608() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,0,0,1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6609() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,0,0,1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6610() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,0,1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6611() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,5,1,-1,3,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6612() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,4,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6613() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,-1,-1,0,6,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6614() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,3,-1,-1,4,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6615() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,-1,4,-1,-1,5,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6616() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,0,1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6617() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,0,1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6618() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,4,-1,-1,5,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6619() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,6,0,1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6620() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,6,0,1,-1,-1,-1,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6621() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6622() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,4,6,1,-1,7,0,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6623() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6624() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,4,-1,-1,0,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6625() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,-1,5,-1,-1,0,6,2,-1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6626() {
        assertEquals(false, symKorat.isSat("1,1,-1,1,2,-1,-1,3,4,1,-1,0,0,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6627() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,4,1,-1,0,6,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6628() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,7,-1,-1,0,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6629() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,2,-1,6,7,1,-1,-1,-1,-1,-1,0,-1,-1,-1,0,0,-1,-1,0,8,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6630() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,4,-1,-1,7,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6631() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,1,0,-1,-1,0,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6632() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,0,8,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6633() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,4,5,1,-1,6,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6634() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,-1,-1,0,6,2,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6635() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,7,-1,0,7,2,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6636() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6637() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6638() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,8,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6639() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6640() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,8,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6641() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,4,1,-1,0,0,3,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6642() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,-1,-1,0,0,2,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6643() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,0,5,2,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6644() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,0,0,2,-1,-1,-1,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6645() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,3,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6646() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6647() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,1,-1,-1,0,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6648() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,5,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6649() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,5,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6650() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,6,-1,-1,0,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6651() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,6,7,1,-1,0,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6652() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,8,-1,-1,-1,0,8,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6653() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,0,0,-1,-1,0,6,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6654() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,1,-1,-1,4,5,1,-1,0,0,-1,-1,0,6,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6655() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6656() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,7,-1,0,8,2,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6657() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,4,-1,-1,5,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6658() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,2,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6659() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,3,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6660() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,2,-1,6,7,1,-1,-1,-1,-1,-1,8,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6661() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,0,0,-1,-1,7,8,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6662() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,7,8,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6663() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,4,-1,0,0,2,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6664() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,2,-1,-1,0,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6665() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,-1,-1,0,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6666() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,4,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6667() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,0,7,-1,-1,0,0,-1,-1,0,0,3,-1,4,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6668() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,5,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6669() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,7,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6670() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,0,-1,0,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6671() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,0,-1,5,6,1,-1,0,-1,-1,-1,0,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6672() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,2,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6673() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,1,0,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6674() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,-1,0,-1,-1,4,5,1,-1,0,0,-1,-1,0,6,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6675() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,7,-1,-1,-1,0,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6676() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,4,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6677() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,6,-1,0,7,2,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6678() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,4,7,1,-1,0,0,-1,-1,-1,-1,-1,-1,0,8,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6679() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6680() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,4,1,-1,0,0,3,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6681() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6682() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,0,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6683() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,2,-1,-1,5,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6684() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6685() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,2,-1,-1,0,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6686() {
        assertEquals(false, symKorat.isSat("1,1,-1,1,2,-1,-1,3,4,1,-1,0,5,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6687() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,1,-1,0,6,2,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6688() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6689() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,3,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6690() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,6,7,1,-1,0,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6691() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,5,-1,6,7,1,-1,-1,-1,-1,-1,0,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6692() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,8,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6693() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,1,-1,-1,8,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6694() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,6,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6695() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,4,0,-1,-1,0,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6696() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,7,0,-1,-1,0,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6697() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,-1,0,-1,-1,4,5,1,-1,6,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6698() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,2,-1,5,6,1,-1,0,-1,-1,-1,7,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6699() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6700() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6701() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,3,0,-1,-1,7,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6702() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6703() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,5,-1,-1,7,8,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6704() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,0,-1,0,0,2,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6705() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,-1,5,-1,-1,0,6,2,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6706() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,-1,5,-1,-1,0,6,2,-1,3,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6707() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,7,-1,-1,0,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6708() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,3,-1,5,2,1,-1,-1,-1,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6709() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,4,0,-1,-1,7,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6710() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,4,-1,0,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6711() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,4,1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6712() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,0,7,-1,-1,0,0,-1,-1,0,0,3,-1,0,6,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6713() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,6,7,1,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,8,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6714() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,0,8,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6715() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,7,-1,-1,0,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6716() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,4,1,-1,6,0,3,-1,0,7,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6717() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,5,6,1,-1,0,-1,-1,-1,0,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest6718() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,2,-1,6,0,2,-1,0,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6719() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,6,-1,-1,0,0,4,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6720() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,4,1,-1,6,7,3,-1,0,8,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6721() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,6,4,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6722() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,3,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,6,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6723() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,6,1,-1,0,0,-1,-1,0,0,-1,-1,7,4,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6724() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,-1,-1,4,5,1,-1,0,0,-1,-1,6,0,3,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6725() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,8,0,3,-1,0,0,7,-1"));
    }

    @Test
    public void TreeSetSolverTest6726() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,-1,-1,7,8,1,-1,0,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,4,0,3,-1"));
    }

    @Test
    public void TreeSetSolverTest6727() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,4,-1,6,7,1,-1,-1,-1,-1,-1,0,-1,-1,-1,0,0,-1,-1,8,0,3,-1,0,0,7,-1"));
    }

    @Test
    public void TreeSetSolverTest6728() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,2,6,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,0,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6729() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,0,5,-1,-1,6,0,2,-1,6,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6730() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,6,-1,7,0,2,-1,-1,-1,-1,-1,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6731() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,6,1,-1,0,0,4,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6732() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,4,0,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,6,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6733() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,4,1,-1,6,7,3,-1,0,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6734() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,3,0,-1,-1,0,0,-1,-1,7,0,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6735() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,2,-1,5,0,-1,-1,6,0,2,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6736() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,7,-1,-1,-1,7,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest6737() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,1,-1,-1,7,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest6738() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,0,-1,-1,4,5,1,-1,0,6,-1,-1,7,0,3,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6739() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,2,-1,-1,7,0,3,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6740() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,6,7,2,-1,5,0,2,-1,0,0,4,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6741() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,-1,0,-1,-1,4,5,1,-1,6,0,-1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6742() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,4,-1,5,0,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6743() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,3,-1,5,2,1,-1,0,0,2,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6744() {
        assertEquals(false, symKorat.isSat("1,1,-1,0,2,-1,-1,3,4,1,-1,0,0,-1,-1,5,0,2,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6745() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,3,-1,5,6,1,-1,0,-1,-1,-1,0,0,-1,-1,7,0,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6746() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,-1,-1,8,0,3,-1,0,0,7,-1"));
    }

    @Test
    public void TreeSetSolverTest6747() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,0,-1,-1,4,5,1,-1,6,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest6748() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,6,-1,-1,0,0,4,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6749() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,5,0,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,6,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6750() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,5,-1,0,0,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6751() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6752() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,1,0,-1,-1,0,0,-1,-1,7,0,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6753() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,8,0,3,-1,0,0,7,-1"));
    }

    @Test
    public void TreeSetSolverTest6754() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,6,0,-1,-1,7,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest6755() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,4,-1,5,4,1,-1,2,0,3,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6756() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,7,-1,7,0,2,-1,-1,-1,-1,-1,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6757() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,1,-1,-1,0,0,-1,-1,7,0,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6758() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,8,0,3,-1,0,0,7,-1"));
    }

    @Test
    public void TreeSetSolverTest6759() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,6,7,1,-1,0,0,7,-1,-1,-1,-1,-1,0,8,-1,-1,4,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6760() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,-1,-1,7,0,2,-1,-1,-1,-1,-1,6,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6761() {
        assertEquals(true, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,5,6,2,-1,7,0,2,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6762() {
        assertEquals(false, symKorat.isSat("1,1,-1,0,2,-1,-1,3,4,1,-1,5,0,-1,-1,6,7,2,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6763() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,1,0,-1,-1,4,5,1,-1,6,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest6764() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,-1,-1,-1,-1,-1,-1,5,0,0,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6765() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,0,-1,-1,0,-1,-1,5,6,2,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6766() {
        assertEquals(false, symKorat.isSat("1,1,-1,-1,2,-1,-1,3,4,1,-1,-1,5,-1,-1,6,7,2,-1,-1,2,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6767() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,-1,-1,4,5,1,-1,0,0,-1,-1,6,2,3,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6768() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,4,-1,5,4,1,-1,2,6,3,-1,0,0,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6769() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,0,1,-1,5,6,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6770() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,0,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6771() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6772() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6773() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,5,1,-1,0,6,-1,-1,-1,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6774() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,0,4,1,-1,0,5,1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6775() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6776() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6777() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6778() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6779() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,-1,0,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6780() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,2,0,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6781() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,0,0,1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6782() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6783() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,5,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6784() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,5,1,-1,0,6,-1,-1,-1,-1,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6785() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,0,5,1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6786() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6787() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,0,6,1,-1,-1,-1,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6788() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,0,1,-1,5,6,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6789() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,4,-1,0,0,1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6790() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,0,0,1,-1,-1,-1,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6791() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,0,1,-1,-1,-1,-1,-1,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6792() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,0,1,-1,-1,-1,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6793() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,5,1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,5,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6794() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,0,-1,-1,0,5,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6795() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,4,-1,-1,0,5,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6796() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,1,-1,-1,-1,-1,-1,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6797() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,-1,4,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6798() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,0,0,1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6799() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,0,0,1,-1,-1,-1,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6800() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,5,1,-1,0,6,-1,-1,-1,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6801() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,0,5,1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6802() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,2,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6803() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,5,1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6804() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,5,1,-1,0,6,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6805() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,-1,-1,0,6,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6806() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,-1,0,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6807() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,0,1,-1,5,6,-1,-1,-1,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6808() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,4,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6809() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,0,0,1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6810() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,0,0,1,-1,-1,-1,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6811() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,0,4,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6812() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,5,1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6813() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,5,1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6814() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6815() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,0,1,-1,3,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6816() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,0,5,1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6817() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,1,-1,-1,-1,-1,-1,7,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6818() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,0,1,-1,5,6,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6819() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,0,1,-1,6,6,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6820() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,0,1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6821() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,0,1,-1,6,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6822() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,-1,-1,-1,0,0,3,-1,0,8,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6823() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6824() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6825() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,2,-1,0,0,3,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6826() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,0,3,-1,6,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6827() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,0,3,-1,6,7,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6828() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,0,3,-1,6,7,1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6829() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,0,6,3,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6830() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,6,3,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6831() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,0,-1,-1,4,5,1,-1,0,6,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6832() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6833() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,0,7,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6834() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,4,6,1,-1,0,7,3,-1,0,0,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6835() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,4,-1,-1,-1,0,7,3,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6836() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,5,6,1,-1,0,-1,-1,-1,0,7,3,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6837() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,6,3,-1,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6838() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,8,3,-1,4,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6839() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,3,-1,4,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6840() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,0,1,-1,0,6,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6841() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,0,1,-1,6,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6842() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,6,0,1,-1,-1,-1,-1,-1,7,8,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6843() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,2,-1,-1,4,5,1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6844() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,0,7,-1,-1,0,0,3,-1,0,0,-1,-1,2,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6845() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,4,5,1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6846() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6847() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,4,1,-1,0,0,-1,-1,-1,-1,-1,-1,0,8,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6848() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,5,-1,-1,-1,0,0,3,-1,0,8,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6849() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,8,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,0,4,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6850() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,0,3,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6851() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,4,-1,5,6,1,-1,0,-1,-1,-1,0,0,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6852() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,7,-1,-1,-1,0,0,3,-1,8,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6853() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,6,-1,-1,0,0,3,-1,8,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6854() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,5,-1,0,6,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6855() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6856() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6857() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6858() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,6,-1,0,6,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6859() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,2,-1,-1,4,5,1,-1,0,6,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6860() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,5,0,-1,-1,0,7,3,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6861() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,6,3,-1,7,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6862() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,6,3,-1,7,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6863() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,6,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6864() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,1,-1,-1,4,0,1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6865() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,0,1,-1,6,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,0,5,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6866() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,0,1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6867() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,0,1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6868() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6869() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,4,7,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6870() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6871() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,6,4,1,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6872() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6873() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,6,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6874() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,4,7,1,-1,0,0,3,-1,-1,-1,-1,-1,0,8,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6875() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,6,-1,7,6,1,-1,-1,-1,-1,-1,8,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6876() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6877() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6878() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,0,3,-1,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6879() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,0,3,-1,6,0,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6880() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,1,-1,-1,0,5,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6881() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,4,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6882() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,1,-1,-1,0,7,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6883() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,3,0,-1,-1,0,7,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6884() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,8,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6885() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,6,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6886() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,4,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6887() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,2,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,3,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6888() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,6,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6889() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,3,-1,4,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6890() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,0,1,-1,6,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6891() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,2,-1,5,0,1,-1,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6892() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,0,1,-1,-1,-1,-1,-1,0,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6893() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,3,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6894() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6895() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6896() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,8,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6897() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,8,3,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6898() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,6,0,-1,-1,0,0,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6899() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,0,8,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6900() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,0,8,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6901() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,0,0,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6902() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,7,-1,-1,-1,0,0,3,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6903() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,2,0,-1,-1,0,0,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6904() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,8,-1,-1,0,0,3,-1,8,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6905() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,2,0,-1,-1,0,0,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6906() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6907() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,6,-1,0,0,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6908() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,0,3,-1,6,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6909() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,0,3,-1,6,7,4,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6910() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,0,3,-1,6,7,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6911() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,7,0,-1,-1,0,8,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6912() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,4,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6913() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,1,0,-1,-1,0,7,3,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6914() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,6,-1,0,6,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6915() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,4,1,-1,6,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6916() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,2,-1,0,6,3,-1,7,8,3,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6917() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,0,1,-1,-1,3,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6918() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,0,1,-1,1,6,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6919() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,0,1,-1,0,6,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6920() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,6,0,1,-1,-1,-1,-1,-1,7,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6921() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,0,0,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6922() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,2,-1,0,0,3,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6923() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,0,0,3,-1,6,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6924() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,1,0,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6925() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,0,7,-1,-1,0,0,3,-1,0,0,-1,-1,0,4,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6926() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,8,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6927() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,-1,0,-1,-1,4,5,1,-1,0,0,3,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6928() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,0,-1,6,7,1,-1,-1,-1,-1,-1,0,-1,-1,-1,0,0,3,-1,8,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6929() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6930() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,4,-1,-1,-1,0,0,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6931() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,2,-1,-1,0,0,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6932() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,0,-1,0,0,3,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6933() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,0,3,-1,6,0,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6934() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,6,-1,0,6,3,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6935() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,2,-1,-1,-1,0,8,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6936() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,6,-1,7,6,1,-1,-1,-1,-1,-1,0,-1,-1,-1,0,0,-1,-1,0,8,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6937() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,4,5,1,-1,0,6,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6938() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,4,6,1,-1,0,7,3,-1,-1,-1,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6939() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,3,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6940() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,6,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6941() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,0,1,-1,0,6,-1,-1,0,0,3,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6942() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,0,1,-1,0,6,-1,-1,0,0,3,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6943() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6944() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,6,0,1,-1,-1,-1,-1,-1,7,8,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6945() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,0,-1,-1,4,5,1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6946() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6947() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6948() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,3,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6949() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,0,7,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6950() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,0,-1,5,6,1,-1,0,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6951() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,8,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6952() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6953() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,0,0,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6954() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,4,1,-1,6,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6955() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,4,6,1,-1,0,0,3,-1,-1,-1,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6956() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,4,0,-1,-1,0,0,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6957() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,-1,-1,7,8,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,4,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6958() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,7,-1,-1,-1,0,0,3,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6959() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,4,-1,-1,-1,0,0,3,-1,8,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6960() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,0,3,-1,6,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6961() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,0,3,-1,6,0,3,-1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6962() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,0,3,-1,6,7,3,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6963() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,3,-1,0,0,3,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6964() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,6,3,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6965() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,0,6,3,-1,7,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6966() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,2,-1,0,6,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6967() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,1,0,-1,-1,0,7,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6968() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6969() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,6,5,1,-1,0,-1,-1,-1,0,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6970() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,6,-1,7,8,1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,0,6,3,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6971() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,1,-1,-1,0,8,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6972() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,4,-1,5,6,1,-1,0,-1,-1,-1,0,7,3,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6973() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,-1,-1,-1,0,7,3,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6974() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,3,-1,-1,0,7,3,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6975() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,6,3,-1,7,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6976() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,6,3,-1,7,8,0,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6977() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,6,0,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6978() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,6,0,1,-1,-1,-1,-1,-1,7,8,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6979() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,7,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6980() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6981() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6982() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,-1,-1,7,4,1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6983() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,6,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6984() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,5,-1,-1,0,0,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6985() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,3,0,-1,-1,0,0,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6986() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,0,3,-1,6,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6987() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,0,0,3,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6988() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,2,-1,-1,-1,0,0,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6989() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,1,-1,-1,-1,0,0,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6990() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,0,-1,5,6,1,-1,0,-1,-1,-1,0,0,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6991() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,8,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6992() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,8,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6993() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,4,-1,0,0,3,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6994() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,0,3,-1,6,7,-1,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6995() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,6,-1,0,0,3,-1,7,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6996() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,2,-1,0,6,3,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6997() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,2,-1,0,6,3,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6998() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,-1,0,-1,-1,4,5,1,-1,0,6,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest6999() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,0,7,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7000() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,4,3,-1,8,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7001() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,3,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7002() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,0,7,3,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7003() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,6,4,1,-1,7,0,-1,-1,0,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7004() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,5,-1,0,6,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7005() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,4,1,-1,6,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7006() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,6,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7007() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,6,-1,0,6,3,-1,7,0,3,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7008() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,0,-1,0,6,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7009() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,0,1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7010() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,3,-1,5,0,1,-1,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7011() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,4,-1,0,0,3,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7012() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,6,4,1,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7013() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,6,7,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7014() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,4,1,-1,0,6,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7015() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,5,-1,-1,0,0,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7016() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,5,0,-1,-1,0,0,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7017() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,-1,-1,-1,0,0,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7018() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,2,-1,-1,0,0,3,-1,8,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7019() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,8,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7020() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,4,5,1,-1,0,0,3,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7021() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,4,8,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7022() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,4,6,1,-1,0,0,3,-1,-1,-1,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7023() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,4,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7024() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,4,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7025() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,-1,-1,4,7,1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7026() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,6,-1,-1,0,7,3,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7027() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,4,0,-1,-1,0,7,3,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7028() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,3,-1,-1,4,5,1,-1,0,6,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7029() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,3,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7030() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,6,-1,0,6,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7031() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,4,-1,-1,0,7,3,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7032() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,1,-1,-1,4,5,1,-1,0,6,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7033() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,6,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7034() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,5,-1,6,0,3,-1,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7035() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,5,-1,6,0,3,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7036() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,1,-1,-1,4,5,1,-1,6,0,3,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7037() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,6,4,1,-1,0,0,-1,-1,-1,-1,-1,-1,7,0,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7038() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,4,5,1,-1,6,0,3,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7039() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,0,0,6,-1,-1,-1,-1,-1,4,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7040() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,1,-1,-1,7,0,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7041() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,6,-1,7,8,1,-1,-1,-1,-1,-1,0,-1,-1,-1,0,0,7,-1,6,0,3,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7042() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,-1,-1,7,8,1,-1,0,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,0,3,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7043() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,5,0,-1,-1,7,0,3,-1,0,8,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7044() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,0,-1,-1,4,5,1,-1,6,0,3,-1,0,7,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7045() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,3,-1,0,8,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7046() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,4,1,-1,0,7,-1,-1,-1,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest7047() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,0,3,-1,7,6,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7048() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,5,-1,6,0,3,-1,7,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7049() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,4,5,1,-1,6,0,3,-1,7,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7050() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,2,-1,-1,7,0,3,-1,8,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7051() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,3,-1,8,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7052() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,6,-1,7,0,3,-1,6,8,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7053() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,3,-1,4,8,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7054() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,0,3,-1,7,0,5,-1,0,0,4,-1,-1,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7055() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,6,-1,6,0,3,-1,7,0,3,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7056() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,5,-1,6,0,3,-1,7,8,3,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7057() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,7,3,-1,0,2,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7058() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,4,6,1,-1,7,8,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,4,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7059() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,7,3,-1,8,1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7060() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,7,3,-1,8,0,3,-1,0,0,4,-1,0,0,-1,-1,-1,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7061() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,7,3,-1,8,0,0,-1,0,0,4,-1,0,0,-1,-1,-1,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7062() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,5,-1,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7063() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,5,1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7064() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,2,-1,6,0,3,-1,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7065() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7066() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,6,-1,-1,-1,7,0,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7067() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,6,-1,6,0,3,-1,0,7,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7068() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,4,1,-1,0,6,-1,-1,7,0,3,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7069() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,3,-1,0,8,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7070() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,-1,-1,4,5,1,-1,6,0,3,-1,0,7,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7071() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,4,-1,5,6,1,-1,0,-1,-1,-1,7,0,3,-1,0,8,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7072() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,4,-1,6,0,3,-1,0,7,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7073() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,0,3,-1,7,8,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7074() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,0,0,5,-1,4,0,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7075() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,3,-1,6,0,3,-1,7,0,3,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7076() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,0,3,-1,7,8,8,-1,0,0,4,-1,-1,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7077() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,5,6,4,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7078() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,7,3,-1,0,4,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7079() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7080() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,6,1,-1,0,0,-1,-1,7,4,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7081() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,7,3,-1,8,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7082() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,7,3,-1,8,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,5,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7083() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,2,-1,6,0,3,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7084() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,0,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest7085() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,5,6,1,-1,0,-1,-1,-1,7,0,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7086() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,0,3,-1,0,4,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest7087() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,7,-1,-1,8,0,3,-1,7,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest7088() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,0,-1,-1,4,5,1,-1,6,0,3,-1,7,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7089() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,0,3,-1,4,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest7090() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,4,1,-1,6,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest7091() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,0,3,-1,7,8,3,-1,0,0,4,-1,2,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7092() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,5,6,-1,-1,0,0,4,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7093() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,1,-1,-1,4,5,1,-1,6,7,3,-1,0,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7094() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,4,-1,5,6,1,-1,0,-1,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7095() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7096() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,4,1,-1,6,0,-1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7097() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,2,0,-1,-1,4,5,1,-1,6,7,3,-1,8,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7098() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,7,3,-1,8,6,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7099() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,7,3,-1,8,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,6,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7100() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,0,3,-1,5,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7101() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,0,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest7102() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,4,-1,-1,-1,7,0,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7103() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,3,0,-1,-1,7,0,3,-1,0,8,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7104() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,3,-1,0,8,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7105() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,2,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,3,-1,0,8,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7106() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,6,-1,7,0,3,-1,8,6,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7107() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,0,3,-1,7,8,-1,-1,0,0,4,-1,-1,4,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7108() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,7,3,-1,0,6,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7109() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,2,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7110() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,0,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7111() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,1,-1,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7112() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,6,-1,7,8,3,-1,0,6,-1,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7113() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,0,0,5,-1,4,7,3,-1,8,0,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7114() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,0,-1,-1,4,5,1,-1,6,7,3,-1,8,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7115() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,2,-1,-1,4,5,1,-1,6,0,3,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7116() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7117() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,6,7,1,-1,0,-1,-1,-1,0,0,6,-1,5,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7118() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,0,-1,-1,-1,8,0,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest7119() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,3,-1,0,8,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7120() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,4,-1,-1,7,0,3,-1,0,8,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7121() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,0,3,-1,7,4,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7122() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,4,1,-1,7,0,-1,-1,-1,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest7123() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,0,3,-1,7,0,-1,-1,0,0,4,-1,-1,6,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7124() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,0,3,-1,7,8,3,-1,0,0,4,-1,7,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7125() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,0,3,-1,7,8,1,-1,0,0,4,-1,-1,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7126() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,5,6,-1,-1,0,0,4,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7127() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,7,3,-1,8,-1,-1,-1,0,0,4,-1,0,0,-1,-1,0,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7128() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,0,0,-1,-1,7,4,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7129() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,3,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7130() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7131() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,5,-1,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7132() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,0,-1,6,7,3,-1,0,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7133() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,0,3,-1,6,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7134() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,0,3,-1,0,1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7135() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,2,-1,6,7,1,-1,-1,-1,-1,-1,0,-1,-1,-1,8,0,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest7136() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,3,-1,0,8,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7137() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,6,-1,7,0,3,-1,0,6,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7138() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,6,4,1,-1,7,0,-1,-1,-1,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest7139() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,0,-1,-1,4,5,1,-1,6,0,3,-1,7,8,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7140() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,3,-1,-1,5,6,3,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7141() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,5,-1,6,7,3,-1,8,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7142() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,6,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7143() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,4,1,-1,0,6,-1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7144() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,5,-1,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7145() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,0,3,-1,7,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7146() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,0,3,-1,7,-1,-1,-1,0,0,4,-1,0,2,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7147() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,0,0,5,-1,4,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7148() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7149() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,-1,-1,4,5,1,-1,6,0,3,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7150() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,4,1,-1,0,0,-1,-1,-1,-1,-1,-1,7,0,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7151() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,1,-1,-1,4,5,1,-1,6,0,3,-1,7,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7152() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,3,-1,8,4,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7153() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,-1,0,-1,-1,4,5,1,-1,6,0,3,-1,7,8,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7154() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,3,-1,4,8,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7155() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,5,6,-1,-1,0,0,4,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7156() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,6,-1,7,8,3,-1,6,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7157() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,7,3,-1,8,-1,-1,-1,0,0,4,-1,0,0,-1,-1,4,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7158() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,7,3,-1,8,-1,-1,-1,0,0,4,-1,0,0,-1,-1,0,6,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7159() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,5,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7160() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,0,3,-1,0,6,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7161() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,0,3,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7162() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,-1,-1,4,7,1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1"));
    }

    @Test
    public void TreeSetSolverTest7163() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7164() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,1,-1,-1,-1,7,0,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7165() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,7,-1,-1,-1,8,0,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest7166() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,2,-1,-1,-1,7,0,3,-1,0,8,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7167() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,-1,-1,-1,7,0,3,-1,0,8,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7168() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,3,-1,8,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7169() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,3,-1,8,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7170() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,0,3,-1,7,0,-1,-1,0,0,4,-1,-1,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7171() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,0,3,-1,7,8,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7172() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,0,3,-1,7,8,-1,-1,0,0,4,-1,-1,8,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7173() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,0,3,-1,7,8,-1,-1,0,0,4,-1,-1,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7174() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,5,6,-1,-1,0,0,4,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7175() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,6,-1,7,8,3,-1,0,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7176() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,5,-1,6,7,3,-1,0,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7177() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,7,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7178() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,7,3,-1,8,7,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7179() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,0,-1,-1,4,5,1,-1,6,0,3,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7180() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,3,-1,-1,4,5,1,-1,6,0,3,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7181() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,6,7,1,-1,0,0,6,-1,-1,-1,-1,-1,4,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7182() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,3,-1,-1,4,5,1,-1,6,0,3,-1,0,7,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7183() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,1,-1,-1,7,0,3,-1,0,8,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7184() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,0,3,-1,7,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7185() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,3,-1,6,0,3,-1,7,8,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7186() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,5,6,6,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7187() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,7,3,-1,8,-1,-1,-1,0,0,4,-1,0,0,-1,-1,3,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7188() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,7,3,-1,0,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7189() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,4,6,1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7190() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,7,3,-1,0,8,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7191() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,0,-1,-1,4,5,1,-1,6,7,3,-1,8,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7192() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7193() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,0,1,-1,0,5,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7194() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,0,1,-1,5,6,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7195() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,0,0,1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7196() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,0,4,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7197() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,0,4,1,-1,0,5,1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7198() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,0,6,1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7199() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,0,1,-1,5,6,-1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7200() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,3,-1,0,0,1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7201() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,5,1,-1,1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7202() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,0,6,1,-1,-1,-1,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7203() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,0,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7204() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,0,0,1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7205() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,0,0,1,-1,-1,-1,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7206() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,0,-1,0,0,1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7207() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,5,1,-1,0,6,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7208() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,5,1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7209() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,5,1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7210() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,0,5,1,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7211() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,1,-1,-1,-1,-1,-1,7,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7212() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,0,1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7213() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,0,1,-1,0,5,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7214() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,2,-1,0,0,1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7215() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,0,1,-1,-1,-1,-1,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7216() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,0,-1,-1,0,4,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7217() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,5,1,-1,3,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7218() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,5,1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7219() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,5,1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,6,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7220() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,0,1,-1,2,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7221() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7222() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7223() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,0,-1,-1,0,4,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7224() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,0,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7225() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7226() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7227() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,0,1,-1,5,6,-1,-1,-1,-1,-1,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7228() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,0,1,-1,-1,-1,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7229() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,0,0,1,-1,-1,-1,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7230() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7231() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,-1,4,-1,-1,0,5,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7232() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,5,1,-1,0,6,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7233() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,0,5,1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7234() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,0,1,-1,-1,-1,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7235() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,0,0,1,-1,-1,-1,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7236() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,-1,0,-1,-1,0,4,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7237() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,-1,4,-1,-1,0,5,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7238() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,5,1,-1,0,6,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7239() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,-1,-1,0,6,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7240() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7241() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7242() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,0,1,-1,2,6,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7243() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,0,1,-1,0,6,-1,-1,0,0,3,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7244() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,0,3,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7245() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,0,3,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7246() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,7,7,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7247() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7248() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7249() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7250() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,2,-1,0,0,3,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7251() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7252() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,6,4,1,-1,0,7,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7253() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,0,-1,0,0,3,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7254() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,-1,0,-1,-1,4,5,1,-1,0,0,3,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7255() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,0,0,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7256() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,0,3,-1,6,0,1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7257() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,0,3,-1,6,7,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7258() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,5,6,1,-1,0,-1,-1,-1,0,7,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7259() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,4,1,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,8,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7260() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,4,6,1,-1,0,7,3,-1,-1,-1,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7261() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,3,-1,-1,-1,0,7,3,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7262() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,7,0,-1,-1,0,8,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7263() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,6,-1,-1,-1,0,7,3,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7264() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,2,0,-1,-1,4,5,1,-1,0,6,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7265() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,6,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,2,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7266() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,6,3,-1,7,0,3,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7267() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,6,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7268() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,6,3,-1,7,8,3,-1,-1,-1,-1,-1,8,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7269() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,4,-1,-1,5,0,1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7270() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,-1,-1,6,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7271() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,0,1,-1,0,2,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7272() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,0,3,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7273() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,4,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7274() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7275() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,0,4,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7276() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7277() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,7,-1,-1,0,0,3,-1,0,8,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7278() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,2,-1,0,0,3,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7279() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7280() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,4,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7281() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,4,6,1,-1,0,0,3,-1,0,0,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7282() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,0,0,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7283() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,3,-1,6,7,1,-1,-1,-1,-1,-1,0,-1,-1,-1,0,0,3,-1,8,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7284() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7285() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,2,-1,-1,0,0,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7286() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,4,1,-1,6,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7287() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,0,3,-1,6,0,5,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7288() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,0,3,-1,6,7,6,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7289() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,3,-1,0,0,3,-1,6,7,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7290() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,6,3,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7291() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7292() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,4,1,-1,0,7,-1,-1,-1,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7293() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,3,0,-1,-1,0,7,3,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7294() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,1,-1,-1,4,5,1,-1,0,6,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7295() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,6,7,1,-1,0,-1,-1,-1,-1,-1,-1,-1,0,5,3,-1,8,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7296() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,6,3,-1,7,0,4,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7297() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,6,3,-1,7,8,3,-1,-1,-1,-1,-1,3,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7298() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,0,5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7299() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7300() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,0,4,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7301() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,0,1,-1,6,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7302() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,0,1,-1,0,1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7303() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,6,-1,7,0,1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7304() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,2,-1,6,0,1,-1,-1,-1,-1,-1,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7305() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,6,-1,7,0,1,-1,-1,-1,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7306() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,2,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7307() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7308() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7309() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7310() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7311() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,1,0,-1,-1,4,5,1,-1,0,0,3,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7312() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,0,0,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7313() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,6,-1,0,0,3,-1,6,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7314() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,0,6,3,-1,7,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7315() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,0,6,3,-1,7,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7316() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,7,-1,-1,-1,0,7,3,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7317() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,6,-1,-1,0,7,3,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7318() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,1,0,-1,-1,4,5,1,-1,0,6,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7319() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,3,-1,0,6,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7320() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,0,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7321() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,-1,-1,-1,-1,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7322() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,-1,-1,-1,-1,0,6,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7323() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,7,8,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7324() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,3,-1,0,0,3,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7325() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,6,-1,-1,-1,0,0,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7326() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,3,-1,6,7,1,-1,-1,-1,-1,-1,0,-1,-1,-1,0,0,3,-1,0,8,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7327() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,-1,0,-1,-1,4,5,1,-1,0,0,3,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7328() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,0,6,3,-1,7,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7329() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,6,-1,-1,0,7,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7330() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,4,6,1,-1,0,7,3,-1,-1,-1,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7331() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,4,1,-1,6,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7332() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,-1,0,-1,-1,4,5,1,-1,0,6,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7333() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,-1,0,-1,-1,4,5,1,-1,0,6,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7334() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,3,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7335() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,3,-1,4,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7336() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,5,-1,0,6,3,-1,7,8,3,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7337() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,6,-1,0,7,3,-1,8,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7338() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,0,1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7339() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,0,1,-1,0,6,-1,-1,0,0,3,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7340() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,-1,-1,6,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7341() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,2,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7342() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,8,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7343() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,8,0,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7344() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7345() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,3,-1,-1,4,5,1,-1,0,0,3,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7346() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7347() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,6,4,1,-1,0,7,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7348() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,0,4,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7349() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,0,3,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7350() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,4,1,-1,6,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7351() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,3,-1,-1,4,5,1,-1,0,0,3,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7352() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,7,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7353() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,0,3,-1,6,7,3,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7354() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,3,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7355() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,4,6,1,-1,0,7,3,-1,0,0,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7356() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,5,-1,0,6,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7357() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,3,-1,-1,4,5,1,-1,0,6,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7358() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,4,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7359() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,0,6,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7360() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,6,-1,0,7,3,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7361() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,0,2,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7362() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,2,0,-1,-1,4,0,1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7363() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,1,0,-1,-1,4,0,1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7364() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,0,1,-1,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7365() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,0,-1,5,0,1,-1,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7366() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,-1,-1,-1,-1,0,5,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7367() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,-1,-1,-1,-1,0,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7368() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7369() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7370() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,5,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7371() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,8,4,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7372() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,8,-1,-1,-1,0,0,3,-1,0,8,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7373() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,4,-1,0,6,3,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7374() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,4,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7375() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,4,1,-1,0,0,-1,-1,-1,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7376() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,2,-1,-1,0,7,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7377() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,3,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7378() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,6,5,1,-1,0,-1,-1,-1,0,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7379() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,2,-1,5,6,1,-1,0,-1,-1,-1,0,7,3,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7380() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,4,-1,0,6,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7381() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,6,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,2,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7382() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,0,1,-1,-1,6,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7383() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,0,1,-1,6,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7384() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,1,4,-1,-1,5,0,1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7385() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,6,-1,0,0,3,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7386() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,4,1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7387() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,4,5,1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7388() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,4,1,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7389() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,4,6,1,-1,0,0,3,-1,0,0,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7390() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7391() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,2,-1,-1,4,5,1,-1,0,0,3,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7392() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,4,0,-1,-1,0,0,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7393() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7394() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,0,-1,-1,-1,0,0,3,-1,0,8,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7395() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,7,-1,-1,-1,0,0,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7396() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,7,0,-1,-1,0,0,3,-1,8,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7397() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7398() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7399() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,0,3,-1,6,0,6,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7400() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,5,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7401() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7402() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,5,0,-1,-1,0,7,3,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7403() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,4,5,1,-1,0,6,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7404() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,-1,0,-1,-1,4,5,1,-1,0,6,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7405() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,6,3,-1,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7406() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,6,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,8,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7407() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,0,1,-1,0,6,-1,-1,0,0,3,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7408() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,6,0,1,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7409() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,-1,-1,-1,-1,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7410() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,6,0,1,-1,-1,-1,-1,-1,7,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7411() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,0,-1,6,0,1,-1,-1,-1,-1,-1,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7412() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,2,-1,0,0,3,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7413() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,0,0,3,-1,6,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7414() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,0,7,-1,-1,0,0,3,-1,0,0,-1,-1,7,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7415() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7416() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7417() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,4,5,1,-1,0,0,3,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7418() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7419() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,1,-1,-1,-1,0,0,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7420() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,0,8,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7421() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,7,0,-1,-1,0,0,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7422() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,0,-1,-1,4,5,1,-1,0,0,3,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7423() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,8,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7424() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7425() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,7,-1,-1,0,0,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7426() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,0,3,-1,6,0,3,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7427() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,6,3,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7428() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,6,4,1,-1,0,0,-1,-1,0,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7429() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,2,-1,-1,0,8,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7430() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,6,0,-1,-1,0,7,3,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7431() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,0,4,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7432() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,6,7,1,-1,0,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,0,5,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7433() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,2,-1,0,6,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7434() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,0,-1,0,6,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7435() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,-1,0,-1,-1,4,5,1,-1,0,6,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7436() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,7,-1,-1,-1,0,8,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7437() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7438() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,0,3,-1,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7439() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,4,6,1,-1,7,0,3,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7440() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,5,-1,-1,7,0,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7441() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,6,7,1,-1,0,0,6,-1,-1,-1,-1,-1,4,0,3,-1,0,8,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7442() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,0,3,-1,0,4,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest7443() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,0,-1,6,0,3,-1,0,7,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7444() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,5,6,3,-1,0,0,4,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7445() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,0,0,5,-1,4,7,3,-1,0,0,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7446() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7447() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7448() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,3,-1,-1,4,5,1,-1,6,7,3,-1,8,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7449() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,5,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7450() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,4,-1,-1,7,0,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7451() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,4,-1,-1,-1,8,0,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest7452() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,7,-1,-1,8,0,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest7453() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,4,1,-1,6,0,-1,-1,7,0,3,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7454() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,5,6,-1,-1,0,0,4,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7455() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,0,-1,6,7,3,-1,0,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7456() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,7,3,-1,4,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7457() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,1,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7458() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,8,3,-1,0,4,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7459() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,6,1,-1,0,0,-1,-1,7,4,3,-1,0,8,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7460() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,4,-1,6,0,3,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7461() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,-1,0,-1,-1,4,5,1,-1,6,0,3,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7462() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,3,-1,-1,7,0,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7463() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,1,-1,-1,-1,8,0,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest7464() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,2,-1,6,0,3,-1,0,7,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7465() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,3,-1,0,8,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7466() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,7,-1,-1,7,0,3,-1,0,8,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7467() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,3,-1,4,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7468() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,6,-1,-1,-1,7,0,3,-1,8,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7469() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,3,-1,8,4,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7470() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,5,6,-1,-1,0,0,4,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7471() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,5,3,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7472() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,6,4,1,-1,0,0,-1,-1,-1,-1,-1,-1,7,8,3,-1,0,0,6,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7473() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,4,-1,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7474() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,7,3,-1,8,8,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7475() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,7,3,-1,8,3,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7476() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,7,3,-1,8,0,3,-1,0,0,4,-1,0,0,-1,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7477() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,7,3,-1,8,0,2,-1,0,0,4,-1,0,0,-1,-1,-1,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7478() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,0,-1,-1,7,0,3,-1,0,8,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7479() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,7,-1,-1,7,0,3,-1,8,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7480() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,0,3,-1,7,0,3,-1,0,0,4,-1,8,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7481() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,0,3,-1,7,8,3,-1,0,0,4,-1,8,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7482() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,0,-1,6,0,3,-1,7,8,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7483() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,4,-1,6,7,3,-1,0,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7484() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,8,3,-1,4,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7485() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,7,3,-1,8,0,3,-1,0,0,4,-1,0,0,-1,-1,8,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7486() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,3,-1,6,7,3,-1,8,0,3,-1,0,0,4,-1,0,0,-1,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7487() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,2,-1,-1,5,0,3,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7488() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,0,-1,-1,5,0,3,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7489() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,6,-1,7,6,1,-1,-1,-1,-1,-1,0,-1,-1,-1,0,0,-1,-1,8,0,3,-1,0,0,7,-1"));
    }

    @Test
    public void TreeSetSolverTest7490() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,5,-1,-1,7,0,3,-1,0,8,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7491() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,6,-1,6,0,3,-1,7,8,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7492() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,3,-1,8,4,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7493() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,0,-1,-1,4,5,1,-1,6,0,3,-1,7,8,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7494() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,4,-1,6,0,3,-1,7,8,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7495() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,2,-1,6,0,3,-1,7,0,3,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7496() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,6,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7497() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,5,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7498() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,6,-1,7,8,3,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7499() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,5,-1,6,7,3,-1,0,8,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7500() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,2,-1,-1,4,5,1,-1,6,7,3,-1,0,8,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7501() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,7,3,-1,8,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,8,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7502() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,7,3,-1,8,0,3,-1,0,0,4,-1,0,0,-1,-1,3,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7503() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,6,-1,6,0,3,-1,7,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7504() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,0,3,-1,0,7,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7505() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,6,4,1,-1,0,7,-1,-1,-1,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest7506() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,0,-1,5,6,1,-1,0,-1,-1,-1,7,0,3,-1,0,8,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7507() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,4,-1,6,0,3,-1,7,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7508() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,3,-1,-1,4,5,1,-1,6,0,3,-1,7,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7509() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,5,0,1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7510() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,5,6,-1,-1,0,0,4,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7511() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,5,-1,6,7,3,-1,0,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7512() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7513() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,6,-1,6,7,3,-1,8,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7514() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,8,3,-1,4,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7515() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,5,0,4,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7516() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,3,-1,-1,-1,7,0,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7517() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,6,7,1,-1,0,0,6,-1,0,0,-1,-1,4,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7518() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,-1,-1,7,4,1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,0,3,-1,0,0,7,-1"));
    }

    @Test
    public void TreeSetSolverTest7519() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,0,-1,6,0,3,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7520() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,7,-1,-1,-1,7,0,3,-1,0,8,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7521() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,2,-1,5,6,1,-1,0,-1,-1,-1,7,0,3,-1,0,8,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7522() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,7,0,3,-1,0,8,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7523() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,0,3,-1,7,0,3,-1,0,0,4,-1,5,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7524() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,2,-1,-1,4,5,1,-1,6,7,3,-1,0,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7525() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,0,-1,-1,4,5,1,-1,6,7,3,-1,0,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7526() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,6,7,1,-1,0,0,6,-1,-1,-1,-1,-1,4,8,3,-1,0,0,-1,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7527() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7528() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,1,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7529() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,6,-1,6,7,3,-1,0,8,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7530() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,7,3,-1,8,0,5,-1,0,0,4,-1,0,0,-1,-1,-1,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7531() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,0,-1,6,0,3,-1,7,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7532() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,3,-1,5,6,1,-1,0,-1,-1,-1,7,0,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7533() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,0,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest7534() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,-1,0,-1,-1,4,5,1,-1,6,0,3,-1,7,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7535() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,4,6,1,-1,7,0,3,-1,-1,-1,-1,-1,8,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7536() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,7,-1,-1,-1,7,0,3,-1,8,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7537() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,4,1,-1,6,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest7538() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,0,3,-1,7,3,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7539() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,5,6,-1,-1,0,0,4,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7540() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,7,3,-1,1,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7541() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,6,7,1,-1,0,0,6,-1,-1,-1,-1,-1,4,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7542() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,4,-1,5,6,1,-1,0,-1,-1,-1,7,0,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7543() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,4,6,1,-1,7,0,3,-1,-1,-1,-1,-1,0,8,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7544() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,-1,-1,4,5,1,-1,6,0,3,-1,7,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7545() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,7,0,3,-1,8,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7546() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,-1,0,-1,-1,4,5,1,-1,6,0,3,-1,7,8,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7547() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,3,-1,6,7,3,-1,8,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7548() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,7,3,-1,8,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7549() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,2,-1,5,6,1,-1,0,-1,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7550() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7551() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,0,1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7552() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,0,1,-1,0,5,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7553() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,0,0,1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7554() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,0,0,1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7555() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,6,-1,0,0,1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7556() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7557() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,5,1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7558() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,3,-1,0,5,1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7559() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,0,4,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7560() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,0,1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7561() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,0,1,-1,5,6,-1,-1,-1,-1,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7562() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7563() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,0,0,1,-1,-1,-1,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7564() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7565() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7566() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,2,-1,-1,0,4,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7567() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,1,-1,-1,-1,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7568() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,4,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7569() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,0,0,1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7570() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,0,4,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7571() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,0,5,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7572() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,5,1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7573() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7574() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,0,-1,-1,0,5,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7575() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,0,1,-1,3,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7576() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,0,1,-1,5,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7577() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,0,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7578() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,0,0,1,-1,-1,-1,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7579() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,5,1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7580() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,1,0,-1,-1,0,4,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7581() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,4,-1,0,6,1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7582() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7583() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,0,4,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7584() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,0,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7585() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,4,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7586() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,0,1,-1,1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7587() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7588() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,0,0,1,-1,-1,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7589() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,4,-1,-1,0,5,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7590() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,5,1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,3,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7591() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,0,-1,0,5,1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7592() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,0,6,1,-1,-1,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7593() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,0,6,1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7594() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7595() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,-1,-1,0,6,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7596() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,0,1,-1,3,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7597() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,6,0,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7598() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,3,-1,-1,4,5,1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7599() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,4,-1,-1,-1,0,0,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7600() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,3,-1,5,6,1,-1,0,-1,-1,-1,0,0,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7601() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,4,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7602() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,4,6,1,-1,0,0,3,-1,-1,-1,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7603() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,0,-1,-1,4,5,1,-1,0,0,3,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7604() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,4,5,1,-1,0,6,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7605() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,-1,-1,-1,0,8,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7606() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,4,7,1,-1,0,8,3,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7607() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,3,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7608() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,6,3,-1,7,0,3,-1,-1,-1,-1,-1,7,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7609() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,6,3,-1,7,8,5,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7610() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,6,3,-1,7,8,3,-1,-1,-1,-1,-1,6,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7611() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,-1,0,-1,-1,4,0,1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7612() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,-1,-1,6,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7613() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,6,-1,0,0,3,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7614() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,7,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7615() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,4,5,1,-1,0,0,3,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7616() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,0,8,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7617() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,8,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7618() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,4,-1,6,7,1,-1,-1,-1,-1,-1,0,-1,-1,-1,0,0,3,-1,8,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7619() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,4,7,1,-1,0,0,3,-1,-1,-1,-1,-1,0,0,-1,-1,8,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7620() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,6,-1,-1,-1,0,0,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7621() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,0,3,-1,6,7,0,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7622() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,0,-1,-1,4,5,1,-1,0,6,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7623() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,6,7,1,-1,0,-1,-1,-1,-1,-1,-1,-1,0,5,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7624() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,3,-1,-1,0,7,3,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7625() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,6,3,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7626() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,6,-1,0,7,3,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7627() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,4,6,1,-1,0,7,3,-1,0,0,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7628() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,6,3,-1,7,0,1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7629() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7630() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,0,1,-1,6,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,8,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7631() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7632() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,0,3,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7633() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,-1,-1,4,5,1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7634() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,3,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7635() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,1,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7636() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,6,-1,6,7,1,-1,-1,-1,-1,-1,8,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7637() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,6,0,-1,-1,0,0,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7638() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,7,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7639() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,4,-1,0,0,3,-1,6,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7640() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,0,0,3,-1,6,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7641() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,3,-1,0,6,3,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7642() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,0,-1,-1,4,5,1,-1,0,6,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7643() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,8,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7644() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,4,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7645() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,3,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7646() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,4,3,-1,8,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7647() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,4,1,-1,6,7,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7648() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,4,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7649() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,6,-1,0,7,3,-1,6,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7650() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,4,0,1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7651() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,4,0,1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7652() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,0,4,1,-1,5,0,1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7653() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,6,0,1,-1,7,8,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7654() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,0,-1,0,0,3,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7655() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,4,1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7656() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,2,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7657() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,6,-1,7,8,1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7658() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,4,-1,5,6,1,-1,0,-1,-1,-1,0,0,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7659() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,4,-1,-1,0,0,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7660() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,6,-1,-1,0,0,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7661() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,-1,-1,4,7,1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7662() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,4,8,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7663() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,0,-1,-1,0,0,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7664() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,3,-1,-1,-1,0,0,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7665() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,6,-1,0,6,3,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7666() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7667() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,7,-1,-1,0,8,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7668() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,4,6,1,-1,0,7,3,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7669() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,0,-1,-1,-1,0,7,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7670() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,5,-1,-1,-1,0,7,3,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7671() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,0,1,-1,-1,1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7672() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,0,1,-1,0,6,-1,-1,0,0,3,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7673() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,-1,-1,-1,-1,0,2,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7674() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,0,0,3,-1,6,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7675() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,0,3,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7676() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7677() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7678() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,0,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7679() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,5,-1,-1,-1,0,0,3,-1,8,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7680() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,4,6,1,-1,0,0,3,-1,-1,-1,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7681() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,0,5,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7682() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,-1,-1,4,5,1,-1,0,6,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7683() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7684() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,4,-1,-1,0,7,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7685() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,3,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7686() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,7,-1,-1,0,7,3,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7687() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,3,-1,0,6,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7688() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,4,5,1,-1,0,6,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7689() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,-1,-1,4,5,1,-1,0,6,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7690() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,0,7,-1,-1,0,0,3,-1,0,0,-1,-1,0,1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7691() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,0,4,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7692() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,0,8,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7693() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,3,-1,5,6,1,-1,0,-1,-1,-1,0,0,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7694() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,6,-1,7,6,1,-1,-1,-1,-1,-1,0,-1,-1,-1,8,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7695() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,1,0,-1,-1,0,0,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7696() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,7,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7697() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,2,-1,-1,-1,0,0,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7698() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,6,7,1,-1,0,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,8,5,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7699() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,0,3,-1,6,7,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7700() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,6,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7701() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,6,3,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7702() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7703() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,5,-1,6,7,1,-1,-1,-1,-1,-1,0,-1,-1,-1,0,8,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7704() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,1,-1,-1,-1,0,7,3,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7705() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,0,6,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7706() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,8,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7707() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,0,7,-1,-1,0,0,3,-1,0,0,-1,-1,0,3,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7708() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7709() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7710() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,3,-1,-1,0,0,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7711() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,8,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7712() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,6,-1,0,0,3,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7713() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,6,5,1,-1,0,-1,-1,-1,7,8,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7714() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,0,3,-1,6,0,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7715() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,0,6,3,-1,7,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7716() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,0,0,-1,-1,0,7,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7717() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,4,-1,-1,-1,0,8,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7718() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,7,-1,-1,-1,0,8,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7719() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,4,1,-1,0,6,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7720() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,2,-1,-1,0,7,3,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7721() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,8,3,-1,0,4,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7722() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,4,6,1,-1,0,7,3,-1,-1,-1,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7723() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,4,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7724() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,3,-1,-1,-1,0,7,3,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7725() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,5,6,1,-1,0,-1,-1,-1,0,7,3,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7726() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,-1,0,-1,-1,4,5,1,-1,0,6,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7727() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,3,-1,-1,4,5,1,-1,0,6,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7728() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,3,-1,4,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7729() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,0,-1,-1,5,0,1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7730() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,0,-1,-1,5,0,1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7731() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,-1,-1,6,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7732() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,1,0,-1,-1,4,5,1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7733() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,3,-1,6,7,1,-1,-1,-1,-1,-1,0,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7734() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7735() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,7,-1,-1,0,0,3,-1,8,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7736() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,5,-1,-1,0,0,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7737() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,1,0,-1,-1,4,5,1,-1,0,0,3,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7738() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7739() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,3,-1,5,6,1,-1,0,-1,-1,-1,0,7,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7740() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,6,-1,6,7,1,-1,-1,-1,-1,-1,0,-1,-1,-1,0,8,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7741() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,-1,0,-1,-1,4,5,1,-1,0,6,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7742() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,2,-1,-1,-1,0,7,3,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7743() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,0,-1,-1,-1,0,7,3,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7744() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,6,3,-1,7,0,3,-1,-1,-1,-1,-1,8,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7745() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,6,-1,0,7,3,-1,6,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7746() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,4,-1,6,0,3,-1,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7747() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,7,0,-1,-1,7,0,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7748() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,7,-1,-1,7,0,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7749() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,3,-1,6,7,1,-1,-1,-1,-1,-1,0,-1,-1,-1,8,0,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest7750() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,4,1,-1,6,0,-1,-1,7,0,3,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7751() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,7,0,3,-1,8,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7752() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,0,3,-1,7,0,-1,-1,0,0,4,-1,-1,2,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7753() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,0,3,-1,7,8,5,-1,0,0,4,-1,-1,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7754() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,0,0,5,-1,4,7,3,-1,0,0,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7755() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,6,5,1,-1,0,-1,-1,-1,0,0,-1,-1,7,8,3,-1,0,0,6,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7756() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,4,5,1,-1,6,7,3,-1,8,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7757() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,5,0,3,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7758() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,5,-1,6,0,3,-1,7,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7759() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,3,-1,6,0,3,-1,7,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7760() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,3,0,-1,-1,7,0,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7761() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7762() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,5,-1,-1,-1,8,0,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest7763() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,2,-1,-1,4,5,1,-1,6,0,3,-1,0,7,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7764() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,0,3,-1,0,4,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest7765() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,0,3,-1,4,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest7766() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,0,3,-1,7,0,7,-1,0,0,4,-1,-1,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7767() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,7,3,-1,5,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7768() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,4,1,-1,0,0,-1,-1,-1,-1,-1,-1,7,8,3,-1,0,0,6,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7769() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,7,3,-1,8,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7770() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,7,3,-1,8,0,3,-1,0,0,4,-1,0,0,-1,-1,2,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7771() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,5,-1,-1,-1,0,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7772() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,0,3,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7773() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,1,-1,-1,8,0,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest7774() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,7,-1,-1,-1,8,0,3,-1,0,7,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest7775() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,7,0,3,-1,0,8,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7776() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,0,3,-1,7,0,3,-1,0,0,4,-1,6,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7777() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,5,6,-1,-1,0,0,4,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7778() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,0,0,-1,-1,-1,-1,-1,-1,8,4,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest7779() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7780() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,0,0,6,-1,-1,-1,-1,-1,4,8,3,-1,0,0,-1,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7781() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,7,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7782() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7783() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,4,-1,6,7,3,-1,0,8,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7784() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,0,0,5,-1,4,7,3,-1,0,8,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7785() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,7,3,-1,8,0,3,-1,0,0,4,-1,0,0,-1,-1,4,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7786() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,5,-1,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7787() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,0,3,-1,4,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7788() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,6,7,1,-1,0,0,-1,-1,-1,-1,-1,-1,8,0,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest7789() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,0,3,-1,7,0,-1,-1,0,0,4,-1,-1,3,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7790() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,0,3,-1,7,0,4,-1,0,0,4,-1,-1,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7791() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,0,3,-1,7,0,2,-1,0,0,4,-1,-1,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7792() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,5,6,3,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7793() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,4,-1,6,7,3,-1,8,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7794() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,5,6,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7795() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,7,3,-1,6,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7796() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,0,-1,-1,4,5,1,-1,6,7,3,-1,0,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7797() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,7,3,-1,8,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,7,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7798() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,0,3,-1,3,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7799() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,0,3,-1,7,0,-1,-1,0,0,4,-1,-1,7,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7800() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,7,3,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7801() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,2,-1,6,7,3,-1,8,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7802() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7803() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,0,0,-1,-1,7,4,3,-1,0,8,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7804() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,7,3,-1,8,5,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7805() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,5,6,-1,-1,0,0,4,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7806() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,5,-1,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7807() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,7,0,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7808() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,2,-1,-1,7,0,3,-1,0,8,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7809() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,6,7,1,-1,0,0,6,-1,-1,-1,-1,-1,4,0,3,-1,8,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7810() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,3,-1,8,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7811() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,3,-1,-1,7,0,3,-1,8,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7812() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,6,-1,7,6,3,-1,8,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7813() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,7,3,-1,0,7,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7814() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,2,0,-1,-1,4,5,1,-1,6,7,3,-1,0,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7815() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,0,-1,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7816() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,5,-1,6,7,3,-1,8,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7817() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,3,-1,6,7,3,-1,8,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7818() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,8,0,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest7819() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,7,0,3,-1,0,8,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7820() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,0,0,5,-1,4,0,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7821() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,4,5,1,-1,6,0,3,-1,7,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7822() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,0,-1,6,0,3,-1,7,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7823() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,4,5,1,-1,6,0,3,-1,7,8,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7824() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,-1,0,-1,-1,4,5,1,-1,6,7,3,-1,0,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7825() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,0,-1,-1,4,5,1,-1,6,7,3,-1,0,8,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7826() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,6,-1,7,8,3,-1,6,0,-1,-1,-1,-1,-1,-1,0,0,4,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7827() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,6,-1,6,7,3,-1,8,0,3,-1,0,0,4,-1,0,0,-1,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7828() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,5,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7829() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,0,-1,-1,-1,7,0,3,-1,0,8,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7830() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,7,-1,-1,-1,8,0,3,-1,7,0,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest7831() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,7,0,3,-1,8,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7832() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,2,-1,6,0,3,-1,7,8,3,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7833() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,5,-1,6,0,3,-1,7,8,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7834() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,6,-1,6,7,3,-1,0,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7835() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,7,3,-1,8,-1,-1,-1,0,0,4,-1,0,0,-1,-1,2,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7836() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,3,-1,5,6,1,-1,0,-1,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7837() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,2,-1,6,7,3,-1,0,8,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7838() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,7,3,-1,8,0,4,-1,0,0,4,-1,0,0,-1,-1,-1,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7839() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,4,-1,6,7,3,-1,8,0,3,-1,0,0,4,-1,0,0,-1,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7840() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,5,6,0,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7841() {
        assertEquals(false, symKorat.isSat("1,1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7842() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,5,1,-1,0,6,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7843() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,5,1,-1,0,6,-1,-1,-1,-1,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7844() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7845() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,0,1,-1,-1,-1,-1,-1,6,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7846() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,-1,0,-1,-1,0,4,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7847() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,5,1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7848() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,5,1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7849() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,2,0,-1,-1,0,4,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7850() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,1,4,-1,-1,0,5,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7851() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,0,6,1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7852() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,5,-1,0,6,1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7853() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,0,6,1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7854() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,0,0,1,-1,-1,-1,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7855() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,0,5,1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7856() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,0,1,-1,5,6,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7857() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,2,4,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7858() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,0,0,1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7859() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,0,4,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7860() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,0,-1,-1,0,5,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7861() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,0,5,1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7862() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,1,-1,-1,-1,-1,-1,7,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7863() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,0,1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7864() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,2,-1,0,0,1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7865() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,-1,-1,0,4,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7866() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,5,1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7867() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7868() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,0,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7869() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,0,0,1,-1,-1,-1,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7870() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,-1,4,-1,-1,0,5,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7871() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,5,1,-1,2,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7872() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,5,-1,6,0,1,-1,-1,-1,-1,-1,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7873() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,4,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7874() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,8,1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7875() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7876() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,0,-1,6,7,1,-1,-1,-1,-1,-1,0,-1,-1,-1,0,0,3,-1,0,8,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7877() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,0,-1,-1,4,5,1,-1,0,0,3,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7878() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,8,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7879() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,0,0,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7880() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,0,6,3,-1,7,-1,-1,-1,-1,-1,-1,-1,0,3,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7881() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,6,3,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7882() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,2,-1,-1,-1,0,7,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7883() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,6,7,1,-1,0,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7884() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,7,-1,-1,-1,0,8,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7885() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,4,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7886() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,1,-1,-1,4,5,1,-1,0,6,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7887() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,6,7,1,-1,0,-1,-1,-1,-1,-1,-1,-1,0,5,3,-1,0,8,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7888() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,4,0,-1,-1,0,7,3,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7889() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,4,1,-1,6,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7890() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,3,-1,8,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7891() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,6,3,-1,7,0,3,-1,-1,-1,-1,-1,1,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7892() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,4,-1,0,6,3,-1,7,0,3,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7893() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,-1,4,-1,-1,5,0,1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7894() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,0,-1,-1,4,5,1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7895() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,0,7,-1,-1,0,0,3,-1,0,0,-1,-1,3,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7896() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,6,7,1,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7897() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,4,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7898() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7899() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,3,-1,-1,4,5,1,-1,0,0,3,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7900() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,8,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7901() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7902() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,3,-1,5,6,1,-1,0,-1,-1,-1,0,0,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7903() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,0,3,-1,6,0,3,-1,4,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7904() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,0,3,-1,6,7,3,-1,1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7905() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,0,-1,0,0,3,-1,6,7,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7906() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,0,-1,-1,0,5,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7907() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,0,6,3,-1,7,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7908() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,4,6,1,-1,0,7,3,-1,-1,-1,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7909() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,5,-1,-1,0,7,3,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7910() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,6,0,-1,-1,0,7,3,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7911() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,3,-1,5,6,1,-1,0,-1,-1,-1,0,7,3,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7912() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,2,-1,-1,0,7,3,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7913() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,6,3,-1,7,0,7,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7914() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,6,3,-1,7,0,3,-1,-1,-1,-1,-1,5,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7915() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,0,1,-1,6,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7916() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,6,0,1,-1,7,0,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7917() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,5,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7918() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,0,-1,5,6,1,-1,0,-1,-1,-1,0,0,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7919() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,-1,0,-1,-1,4,5,1,-1,0,0,3,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7920() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,4,6,1,-1,0,0,3,-1,-1,-1,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7921() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,6,-1,-1,-1,0,0,3,-1,8,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7922() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,0,-1,0,0,3,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7923() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,2,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7924() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,5,-1,0,0,3,-1,6,7,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7925() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,4,-1,0,6,3,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7926() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,6,4,1,-1,0,0,-1,-1,-1,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7927() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,6,-1,-1,0,7,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7928() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,3,-1,-1,4,5,1,-1,0,6,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7929() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,3,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7930() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,6,4,1,-1,0,7,-1,-1,0,0,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7931() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,4,3,-1,0,8,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7932() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,4,1,-1,6,0,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7933() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,0,7,3,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7934() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,0,-1,-1,4,5,1,-1,0,6,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7935() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,6,3,-1,7,0,3,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7936() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,6,3,-1,7,0,3,-1,-1,-1,-1,-1,3,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7937() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,4,0,1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7938() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,0,-1,-1,5,0,1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7939() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,4,-1,-1,5,0,1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7940() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7941() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,0,1,-1,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7942() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,1,-1,6,0,1,-1,-1,-1,-1,-1,0,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7943() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7944() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,0,-1,-1,4,5,1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7945() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,2,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7946() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,3,0,-1,-1,0,0,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7947() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,1,-1,-1,0,0,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7948() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,0,3,-1,6,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7949() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,3,-1,0,6,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7950() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7951() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,4,1,-1,0,0,-1,-1,0,6,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7952() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,0,7,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7953() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,4,5,1,-1,0,6,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7954() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,6,3,-1,7,8,7,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7955() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,2,4,-1,-1,5,0,1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7956() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,6,0,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7957() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,5,6,1,-1,0,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7958() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7959() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7960() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,4,1,-1,8,0,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7961() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,0,3,-1,6,7,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7962() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,0,-1,-1,0,7,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7963() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,0,7,3,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7964() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,6,3,-1,7,8,3,-1,-1,-1,-1,-1,5,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7965() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,3,-1,-1,4,0,1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7966() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,0,1,-1,6,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,0,4,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7967() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,0,3,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7968() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7969() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,-1,-1,4,5,1,-1,0,0,3,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7970() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,0,0,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7971() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7972() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,4,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7973() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,0,0,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7974() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,5,-1,-1,0,0,3,-1,8,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7975() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,7,-1,-1,0,0,3,-1,8,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7976() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,0,3,-1,6,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7977() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,4,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7978() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,0,7,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7979() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,0,-1,-1,4,5,1,-1,0,6,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7980() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,6,3,-1,7,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7981() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,6,3,-1,7,8,3,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7982() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7983() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,-1,-1,-1,-1,7,3,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7984() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,4,1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7985() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,4,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7986() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,8,0,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7987() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,8,0,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7988() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,5,-1,0,0,3,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7989() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7990() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,3,-1,-1,-1,0,0,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7991() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,7,-1,-1,0,0,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7992() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7993() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,4,1,-1,0,0,-1,-1,0,6,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7994() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,6,-1,-1,-1,0,7,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7995() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,1,-1,-1,-1,0,8,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7996() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,6,3,-1,7,8,6,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7997() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,0,1,-1,6,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7998() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,4,1,-1,5,0,1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest7999() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,0,4,1,-1,5,0,1,-1,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8000() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,6,0,1,-1,-1,-1,-1,-1,0,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8001() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8002() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,0,8,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8003() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,0,8,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8004() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,0,0,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8005() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,6,3,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8006() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8007() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,3,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8008() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,0,-1,-1,0,7,3,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8009() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,1,0,-1,-1,4,5,1,-1,0,6,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8010() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,6,7,1,-1,0,-1,-1,-1,-1,-1,-1,-1,8,0,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest8011() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,5,-1,-1,-1,7,0,3,-1,0,8,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8012() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,6,0,-1,-1,7,0,3,-1,8,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8013() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,1,-1,-1,4,5,1,-1,6,0,3,-1,7,8,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8014() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,0,3,-1,7,0,0,-1,0,0,4,-1,-1,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8015() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,6,-1,7,6,3,-1,0,-1,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8016() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,7,3,-1,0,5,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8017() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,3,-1,6,7,3,-1,0,8,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8018() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,6,-1,7,6,3,-1,8,0,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8019() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,1,-1,-1,4,5,1,-1,6,7,3,-1,8,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8020() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,0,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest8021() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,2,-1,-1,7,0,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8022() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,6,-1,-1,7,0,3,-1,0,8,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8023() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,1,-1,-1,7,0,3,-1,0,8,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8024() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,6,5,1,-1,0,-1,-1,-1,0,7,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest8025() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,3,-1,8,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8026() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,2,0,-1,-1,7,0,3,-1,8,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8027() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,6,7,1,-1,0,-1,-1,-1,0,0,6,-1,5,0,3,-1,8,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8028() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,0,3,-1,7,8,6,-1,0,0,4,-1,-1,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8029() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,7,3,-1,0,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8030() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,5,3,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8031() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,3,-1,-1,5,0,3,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8032() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,5,0,-1,-1,7,0,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8033() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,5,-1,6,0,3,-1,0,7,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8034() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,3,-1,-1,7,0,3,-1,0,8,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8035() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,1,0,-1,-1,7,0,3,-1,8,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8036() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,3,-1,8,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8037() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,5,-1,-1,-1,7,0,3,-1,8,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8038() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,0,3,-1,7,0,3,-1,0,0,4,-1,7,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8039() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,7,3,-1,8,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8040() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,4,5,1,-1,6,7,3,-1,0,8,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8041() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,0,-1,-1,4,5,1,-1,6,7,3,-1,0,8,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8042() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,0,3,-1,1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8043() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,6,-1,7,0,3,-1,6,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8044() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8045() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,8,0,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest8046() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,0,0,-1,-1,7,0,3,-1,0,8,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8047() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,4,1,-1,0,6,-1,-1,7,0,3,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8048() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,6,7,1,-1,0,-1,-1,-1,0,0,6,-1,5,0,3,-1,0,8,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8049() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,7,-1,-1,7,0,3,-1,8,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8050() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,0,3,-1,7,0,3,-1,0,0,4,-1,1,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8051() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,0,3,-1,7,8,7,-1,0,0,4,-1,-1,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8052() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,3,-1,6,7,3,-1,0,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8053() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,7,3,-1,8,-1,-1,-1,0,0,4,-1,0,0,-1,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8054() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,6,7,1,-1,0,-1,-1,-1,0,0,6,-1,5,8,3,-1,0,0,-1,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8055() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8056() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,6,-1,7,6,3,-1,0,8,-1,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8057() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,5,-1,-1,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8058() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,5,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8059() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,5,0,3,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8060() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,0,3,-1,7,-1,-1,-1,0,0,4,-1,0,6,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8061() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,7,-1,-1,-1,7,0,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8062() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,7,0,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8063() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,4,-1,-1,-1,7,0,3,-1,0,8,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8064() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,0,3,-1,7,8,3,-1,0,0,4,-1,-1,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8065() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,7,-1,-1,8,7,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest8066() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,4,-1,6,7,3,-1,8,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8067() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,7,3,-1,8,0,3,-1,0,0,4,-1,0,0,-1,-1,5,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8068() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,5,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8069() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,5,-1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8070() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,4,5,1,-1,6,0,3,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8071() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,6,0,-1,-1,7,0,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8072() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,2,0,-1,-1,4,5,1,-1,6,0,3,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8073() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,4,-1,-1,7,0,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8074() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,6,-1,7,0,3,-1,0,8,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8075() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,2,-1,-1,-1,7,0,3,-1,8,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8076() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,-1,0,-1,-1,4,5,1,-1,6,7,3,-1,0,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8077() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,6,4,1,-1,0,0,-1,-1,-1,-1,-1,-1,7,8,3,-1,0,0,6,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8078() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,7,3,-1,8,0,8,-1,0,0,4,-1,0,0,-1,-1,-1,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8079() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,6,-1,6,0,3,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8080() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8081() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,0,-1,-1,4,5,1,-1,6,0,3,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8082() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,-1,0,-1,-1,4,5,1,-1,6,0,3,-1,7,8,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8083() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,2,-1,-1,7,0,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8084() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,2,-1,-1,-1,7,0,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8085() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,8,-1,-1,8,0,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest8086() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,3,-1,8,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8087() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,6,7,1,-1,0,-1,-1,-1,-1,-1,-1,-1,8,0,3,-1,5,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest8088() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,6,4,1,-1,7,0,-1,-1,0,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest8089() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,2,-1,6,7,3,-1,8,0,3,-1,0,0,4,-1,0,0,-1,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8090() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,4,0,-1,-1,7,0,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8091() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,6,4,1,-1,0,0,-1,-1,0,0,-1,-1,7,0,3,-1,0,0,6,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8092() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,3,-1,6,0,3,-1,0,7,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8093() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,4,6,1,-1,7,0,3,-1,0,0,-1,-1,0,8,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8094() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,6,-1,-1,7,0,3,-1,8,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8095() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,7,0,-1,-1,7,0,3,-1,8,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8096() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,5,0,-1,-1,7,0,3,-1,8,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8097() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,0,3,-1,7,0,-1,-1,0,0,4,-1,-1,4,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8098() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,0,3,-1,7,8,-1,-1,0,0,4,-1,-1,2,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8099() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,0,3,-1,7,8,-1,-1,0,0,4,-1,-1,1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8100() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,7,3,-1,8,0,3,-1,0,0,4,-1,0,0,-1,-1,1,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8101() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,4,1,-1,0,5,1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8102() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,0,1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8103() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,0,4,1,-1,0,0,1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8104() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,0,6,1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8105() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,-1,4,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8106() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,0,1,-1,5,6,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8107() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8108() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,6,-1,0,0,1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8109() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,5,1,-1,6,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8110() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,6,-1,0,7,1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8111() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,0,0,1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8112() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,0,0,1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8113() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,-1,-1,0,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8114() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,0,4,1,-1,0,0,1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8115() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,0,1,-1,-1,-1,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8116() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,5,1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8117() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,0,1,-1,2,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8118() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,0,6,1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8119() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,0,6,1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8120() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,0,0,1,-1,-1,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8121() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,0,5,1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8122() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,0,5,1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8123() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,0,6,1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8124() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8125() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,0,1,-1,4,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8126() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,0,1,-1,-1,-1,-1,-1,5,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8127() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,3,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8128() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,-1,-1,7,8,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8129() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,5,-1,0,0,3,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8130() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,4,5,1,-1,0,0,3,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8131() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,2,-1,-1,0,0,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8132() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,-1,-1,7,4,1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8133() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,0,-1,-1,4,5,1,-1,0,0,3,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8134() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,0,3,-1,6,7,3,-1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8135() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,6,3,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8136() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,6,3,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8137() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,3,-1,-1,0,7,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8138() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,4,5,1,-1,0,6,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8139() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,0,-1,0,6,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8140() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,4,-1,0,6,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8141() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,6,3,-1,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8142() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,0,1,-1,1,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8143() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,5,-1,6,0,1,-1,-1,-1,-1,-1,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8144() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,5,1,-1,6,0,1,-1,-1,-1,-1,-1,7,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8145() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8146() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8147() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,3,-1,-1,-1,0,0,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8148() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,7,-1,-1,0,0,3,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8149() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,6,-1,-1,0,0,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8150() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,0,-1,-1,-1,0,0,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8151() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,6,-1,0,7,3,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8152() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,4,5,1,-1,0,6,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8153() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,4,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8154() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,3,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8155() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,0,7,3,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8156() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,6,7,1,-1,0,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,5,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8157() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,6,3,-1,7,0,3,-1,-1,-1,-1,-1,4,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8158() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,-1,-1,4,0,1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8159() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,0,3,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8160() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,4,7,1,-1,0,0,3,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8161() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,8,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8162() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,-1,-1,4,7,1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8163() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,-1,-1,7,8,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,0,4,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8164() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,8,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,4,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8165() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,0,0,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8166() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,0,3,-1,6,0,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8167() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,0,-1,0,6,3,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8168() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,5,-1,-1,-1,0,8,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8169() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,4,-1,6,7,1,-1,-1,-1,-1,-1,0,-1,-1,-1,0,8,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8170() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,-1,0,-1,-1,4,5,1,-1,0,6,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8171() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,0,1,-1,0,6,-1,-1,0,0,3,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8172() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,0,0,3,-1,6,-1,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8173() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8174() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8175() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,8,7,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8176() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8177() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,2,-1,-1,0,0,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8178() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,4,5,1,-1,0,0,3,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8179() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8180() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,0,-1,0,0,3,-1,6,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8181() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,0,4,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8182() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,1,-1,-1,0,7,3,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8183() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,6,-1,0,7,3,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8184() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,4,-1,0,6,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8185() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,0,7,3,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8186() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,0,1,-1,0,6,-1,-1,0,0,3,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8187() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,4,6,1,-1,0,0,3,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8188() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,4,1,-1,0,6,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8189() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,5,-1,0,0,3,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8190() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,3,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8191() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,0,3,-1,6,7,7,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8192() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,2,-1,-1,0,7,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8193() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,3,-1,-1,0,7,3,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8194() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,3,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8195() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,0,7,3,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8196() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,0,1,-1,0,6,-1,-1,0,0,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8197() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,0,1,-1,5,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8198() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,0,1,-1,-1,-1,-1,-1,1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8199() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,0,1,-1,-1,-1,-1,-1,7,4,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8200() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,5,1,-1,6,0,1,-1,-1,-1,-1,-1,7,8,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8201() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,4,1,-1,7,8,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8202() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,6,-1,0,0,3,-1,6,7,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8203() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,1,0,-1,-1,0,7,3,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8204() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,2,0,-1,-1,4,5,1,-1,0,6,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8205() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,0,-1,0,6,3,-1,7,0,3,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8206() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8207() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,-1,0,-1,-1,4,0,1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8208() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,0,1,-1,6,7,-1,-1,0,0,3,-1,-1,-1,-1,-1,0,1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8209() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,6,0,1,-1,-1,-1,-1,-1,7,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8210() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,4,5,1,-1,6,0,1,-1,-1,-1,-1,-1,7,8,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8211() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8212() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,5,-1,6,7,1,-1,-1,-1,-1,-1,0,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8213() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,8,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8214() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,6,-1,-1,0,0,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8215() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,6,7,1,-1,0,0,-1,-1,-1,-1,-1,-1,0,0,3,-1,0,8,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8216() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,3,-1,0,8,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8217() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,0,8,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8218() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,0,0,3,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8219() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,7,0,-1,-1,0,0,3,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8220() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8221() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,5,6,1,-1,0,-1,-1,-1,0,0,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8222() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,0,6,3,-1,7,-1,-1,-1,-1,-1,-1,-1,0,2,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8223() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8224() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,7,-1,-1,0,8,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8225() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,4,1,-1,6,7,1,-1,0,0,-1,-1,-1,-1,-1,-1,0,8,3,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8226() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,5,-1,0,6,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8227() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,0,6,3,-1,7,8,3,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8228() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,0,1,-1,2,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8229() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,0,1,-1,-1,-1,-1,-1,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8230() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,0,0,3,-1,6,-1,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8231() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,0,0,-1,-1,0,0,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8232() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,7,0,-1,-1,0,0,3,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8233() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,5,-1,-1,0,0,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8234() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,4,-1,-1,-1,0,0,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8235() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,6,-1,0,7,3,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8236() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,7,-1,-1,0,7,3,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8237() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,6,3,-1,7,0,8,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8238() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8239() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,4,0,1,-1,0,0,3,-1,-1,-1,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8240() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,7,0,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8241() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,0,7,-1,-1,0,0,3,-1,0,0,-1,-1,8,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8242() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,0,-1,-1,-1,0,0,3,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8243() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8244() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,0,3,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8245() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,5,-1,6,7,1,-1,-1,-1,-1,-1,0,-1,-1,-1,0,0,3,-1,8,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8246() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,6,3,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8247() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,-1,-1,7,4,1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8248() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,3,0,-1,-1,0,7,3,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8249() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,0,-1,-1,4,5,1,-1,0,6,3,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8250() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,0,7,3,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8251() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,6,3,-1,7,8,3,-1,-1,-1,-1,-1,7,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8252() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,2,-1,6,0,3,-1,7,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8253() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,7,0,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8254() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,5,-1,-1,6,7,1,-1,0,0,6,-1,-1,-1,-1,-1,4,0,3,-1,0,8,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8255() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,7,0,-1,-1,8,0,3,-1,0,7,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest8256() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,5,-1,5,6,1,-1,0,-1,-1,-1,7,0,3,-1,0,8,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8257() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,3,-1,8,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8258() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,3,-1,5,6,1,-1,0,-1,-1,-1,7,0,3,-1,8,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8259() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,0,0,5,-1,4,0,3,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8260() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,1,0,-1,-1,4,5,1,-1,6,0,3,-1,7,8,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8261() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,0,-1,6,0,3,-1,7,8,3,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8262() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,5,6,2,-1,0,0,4,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8263() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,7,3,-1,3,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8264() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,5,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8265() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,1,-1,-1,0,-1,-1,4,5,1,-1,6,7,3,-1,0,8,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8266() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,5,4,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8267() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,5,-1,6,7,1,-1,-1,-1,-1,-1,0,-1,-1,-1,8,0,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest8268() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,3,0,-1,-1,7,0,3,-1,8,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8269() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,6,-1,-1,7,0,3,-1,8,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8270() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,0,3,-1,7,0,3,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8271() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,0,3,-1,7,8,3,-1,0,0,4,-1,5,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8272() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,0,3,-1,7,8,3,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8273() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,6,7,1,-1,0,0,-1,-1,-1,-1,-1,-1,8,4,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest8274() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,7,-1,-1,7,0,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8275() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,3,-1,-1,8,0,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest8276() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,6,7,1,-1,-1,-1,-1,-1,0,0,-1,-1,8,0,3,-1,0,4,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest8277() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,0,5,1,-1,6,4,1,-1,0,7,-1,-1,0,0,-1,-1,8,0,3,-1,-1,-1,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest8278() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,0,3,-1,7,5,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8279() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,4,-1,6,0,3,-1,7,0,3,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8280() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,0,-1,-1,5,6,3,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8281() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,4,0,-1,-1,5,4,1,-1,0,0,-1,-1,6,7,3,-1,0,0,5,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8282() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,0,3,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8283() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,4,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,0,3,-1,0,0,-1,-1,0,0,6,-1"));
    }

    @Test
    public void TreeSetSolverTest8284() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,0,3,-1,7,7,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8285() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,5,6,-1,-1,0,0,4,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8286() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,4,0,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8287() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,0,-1,-1,4,6,1,-1,7,8,3,-1,-1,-1,-1,-1,0,0,-1,-1,0,0,4,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8288() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,7,-1,-1,-1,8,7,3,-1,0,0,-1,-1,0,0,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest8289() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,5,-1,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8290() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,4,-1,6,0,3,-1,7,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8291() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,0,-1,-1,7,0,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8292() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,6,-1,-1,7,0,3,-1,0,8,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8293() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,6,-1,6,0,3,-1,7,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8294() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,1,-1,-1,7,0,3,-1,8,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8295() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,0,4,1,-1,5,6,1,-1,0,0,-1,-1,7,0,3,-1,8,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8296() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,2,-1,-1,5,6,3,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8297() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,7,3,-1,0,3,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8298() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,3,-1,6,7,3,-1,0,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8299() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,1,-1,5,6,1,-1,0,4,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8300() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,7,3,-1,8,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,2,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8301() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,5,6,1,-1,7,8,1,-1,0,0,7,-1,-1,-1,-1,-1,0,0,-1,-1,4,0,3,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8302() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,3,-1,0,4,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8303() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,5,-1,-1,7,0,3,-1,8,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8304() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,4,-1,-1,4,5,1,-1,6,0,3,-1,7,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8305() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,0,3,-1,7,1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8306() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,6,-1,7,0,3,-1,6,8,3,-1,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8307() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,7,3,-1,8,-1,-1,-1,0,0,4,-1,0,0,-1,-1,0,7,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8308() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,4,5,1,-1,6,7,3,-1,0,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8309() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,0,4,-1,-1,5,6,1,-1,3,-1,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8310() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,2,0,-1,-1,4,5,1,-1,6,7,3,-1,0,8,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8311() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,5,6,2,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8312() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,0,3,-1,7,-1,-1,-1,0,0,4,-1,0,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8313() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,4,1,-1,0,0,-1,-1,6,0,3,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8314() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,4,-1,-1,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8315() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,2,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,3,-1,0,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8316() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,1,0,-1,-1,7,0,3,-1,0,8,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8317() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,7,3,-1,7,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8318() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,1,-1,-1,7,8,3,-1,0,0,-1,-1,0,0,5,-1,0,0,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8319() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,0,0,-1,-1,7,0,3,-1,8,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8320() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,6,-1,7,0,3,-1,8,0,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8321() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,5,0,2,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8322() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,6,-1,6,7,3,-1,8,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8323() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,1,-1,6,7,3,-1,8,-1,-1,-1,0,0,4,-1,0,0,-1,-1,0,8,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8324() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,0,-1,6,7,3,-1,8,-1,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8325() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,2,-1,6,7,3,-1,0,0,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8326() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,1,0,-1,-1,4,5,1,-1,6,7,3,-1,0,8,-1,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8327() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,3,-1,-1,4,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,3,-1,0,8,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8328() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,7,-1,-1,8,0,3,-1,0,7,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
    }

    @Test
    public void TreeSetSolverTest8329() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,0,-1,-1,4,-1,-1,5,6,1,-1,-1,7,-1,-1,7,0,3,-1,0,8,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8330() {
        assertEquals(true, symKorat.isSat("1,1,-1,2,3,0,-1,4,0,-1,-1,5,6,1,-1,-1,-1,-1,-1,7,0,3,-1,8,0,-1,-1,0,0,5,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8331() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,-1,-1,6,0,3,-1,7,0,3,-1,0,0,4,-1,4,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8332() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,3,-1,-1,-1,-1,-1,-1,4,5,4,-1,6,0,3,-1,7,8,3,-1,0,0,4,-1,0,0,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8333() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,4,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }

    @Test
    public void TreeSetSolverTest8334() {
        assertEquals(false, symKorat.isSat("1,1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,4,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
    }
}
