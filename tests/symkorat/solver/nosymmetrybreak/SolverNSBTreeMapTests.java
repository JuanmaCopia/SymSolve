package symkorat.solver.nosymmetrybreak;

import static org.junit.Assert.assertEquals;

import org.junit.Test;

import symsolve.SymSolve;
import symsolve.explorers.impl.SymmetryBreakStrategy;

public class SolverNSBTreeMapTests {

        private SymSolve symKorat = new SymSolve("symkorat.examples.treemap.TreeMap", "8",
                        SymmetryBreakStrategy.NO_SYMMETRY_BREAK);

        @Test
        public void TreeMapSolverTest0() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,0,3,-1,-1,-1,0,4,2,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,-1,-1,4,-1,-1,-1,0,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,-1,0,4,-1,-1,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,2,-1,-1,-1,3,-1,1,-1,-1,4,5,2,-1,-1,0,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,-1,3,-1,-1,-1,4,5,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,4,5,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,3,1,-1,-1,4,5,2,-1,-1,-1,-1,-1,-1,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,4,0,-1,-1,-1,0,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,-1,1,-1,-1,4,5,2,-1,-1,0,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,-1,1,-1,-1,-1,0,4,-1,-1,3,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,0,-1,-1,-1,0,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,0,-1,-1,-1,4,0,2,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,4,0,2,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,-1,3,-1,-1,-1,-1,4,-1,-1,-1,0,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,-1,3,-1,-1,-1,4,5,6,-1,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,0,1,-1,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,-1,3,4,-1,-1,5,4,2,-1,-1,-1,-1,-1,-1,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest1() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,1,4,-1,-1,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,3,-1,-1,-1,0,4,2,-1,-1,0,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,4,5,4,-1,-1,-1,-1,-1,-1,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,4,5,6,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,3,-1,-1,-1,-1,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,4,5,2,-1,-1,-1,-1,-1,-1,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,4,5,4,-1,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,0,2,-1,-1,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,-1,-1,-1,-1,5,6,1,-1,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,4,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,-1,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,3,-1,-1,-1,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,3,-1,-1,-1,-1,-1,-1,-1,0,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,1,-1,-1,-1,-1,6,0,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,0,4,-1,-1,-1,2,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,4,5,2,-1,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,-1,-1,-1,-1,4,-1,1,-1,-1,5,6,3,-1,-1,-1,-1,-1,-1,-1,0,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest2() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,7,-1,-1,8,0,2,-1,-1,7,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,1,-1,-1,-1,4,0,2,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,6,0,2,-1,-1,7,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,3,-1,-1,5,0,2,-1,-1,6,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,0,2,-1,-1,2,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,1,-1,-1,-1,-1,6,0,2,-1,-1,0,7,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,0,2,-1,-1,0,8,-1,-1,-1,-1,2,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,4,-1,-1,-1,6,0,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,2,-1,-1,0,8,-1,-1,-1,0,1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,0,-1,-1,5,0,2,-1,-1,0,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,6,0,2,-1,-1,7,8,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,2,-1,-1,-1,3,4,1,-1,-1,5,6,2,-1,-1,7,0,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,6,0,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,-1,4,-1,-1,-1,-1,0,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,4,-1,-1,-1,6,0,2,-1,-1,0,7,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,3,-1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,6,5,2,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,-1,4,4,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,4,2,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest3() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,0,0,5,-1,-1,4,8,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,7,-1,-1,7,0,2,-1,-1,0,8,-1,-1,-1,-1,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,1,-1,-1,-1,6,0,2,-1,-1,7,8,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,0,2,-1,-1,6,3,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,0,5,-1,-1,4,0,2,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,0,2,-1,-1,6,7,1,-1,-1,0,0,3,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,-1,4,0,1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,1,-1,-1,-1,3,4,1,-1,-1,5,0,2,-1,-1,6,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,8,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,5,6,2,-1,-1,7,-1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,6,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,8,0,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,0,5,-1,-1,4,7,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,6,0,2,-1,-1,7,8,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,8,0,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,2,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,5,6,2,-1,-1,7,-1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,0,2,-1,-1,0,0,-1,-1,-1,1,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,6,0,2,-1,-1,7,3,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest4() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,0,2,-1,-1,0,8,-1,-1,-1,-1,7,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,6,7,2,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,4,-1,-1,-1,-1,6,0,2,-1,-1,0,7,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,6,-1,-1,-1,-1,0,7,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,2,-1,-1,5,6,2,-1,-1,0,7,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,0,-1,-1,-1,3,4,1,-1,-1,5,0,2,-1,-1,6,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,8,0,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,0,2,-1,-1,6,0,-1,-1,-1,0,0,3,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,0,-1,-1,5,0,2,-1,-1,6,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,4,-1,-1,5,0,2,-1,-1,6,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,5,6,2,-1,-1,0,7,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,8,0,2,-1,-1,0,0,-1,-1,-1,2,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,0,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,8,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,2,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,4,-1,-1,-1,-1,6,7,2,-1,-1,0,8,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,5,6,2,-1,-1,7,0,2,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,0,2,-1,-1,0,8,-1,-1,-1,8,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,0,4,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,0,-1,-1,5,0,2,-1,-1,6,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest5() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,0,0,5,-1,-1,4,0,2,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,5,0,2,-1,-1,0,6,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,2,-1,-1,8,0,-1,-1,-1,3,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,0,3,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,0,2,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,2,-1,-1,5,0,2,-1,-1,6,7,2,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,5,0,2,-1,-1,6,-1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,6,7,2,-1,-1,0,8,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,5,-1,-1,7,0,2,-1,-1,0,8,-1,-1,-1,-1,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,0,6,-1,-1,-1,0,7,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,6,-1,-1,7,0,2,-1,-1,0,8,-1,-1,-1,-1,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,2,-1,-1,8,0,-1,-1,-1,0,8,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,4,-1,-1,5,6,2,-1,-1,0,7,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,8,2,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,0,2,-1,-1,6,7,2,-1,-1,0,0,3,-1,-1,3,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,5,-1,-1,7,0,2,-1,-1,8,0,-1,-1,-1,-1,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,-1,4,-1,-1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,-1,4,5,0,-1,-1,0,0,3,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,0,2,-1,-1,8,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,5,-1,-1,-1,7,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest6() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,8,2,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,2,-1,-1,5,0,2,-1,-1,0,6,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,0,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,2,-1,-1,0,0,-1,-1,-1,0,4,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,0,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,0,2,-1,-1,8,4,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,0,2,-1,-1,6,0,-1,-1,-1,0,0,3,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,0,2,-1,-1,6,0,-1,-1,-1,0,0,3,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,0,2,-1,-1,6,7,-1,-1,-1,0,0,3,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,0,2,-1,-1,0,2,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,1,-1,-1,-1,7,0,2,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,6,0,2,-1,-1,0,7,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,1,-1,-1,-1,-1,6,7,2,-1,-1,0,8,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,0,4,-1,-1,3,6,2,-1,-1,7,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,-1,4,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,5,0,2,-1,-1,6,-1,-1,-1,-1,0,0,3,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,0,2,-1,-1,0,3,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,8,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1"));
        }

        @Test
        public void TreeMapSolverTest7() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,6,0,2,-1,-1,7,8,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,-1,4,5,-1,-1,-1,0,0,3,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,8,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,2,-1,-1,0,0,-1,-1,-1,4,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,2,-1,-1,0,0,-1,-1,-1,0,8,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,6,0,2,-1,-1,7,5,2,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,0,2,-1,-1,8,0,-1,-1,-1,8,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,3,-1,-1,5,0,2,-1,-1,6,0,2,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,3,-1,-1,5,0,2,-1,-1,6,7,2,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,5,0,2,-1,-1,6,0,2,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,6,3,2,-1,-1,7,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,2,-1,-1,5,0,2,-1,-1,6,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,5,0,2,-1,-1,6,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,2,-1,-1,-1,6,0,2,-1,-1,7,8,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,5,6,2,-1,-1,7,-1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,0,-1,-1,-1,3,4,1,-1,-1,5,6,2,-1,-1,7,0,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,6,0,2,-1,-1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,0,2,-1,-1,6,0,-1,-1,-1,0,0,3,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,0,0,5,-1,-1,4,0,2,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,8,0,2,-1,-1,0,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1"));
        }

        @Test
        public void TreeMapSolverTest8() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,6,0,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,6,0,2,-1,-1,5,7,2,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,0,-1,-1,-1,-1,6,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,2,-1,-1,6,8,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,0,4,-1,-1,3,0,2,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,5,6,2,-1,-1,7,-1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,4,1,-1,-1,5,6,2,-1,-1,7,0,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,7,-1,-1,8,0,2,-1,-1,0,7,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,3,-1,-1,-1,7,0,2,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,0,2,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,8,0,2,-1,-1,0,0,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,-1,4,0,4,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,0,2,-1,-1,8,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,-1,4,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,6,7,2,-1,-1,0,8,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,5,0,2,-1,-1,6,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,4,1,-1,-1,0,5,2,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,6,0,2,-1,-1,7,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,0,2,-1,-1,0,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest9() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,2,-1,-1,0,8,-1,-1,-1,4,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,7,3,-1,-1,0,0,3,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,1,-1,-1,-1,0,7,2,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,7,-1,-1,-1,0,0,3,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,2,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,4,-1,-1,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,0,6,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,5,-1,-1,-1,-1,0,6,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,0,6,2,-1,-1,7,8,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,8,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,2,-1,-1,0,0,-1,-1,-1,3,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,1,-1,-1,-1,-1,0,6,2,-1,-1,7,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,5,-1,-1,-1,0,7,2,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,8,-1,-1,-1,0,0,5,-1,-1,0,4,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,1,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,2,-1,-1,-1,-1,0,6,2,-1,-1,7,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,2,-1,-1,0,0,-1,-1,-1,7,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,2,-1,-1,0,5,2,-1,-1,6,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest10() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,0,5,2,-1,-1,0,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,7,2,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,4,1,-1,-1,0,5,2,-1,-1,6,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,7,2,-1,-1,0,8,-1,-1,-1,-1,4,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,0,5,2,-1,-1,6,-1,-1,-1,-1,0,0,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,0,5,2,-1,-1,6,-1,-1,-1,-1,0,0,3,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,4,-1,-1,-1,6,7,2,-1,-1,8,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,4,-1,-1,5,6,2,-1,-1,7,0,2,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,0,5,2,-1,-1,6,-1,-1,-1,-1,0,0,3,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,3,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,0,6,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,2,-1,-1,0,8,-1,-1,-1,0,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,2,-1,-1,0,8,-1,-1,-1,8,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,7,2,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,6,2,-1,-1,0,8,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,3,-1,-1,0,5,2,-1,-1,0,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,1,-1,-1,-1,3,4,1,-1,-1,0,5,2,-1,-1,6,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,6,-1,-1,-1,0,7,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,6,7,2,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest11() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,0,6,2,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,3,-1,-1,5,6,2,-1,-1,7,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,-1,4,5,-1,-1,-1,-1,4,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,0,6,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,5,6,2,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,7,2,-1,-1,0,0,-1,-1,-1,5,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,0,6,2,-1,-1,0,7,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,0,-1,-1,-1,0,0,3,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,2,-1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,0,5,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,7,2,-1,-1,0,0,-1,-1,-1,-1,6,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,-1,-1,-1,-1,0,0,5,-1,-1,8,4,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,5,6,2,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,-1,-1,4,-1,-1,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,6,5,2,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,4,8,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,4,1,-1,-1,5,6,2,-1,-1,7,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,2,-1,-1,-1,-1,0,6,2,-1,-1,7,8,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,6,-1,-1,-1,0,7,2,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest12() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,0,-1,-1,-1,4,5,2,-1,-1,-1,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,2,-1,-1,-1,6,7,2,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,7,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,2,-1,-1,5,6,2,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,4,2,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,8,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,5,-1,-1,-1,-1,6,7,2,-1,-1,8,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,5,6,2,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,6,7,2,-1,-1,0,3,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,0,8,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,0,-1,-1,0,5,2,-1,-1,6,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,8,-1,-1,0,8,2,-1,-1,0,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,0,-1,-1,-1,3,4,1,-1,-1,0,5,2,-1,-1,6,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,-1,-1,4,-1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,7,2,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,4,-1,-1,-1,-1,-1,-1,-1,-1,0,8,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
        }

        @Test
        public void TreeMapSolverTest13() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,4,-1,-1,-1,-1,6,7,2,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,3,-1,-1,0,5,2,-1,-1,0,6,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,7,2,-1,-1,8,0,-1,-1,-1,2,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,1,-1,-1,-1,-1,6,7,2,-1,-1,8,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,4,-1,-1,-1,0,6,2,-1,-1,7,8,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,0,5,-1,-1,0,4,2,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,2,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,4,-1,-1,0,5,2,-1,-1,0,6,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,0,6,2,-1,-1,7,8,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,0,-1,-1,5,6,2,-1,-1,7,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,3,1,-1,-1,5,6,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,0,2,-1,-1,0,0,3,-1,-1,4,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,4,-1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,2,-1,-1,4,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,0,-1,-1,5,6,2,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,-1,4,5,-1,-1,-1,5,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,7,-1,-1,-1,0,0,3,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,3,-1,-1,-1,-1,0,6,2,-1,-1,7,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest14() {
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,0,5,2,-1,-1,0,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,-1,-1,4,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,0,6,2,-1,-1,7,8,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,2,-1,-1,0,8,2,-1,-1,0,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,0,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,4,7,2,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,2,-1,-1,-1,0,7,2,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,1,-1,-1,-1,0,7,2,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,8,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,2,-1,-1,-1,3,4,1,-1,-1,0,5,2,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,-1,4,5,1,-1,-1,-1,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,1,-1,-1,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,-1,-1,4,-1,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,4,-1,-1,-1,0,7,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,6,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,4,-1,-1,0,5,2,-1,-1,6,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,0,5,2,-1,-1,0,6,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,0,-1,-1,0,5,2,-1,-1,6,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,2,-1,-1,8,0,-1,-1,-1,1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest15() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,0,4,-1,-1,6,3,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,6,2,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,7,2,-1,-1,0,8,-1,-1,-1,-1,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,5,-1,-1,-1,0,6,2,-1,-1,7,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,0,8,2,-1,-1,0,0,-1,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,0,5,2,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,0,1,-1,-1,0,0,-1,-1,-1,4,8,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,0,8,2,-1,-1,0,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,0,5,2,-1,-1,6,-1,-1,-1,-1,0,0,3,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,-1,4,5,5,-1,-1,-1,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,3,-1,-1,-1,-1,0,6,2,-1,-1,0,7,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,7,-1,-1,-1,0,0,3,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,0,7,2,-1,-1,8,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,3,-1,-1,0,5,2,-1,-1,6,7,2,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,1,-1,-1,-1,4,5,2,-1,-1,-1,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,2,-1,-1,-1,4,5,2,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,2,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,2,-1,-1,8,0,-1,-1,-1,2,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,3,-1,-1,-1,0,6,2,-1,-1,7,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,8,2,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1"));
        }

        @Test
        public void TreeMapSolverTest16() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,3,-1,-1,-1,6,7,2,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,2,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,7,2,-1,-1,0,0,3,-1,-1,3,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,6,2,-1,-1,7,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,-1,-1,4,-1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,5,6,2,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,0,5,2,-1,-1,6,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,3,-1,-1,-1,0,4,2,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,7,-1,-1,-1,0,0,3,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,7,2,-1,-1,0,0,-1,-1,-1,-1,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,8,2,-1,-1,0,0,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,5,-1,-1,-1,0,7,2,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,-1,2,4,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,0,6,2,-1,-1,0,7,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,0,1,-1,-1,0,0,5,-1,-1,0,4,2,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,0,-1,-1,-1,-1,6,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,2,-1,-1,6,8,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,2,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
        }

        @Test
        public void TreeMapSolverTest17() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,6,7,2,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,7,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,0,1,-1,-1,5,-1,-1,-1,-1,0,0,2,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,2,-1,-1,7,8,-1,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,2,-1,-1,0,0,2,-1,-1,5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,0,8,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,4,-1,-1,-1,-1,-1,-1,-1,-1,0,0,2,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,0,2,-1,-1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,7,-1,-1,0,0,2,-1,-1,8,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,0,1,-1,-1,5,-1,-1,-1,-1,0,0,2,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,1,-1,-1,4,6,1,-1,-1,7,8,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,0,2,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,0,2,-1,-1,5,6,-1,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,4,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,1,-1,-1,5,0,-1,-1,-1,0,0,2,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,8,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,6,0,1,-1,-1,0,0,-1,-1,-1,0,7,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest18() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,0,2,-1,-1,0,0,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,0,6,2,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,4,-1,-1,-1,-1,0,6,2,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,5,0,2,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,3,-1,-1,-1,-1,6,0,2,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,7,2,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,8,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,7,2,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,2,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,0,6,2,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,4,1,-1,-1,0,5,2,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,4,-1,-1,-1,-1,0,6,2,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,1,-1,-1,-1,0,7,2,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,0,6,2,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,0,2,-1,-1,0,0,-1,-1,-1,3,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,4,7,-1,-1,-1,-1,-1,-1,-1,-1,8,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,0,5,2,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,0,2,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,0,6,2,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,5,0,2,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest19() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,-1,4,5,-1,-1,-1,-1,6,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,-1,4,5,2,-1,-1,-1,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,3,-1,-1,5,6,2,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,2,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,3,-1,-1,-1,-1,6,7,2,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,3,-1,-1,5,6,2,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,0,2,-1,-1,6,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,0,2,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,2,-1,-1,8,0,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,0,2,-1,-1,8,0,-1,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,0,6,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,2,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,6,0,2,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,8,0,2,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,3,1,-1,-1,5,6,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,5,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,-1,4,5,-1,-1,-1,-1,1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest20() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,1,-1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,2,-1,-1,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,4,-1,-1,-1,-1,6,7,2,-1,-1,8,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,6,5,2,-1,-1,0,7,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,0,-1,-1,-1,-1,0,6,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,2,-1,-1,-1,6,7,2,-1,-1,8,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,5,-1,-1,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,6,7,2,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,6,5,2,-1,-1,7,0,2,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,3,-1,-1,5,6,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,6,2,-1,-1,8,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,6,0,1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,0,-1,-1,-1,4,5,2,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,5,6,2,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,4,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,4,2,-1,-1,0,0,3,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,5,6,2,-1,-1,7,0,2,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,0,5,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,5,6,2,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest21() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,5,-1,-1,-1,6,7,2,-1,-1,8,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,5,6,2,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,5,6,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,6,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,-1,6,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,3,6,2,-1,-1,7,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,6,7,2,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,5,6,2,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,-1,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,5,-1,-1,-1,-1,6,7,2,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,-1,4,5,0,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,6,7,2,-1,-1,8,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,-1,4,5,3,-1,-1,-1,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,3,6,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest22() {
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,5,-1,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,5,6,2,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,0,1,-1,-1,5,-1,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,6,7,2,-1,-1,8,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,7,-1,-1,8,7,2,-1,-1,0,0,-1,-1,-1,-1,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,8,2,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,4,-1,-1,5,6,2,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,4,7,2,-1,-1,8,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,-1,7,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,1,-1,-1,5,6,6,-1,-1,0,0,2,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,6,7,2,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,3,1,-1,-1,5,0,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,-1,5,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,0,1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,0,1,-1,-1,5,-1,-1,-1,-1,0,0,2,-1,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,6,7,2,-1,-1,8,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest23() {
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,0,2,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,0,-1,-1,0,0,2,-1,-1,5,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,0,0,2,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,0,2,-1,-1,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,0,0,2,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,4,-1,-1,0,0,2,-1,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,2,-1,-1,0,7,-1,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,0,2,-1,-1,5,6,0,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,0,8,2,-1,-1,0,0,-1,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,0,2,-1,-1,7,8,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,5,-1,-1,-1,0,0,2,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,0,2,-1,-1,7,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,0,2,-1,-1,5,6,2,-1,-1,3,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,0,5,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,0,1,-1,-1,5,6,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,4,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest24() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,5,0,2,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,7,2,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,2,-1,-1,0,8,-1,-1,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,6,2,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,0,7,2,-1,-1,0,8,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,7,2,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,0,6,2,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,2,-1,-1,0,0,-1,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,0,8,2,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,8,0,2,-1,-1,0,0,-1,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,2,-1,-1,0,5,2,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,0,6,2,-1,-1,7,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,7,2,-1,-1,8,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,2,-1,-1,8,0,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,2,-1,-1,-1,0,7,2,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest25() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,-1,4,5,-1,-1,-1,-1,5,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,2,-1,-1,5,6,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,0,6,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,3,-1,-1,-1,4,5,2,-1,-1,-1,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,6,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,8,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,5,6,2,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,7,0,2,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,0,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,-1,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,7,0,2,-1,-1,0,8,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,4,-1,-1,5,6,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,0,2,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,1,-1,-1,-1,6,0,2,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,-1,4,5,-1,-1,-1,2,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,0,2,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,3,-1,-1,-1,7,0,2,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,0,-1,-1,5,0,2,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,4,-1,-1,5,0,2,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest26() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,2,-1,-1,-1,3,4,1,-1,-1,5,6,2,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,2,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,-1,4,5,-1,-1,-1,-1,2,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,6,7,2,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,5,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,2,-1,-1,0,4,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,-1,4,5,3,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,6,7,2,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,5,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,2,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,8,2,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,6,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,2,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,-1,2,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,4,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,6,7,2,-1,-1,5,0,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,5,-1,-1,-1,6,7,2,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest27() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,0,1,-1,-1,5,-1,-1,-1,-1,0,0,2,-1,-1,6,7,-1,-1,-1,1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,1,-1,-1,5,6,1,-1,-1,0,0,2,-1,-1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,-1,4,5,0,-1,-1,-1,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,1,-1,-1,-1,-1,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,5,6,2,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,2,-1,-1,-1,-1,6,7,2,-1,-1,8,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,5,6,2,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,-1,4,5,4,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,1,-1,-1,5,1,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,6,7,2,-1,-1,8,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,0,1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,1,-1,-1,5,3,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,0,4,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,0,1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,1,-1,-1,5,0,4,-1,-1,0,0,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,0,1,-1,-1,5,-1,-1,-1,-1,0,0,2,-1,-1,6,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest28() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,0,0,2,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,4,1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,1,-1,-1,-1,0,0,2,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,0,-1,-1,0,0,2,-1,-1,8,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,4,-1,-1,0,0,2,-1,-1,7,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,0,2,-1,-1,0,7,-1,-1,-1,1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,5,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,7,0,-1,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,2,-1,-1,7,0,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,0,2,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,0,2,-1,-1,5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,3,-1,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,0,1,-1,-1,5,6,1,-1,-1,0,0,2,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,5,-1,-1,0,0,2,-1,-1,8,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,5,-1,-1,-1,-1,0,0,2,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,0,2,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,4,-1,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,2,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,2,-1,-1,7,8,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,7,0,-1,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest29() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,0,-1,-1,0,5,2,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,2,-1,-1,-1,-1,0,6,2,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,0,6,2,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,0,-1,-1,0,5,2,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,0,5,2,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,0,4,2,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,2,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,1,-1,-1,-1,-1,0,6,2,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,1,-1,-1,-1,0,0,2,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,4,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,6,0,2,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,4,-1,-1,0,5,2,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,7,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,2,-1,-1,0,0,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,0,6,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,8,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,7,2,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,2,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest30() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,0,5,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,1,-1,-1,-1,4,5,2,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,0,3,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,5,6,2,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,5,-1,-1,-1,7,0,2,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,3,6,2,-1,-1,0,7,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,0,2,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,4,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,6,7,2,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,2,-1,-1,-1,7,0,2,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,6,-1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,1,-1,-1,-1,-1,6,0,2,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,2,-1,-1,-1,-1,6,0,2,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,-1,4,5,4,-1,-1,-1,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,5,-1,-1,-1,-1,6,0,2,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest31() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,4,-1,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,5,6,2,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,4,1,-1,-1,5,6,2,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,6,2,-1,-1,8,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,2,-1,-1,-1,-1,6,7,2,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,-1,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,3,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,3,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,6,7,2,-1,-1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,-1,4,5,5,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,-1,4,5,-1,-1,-1,-1,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,0,1,-1,-1,5,-1,-1,-1,-1,0,0,2,-1,-1,6,0,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,1,-1,-1,1,-1,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,6,7,2,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest32() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,4,-1,-1,-1,0,0,2,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,0,2,-1,-1,5,0,2,-1,-1,3,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,2,-1,-1,0,7,-1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,0,2,-1,-1,5,0,3,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,1,-1,-1,5,6,6,-1,-1,0,0,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,0,1,-1,-1,5,6,1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,2,-1,-1,0,7,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,0,6,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,1,-1,-1,5,6,1,-1,-1,0,0,2,-1,-1,3,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,0,5,2,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,2,-1,-1,0,7,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,7,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,2,-1,-1,0,0,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,2,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,1,-1,-1,-1,0,0,2,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest33() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,0,2,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,7,2,-1,-1,0,0,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,3,-1,-1,-1,7,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,8,0,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,6,0,2,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,0,1,-1,-1,-1,-1,-1,-1,-1,4,0,2,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,4,-1,-1,5,6,2,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,3,-1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,2,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,0,2,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,2,-1,-1,0,0,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,8,2,-1,-1,0,0,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,3,-1,-1,5,0,2,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,0,2,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,2,-1,-1,5,0,2,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,4,-1,-1,5,0,2,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest34() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,5,6,2,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,4,0,1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,4,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,5,6,2,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,1,-1,-1,-1,6,7,2,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,5,6,2,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,3,-1,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,3,-1,-1,5,6,2,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,0,1,-1,-1,5,-1,-1,-1,-1,0,0,2,-1,-1,6,0,-1,-1,-1,3,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,0,0,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,6,5,2,-1,-1,0,-1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,5,6,2,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,6,7,2,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,8,7,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,3,-1,-1,-1,-1,6,7,2,-1,-1,8,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,-1,4,5,-1,-1,-1,-1,3,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
        }

        @Test
        public void TreeMapSolverTest35() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,3,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,6,7,1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,0,8,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,1,-1,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,2,-1,-1,-1,0,0,2,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,7,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,0,5,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,7,2,-1,-1,0,0,-1,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,1,-1,-1,-1,-1,0,0,2,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,0,2,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,0,-1,-1,0,0,2,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,0,2,-1,-1,7,8,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,1,-1,-1,5,6,3,-1,-1,0,0,2,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,1,-1,-1,-1,3,4,1,-1,-1,0,0,2,-1,-1,5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,0,0,2,-1,-1,5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,1,-1,-1,-1,3,4,1,-1,-1,0,0,2,-1,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,1,-1,-1,5,6,1,-1,-1,0,0,2,-1,-1,3,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest36() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,4,7,-1,-1,-1,-1,-1,-1,-1,-1,0,8,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,0,4,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,4,-1,-1,-1,-1,0,6,2,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,0,2,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,8,2,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,2,-1,-1,0,8,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,-1,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,5,-1,-1,-1,-1,6,0,2,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,2,-1,-1,0,8,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,2,-1,-1,0,8,-1,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,2,-1,-1,0,8,-1,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,0,5,2,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,6,2,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,2,-1,-1,-1,0,6,2,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,2,-1,-1,0,8,-1,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,2,-1,-1,6,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,0,2,-1,-1,0,8,-1,-1,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest37() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,-1,4,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,3,-1,-1,-1,6,7,2,-1,-1,8,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,5,6,2,-1,-1,7,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,6,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,-1,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,6,7,2,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,0,2,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,5,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,2,-1,-1,8,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,2,-1,-1,-1,3,4,1,-1,-1,5,6,2,-1,-1,7,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,2,-1,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,2,-1,-1,8,0,-1,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,6,7,2,-1,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,8,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,0,4,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,1,-1,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest38() {
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,6,7,2,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,0,7,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,7,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,-1,4,5,-1,-1,-1,3,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,4,8,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,3,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,1,-1,-1,-1,6,7,2,-1,-1,8,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,0,1,-1,-1,0,0,5,-1,-1,8,4,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,0,1,-1,-1,5,-1,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,2,-1,-1,5,6,2,-1,-1,7,0,2,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,-1,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,1,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,8,2,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,0,4,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,5,-1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,5,-1,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest39() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,4,-1,-1,0,5,2,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,2,-1,-1,0,8,-1,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,1,-1,-1,-1,3,4,1,-1,-1,0,0,2,-1,-1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,0,2,-1,-1,7,8,-1,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,0,2,-1,-1,0,8,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,2,-1,-1,7,8,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,6,-1,-1,-1,-1,7,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,0,6,-1,-1,-1,7,8,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,7,-1,-1,0,8,2,-1,-1,0,7,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,2,-1,-1,-1,-1,0,0,2,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,0,8,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,0,-1,-1,-1,3,4,1,-1,-1,0,5,2,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,0,2,-1,-1,7,8,-1,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,5,-1,-1,0,7,2,-1,-1,8,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,0,0,2,-1,-1,8,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,0,2,-1,-1,5,0,-1,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,2,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,7,2,-1,-1,0,0,-1,-1,-1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,7,2,-1,-1,8,0,-1,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,0,2,-1,-1,5,0,6,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest40() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,0,5,-1,-1,7,4,2,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,0,2,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,0,6,2,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,0,2,-1,-1,0,0,-1,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,7,2,-1,-1,6,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,5,-1,-1,-1,7,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,7,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,6,-1,-1,-1,7,0,2,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,2,-1,-1,-1,3,4,1,-1,-1,5,0,2,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,0,2,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,5,0,2,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,2,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,0,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,5,0,2,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,0,2,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,8,0,2,-1,-1,0,0,-1,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,6,0,2,-1,-1,7,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest41() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,0,4,-1,-1,6,3,2,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,0,2,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,3,-1,-1,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,2,-1,-1,-1,3,4,1,-1,-1,5,6,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,3,-1,-1,-1,4,5,2,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,0,-1,-1,5,6,2,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,0,2,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,6,7,2,-1,-1,8,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,0,2,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,3,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,1,-1,-1,-1,3,4,1,-1,-1,5,6,2,-1,-1,7,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,7,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,-1,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,-1,8,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,1,-1,-1,-1,-1,6,7,2,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,4,7,2,-1,-1,0,8,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,1,-1,-1,-1,3,4,1,-1,-1,5,6,2,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,4,1,-1,-1,5,6,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,6,7,2,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest42() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,0,-1,-1,-1,7,0,2,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,1,-1,-1,-1,-1,0,0,-1,-1,-1,6,0,2,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,6,3,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,5,-1,-1,7,0,-1,-1,-1,8,0,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,-1,6,-1,-1,-1,5,0,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,7,0,2,-1,-1,-1,3,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,0,-1,-1,-1,5,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,5,-1,-1,6,0,2,-1,-1,0,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,4,-1,-1,-1,0,-1,-1,-1,5,6,2,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,0,0,3,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,2,-1,-1,-1,-1,6,0,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,0,3,-1,-1,-1,4,0,2,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,-1,-1,-1,8,0,2,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,5,-1,-1,-1,5,6,2,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,6,7,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,0,-1,-1,5,6,2,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,6,-1,-1,-1,0,0,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest43() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,-1,-1,-1,6,0,2,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,7,2,-1,-1,0,7,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,3,-1,-1,0,5,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,4,-1,-1,-1,5,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,-1,-1,-1,8,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,1,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,-1,-1,6,0,2,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,1,-1,-1,-1,3,4,1,-1,-1,-1,0,-1,-1,-1,5,0,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,0,0,6,-1,-1,0,0,-1,-1,-1,4,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,-1,-1,-1,8,0,2,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,0,6,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,3,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,1,-1,-1,-1,3,4,1,-1,-1,0,0,-1,-1,-1,5,0,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,5,0,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,5,0,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,3,-1,-1,-1,-1,0,6,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,2,-1,-1,-1,3,4,1,-1,-1,5,0,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,2,-1,-1,-1,0,-1,-1,-1,5,0,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,0,-1,-1,-1,3,4,1,-1,-1,0,5,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,2,-1,-1,0,5,2,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest44() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,0,6,-1,-1,-1,5,7,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,5,-1,-1,-1,5,0,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,1,-1,-1,-1,5,0,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,-1,6,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,2,-1,-1,-1,5,6,2,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,6,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,0,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,4,5,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,0,-1,-1,-1,7,0,2,-1,-1,-1,3,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,7,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,-1,-1,-1,8,0,2,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,6,0,2,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,3,-1,-1,-1,-1,0,0,-1,-1,-1,6,0,2,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,1,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,5,-1,-1,-1,0,0,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,2,-1,-1,-1,0,-1,-1,-1,5,6,2,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,0,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,0,6,2,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,-1,3,-1,-1,-1,4,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,-1,3,-1,-1,-1,4,4,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest45() {
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,0,6,2,-1,-1,7,0,2,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,0,-1,-1,-1,7,0,2,-1,-1,-1,2,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,0,4,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,7,2,-1,-1,0,3,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,3,-1,-1,0,0,-1,-1,-1,5,0,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,3,6,2,-1,-1,7,0,2,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,3,-1,-1,-1,0,-1,-1,-1,5,6,2,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,6,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,-1,3,-1,-1,-1,4,0,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,0,-1,-1,-1,6,0,2,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,6,-1,-1,7,6,2,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,-1,-1,-1,6,0,2,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,7,0,2,-1,-1,0,2,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,7,0,2,-1,-1,-1,7,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,-1,-1,-1,8,0,2,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,-1,-1,-1,6,0,2,-1,-1,0,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,0,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,7,-1,-1,-1,6,0,2,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest46() {
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,4,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,0,6,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,0,-1,-1,-1,3,4,1,-1,-1,5,6,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,0,-1,-1,-1,8,0,2,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,-1,-1,-1,8,0,2,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,1,3,-1,-1,-1,4,5,2,-1,-1,0,0,3,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,3,1,-1,-1,5,0,2,-1,-1,6,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,0,-1,-1,-1,8,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,7,8,2,-1,-1,7,0,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,-1,3,-1,-1,-1,4,5,2,-1,-1,0,0,3,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,0,0,3,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,0,-1,-1,-1,8,0,2,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,7,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,3,5,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,1,-1,-1,-1,-1,0,0,-1,-1,-1,6,7,2,-1,-1,0,0,5,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,6,7,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,1,-1,-1,-1,7,0,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
        }

        @Test
        public void TreeMapSolverTest47() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,7,0,2,-1,-1,-1,1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,3,1,-1,-1,5,0,2,-1,-1,6,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,6,7,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,6,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,7,-1,-1,0,0,-1,-1,-1,7,0,2,-1,-1,-1,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,6,7,-1,-1,-1,5,0,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,6,0,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,7,-1,-1,-1,8,0,2,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,-1,3,-1,-1,-1,4,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,-1,3,-1,-1,-1,4,-1,-1,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,4,-1,-1,0,5,2,-1,-1,6,0,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,6,5,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,2,-1,-1,-1,3,4,1,-1,-1,5,6,2,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,4,-1,-1,-1,7,0,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,0,1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,0,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,0,5,-1,-1,6,7,2,-1,-1,3,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,6,-1,-1,7,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,0,6,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest48() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,-1,-1,-1,8,0,2,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,6,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,0,6,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,0,5,-1,-1,6,0,-1,-1,-1,3,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,0,-1,-1,-1,8,0,2,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,6,5,2,-1,-1,7,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,3,-1,-1,0,5,2,-1,-1,6,0,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,0,6,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,7,0,2,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,1,-1,-1,-1,-1,6,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,7,0,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,-1,3,-1,-1,-1,4,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,6,0,2,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,4,1,-1,-1,0,5,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,2,-1,-1,-1,-1,6,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,6,0,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest49() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,5,0,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,0,-1,-1,-1,0,-1,-1,-1,5,0,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,1,0,-1,-1,-1,5,0,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,-1,3,-1,-1,-1,4,5,0,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,-1,-1,-1,8,0,2,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,2,-1,-1,5,6,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,0,-1,-1,-1,8,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,0,0,-1,-1,-1,8,0,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,-1,-1,-1,8,0,2,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,0,6,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,-1,0,-1,-1,-1,6,3,2,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,6,7,-1,-1,-1,8,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,3,-1,-1,-1,5,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,6,0,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,7,8,2,-1,-1,2,0,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,-1,4,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,0,6,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,4,-1,-1,-1,6,7,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,-1,0,-1,-1,-1,5,6,2,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,7,-1,-1,-1,8,0,2,-1,-1,4,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
        }

        @Test
        public void TreeMapSolverTest50() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,3,6,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,0,-1,-1,5,6,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,4,-1,-1,-1,0,7,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,6,7,-1,-1,-1,0,5,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,3,0,-1,-1,-1,0,5,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,7,-1,-1,-1,0,8,2,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,3,0,-1,-1,-1,6,7,2,-1,-1,0,0,5,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,0,5,-1,-1,-1,6,-1,-1,-1,0,3,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,1,-1,-1,-1,0,0,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,-1,3,-1,-1,-1,-1,4,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,0,3,-1,-1,-1,6,7,2,-1,-1,0,0,5,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,4,-1,-1,-1,0,0,-1,-1,-1,0,6,2,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,2,-1,-1,-1,3,4,1,-1,-1,0,5,2,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,0,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,0,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,2,-1,-1,0,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,5,-1,-1,-1,7,0,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,0,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,1,-1,-1,-1,-1,0,6,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest51() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,2,-1,-1,-1,6,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,2,-1,-1,-1,3,4,1,-1,-1,5,6,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,-1,-1,-1,0,8,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,6,7,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,-1,2,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,0,0,-1,-1,-1,0,8,2,-1,-1,3,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,2,-1,-1,-1,-1,0,6,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,0,-1,-1,-1,3,4,1,-1,-1,5,6,2,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,2,5,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,7,-1,-1,-1,0,8,2,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,0,6,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,-1,3,-1,-1,-1,0,4,0,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,0,-1,-1,-1,0,-1,-1,-1,0,5,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,-1,6,-1,-1,-1,3,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,3,-1,-1,-1,0,7,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,1,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,6,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,3,-1,-1,-1,-1,0,0,-1,-1,-1,0,6,2,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,6,0,1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,6,5,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest52() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,0,7,2,-1,-1,-1,1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,7,-1,-1,-1,0,8,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,4,-1,-1,-1,7,0,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,5,-1,-1,-1,6,5,2,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,0,7,2,-1,-1,-1,5,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,1,-1,-1,-1,6,0,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,3,1,-1,-1,0,5,2,-1,-1,6,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,3,-1,-1,-1,6,0,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,6,0,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,4,0,1,-1,-1,0,0,-1,-1,-1,0,7,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,0,-1,-1,-1,0,8,2,-1,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,2,-1,-1,-1,-1,6,7,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,-1,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,2,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,7,-1,-1,-1,0,8,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,0,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,-1,-1,-1,6,7,2,-1,-1,5,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,0,7,2,-1,-1,0,5,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,6,7,1,-1,-1,0,8,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,4,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest53() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,0,7,2,-1,-1,0,7,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,8,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,0,6,2,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,2,-1,-1,-1,-1,6,0,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,7,-1,-1,-1,0,8,2,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,-1,-1,-1,0,8,2,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,0,6,2,-1,-1,0,1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,-1,3,-1,-1,-1,0,4,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,-1,3,-1,-1,-1,1,4,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,0,-1,-1,6,7,2,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,2,-1,-1,-1,6,0,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,1,-1,-1,-1,3,4,1,-1,-1,5,0,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,-1,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,5,-1,-1,0,0,-1,-1,-1,0,8,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,4,-1,-1,5,0,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,5,0,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,6,0,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest54() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,0,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,4,7,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,3,1,-1,-1,0,5,2,-1,-1,6,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,7,8,2,-1,-1,6,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,6,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,0,-1,-1,-1,0,-1,-1,-1,5,6,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,4,-1,-1,-1,5,6,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,-1,6,-1,-1,-1,5,7,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,2,-1,-1,-1,5,6,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,3,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,0,6,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,4,0,-1,-1,-1,0,5,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,6,-1,-1,0,0,-1,-1,-1,0,7,2,-1,-1,-1,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,4,0,1,-1,-1,0,0,-1,-1,-1,7,0,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,4,-1,-1,-1,-1,6,7,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,0,-1,-1,-1,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,7,2,-1,-1,0,2,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest55() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,7,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,1,-1,-1,-1,0,7,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,0,5,-1,-1,6,0,-1,-1,-1,0,3,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,2,-1,-1,-1,-1,6,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,-1,-1,-1,0,8,2,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,-1,-1,-1,6,8,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,7,8,2,-1,-1,-1,1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,5,-1,-1,-1,0,0,-1,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,3,-1,-1,-1,-1,0,6,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,1,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,5,0,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,2,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,-1,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,3,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,5,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,-1,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,0,-1,-1,0,5,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,-1,3,-1,-1,-1,0,4,1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,5,-1,-1,-1,6,7,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,-1,-1,-1,7,5,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest56() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,6,-1,-1,6,7,2,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,0,7,2,-1,-1,-1,6,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,0,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,3,1,-1,-1,0,5,2,-1,-1,-1,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,1,-1,-1,-1,7,0,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,0,7,2,-1,-1,2,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,0,6,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,0,6,2,-1,-1,7,5,2,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,-1,-1,-1,0,8,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,6,2,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,6,2,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,-1,3,-1,-1,-1,-1,4,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,0,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,7,-1,-1,0,0,-1,-1,-1,0,8,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,0,0,-1,-1,-1,0,8,2,-1,-1,4,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,4,-1,-1,0,0,-1,-1,-1,0,5,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,3,-1,-1,5,0,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest57() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,4,-1,-1,0,5,2,-1,-1,0,6,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,8,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,3,1,-1,-1,5,6,2,-1,-1,-1,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,0,3,2,-1,-1,0,6,2,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,4,-1,-1,-1,-1,6,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,-1,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,0,6,2,-1,-1,0,3,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,3,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,7,-1,-1,0,8,-1,-1,-1,0,7,2,-1,-1,-1,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,0,4,1,-1,-1,5,-1,-1,-1,-1,0,0,2,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,2,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,2,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,7,-1,-1,-1,0,8,2,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,1,3,-1,-1,-1,4,5,2,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,0,-1,-1,-1,7,6,2,-1,-1,0,0,5,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,-1,-1,-1,0,6,2,-1,-1,0,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,2,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,0,-1,-1,-1,0,0,2,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest58() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,4,-1,-1,0,8,-1,-1,-1,0,0,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,6,-1,-1,8,0,-1,-1,-1,0,0,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,6,7,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,6,-1,-1,-1,7,8,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,-1,-1,-1,0,0,2,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,3,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,0,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,-1,-1,-1,0,0,2,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,2,-1,-1,5,6,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,0,0,-1,-1,-1,0,8,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,0,-1,-1,0,8,-1,-1,-1,0,0,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,0,-1,-1,-1,-1,0,6,2,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,7,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,3,-1,-1,-1,7,8,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,2,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,0,-1,-1,-1,0,7,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,1,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,2,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,2,-1,-1,-1,0,0,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,0,-1,-1,-1,0,8,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest59() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,0,6,2,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,6,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,0,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,5,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,2,-1,-1,5,6,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,7,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,5,-1,-1,0,0,-1,-1,-1,7,0,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,5,-1,-1,-1,-1,0,0,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,5,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,-1,3,-1,-1,-1,4,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,0,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,7,0,2,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,-1,-1,-1,8,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,0,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,7,-1,-1,-1,0,8,2,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,0,-1,-1,-1,3,4,1,-1,-1,-1,0,-1,-1,-1,5,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,0,-1,-1,-1,8,0,2,-1,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,0,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,8,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,4,-1,-1,-1,0,0,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,0,0,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest60() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,-1,-1,-1,6,7,2,-1,-1,2,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,7,-1,-1,-1,8,0,2,-1,-1,1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,-1,-1,-1,6,0,2,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,6,7,-1,-1,-1,3,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,5,-1,-1,-1,0,6,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,1,-1,-1,-1,3,4,1,-1,-1,0,5,2,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,7,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,-1,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,5,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,1,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,1,5,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,7,-1,-1,-1,8,0,2,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,-1,-1,-1,-1,0,0,6,-1,-1,0,0,-1,-1,-1,8,4,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,3,-1,-1,-1,-1,0,6,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,7,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest61() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,2,-1,-1,-1,-1,0,0,-1,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,1,-1,-1,6,7,2,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,-1,3,-1,-1,-1,4,5,6,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,5,-1,-1,-1,-1,0,0,-1,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,0,5,-1,-1,-1,0,-1,-1,-1,6,3,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,0,6,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,7,2,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,0,0,6,-1,-1,0,0,-1,-1,-1,8,4,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,5,-1,-1,-1,-1,6,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,1,-1,-1,-1,-1,0,6,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,4,-1,-1,5,0,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,0,5,-1,-1,-1,6,-1,-1,-1,7,3,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,0,6,2,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,-1,7,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,0,-1,-1,0,0,-1,-1,-1,5,6,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,2,-1,-1,5,0,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,2,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,0,-1,-1,-1,6,8,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
        }

        @Test
        public void TreeMapSolverTest62() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,4,-1,-1,-1,6,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,-1,1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,6,0,-1,-1,-1,5,7,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,-1,-1,-1,8,6,2,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,3,-1,-1,5,0,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,7,2,-1,-1,0,3,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,4,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,2,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,-1,5,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,6,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,4,-1,-1,-1,0,6,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,6,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,5,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,-1,0,-1,-1,-1,5,6,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,0,6,-1,-1,0,0,-1,-1,-1,7,4,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,4,-1,-1,-1,-1,0,6,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
        }

        @Test
        public void TreeMapSolverTest63() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,0,-1,-1,-1,0,0,2,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,1,-1,-1,-1,5,6,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,0,0,2,-1,-1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,5,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,4,6,-1,-1,-1,-1,-1,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,4,-1,-1,0,5,2,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,4,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,0,4,1,-1,-1,5,-1,-1,-1,-1,0,0,2,-1,-1,6,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,1,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,0,0,2,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,4,1,-1,-1,-1,-1,-1,-1,-1,8,0,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,0,4,1,-1,-1,5,-1,-1,-1,-1,0,0,2,-1,-1,6,0,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,0,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,2,-1,-1,-1,3,4,1,-1,-1,0,5,2,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest64() {
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,0,7,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,8,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,0,0,-1,-1,-1,0,7,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,6,7,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,-1,-1,-1,0,8,2,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,6,7,1,-1,-1,0,8,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,8,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,5,-1,-1,-1,6,7,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,4,-1,-1,0,0,-1,-1,-1,0,8,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,7,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,8,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,0,-1,-1,5,6,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,-1,-1,-1,0,0,2,-1,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,3,-1,-1,-1,6,0,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,0,6,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest65() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,0,6,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,6,7,-1,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,0,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,8,0,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,0,-1,-1,-1,8,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,0,-1,-1,-1,3,4,1,-1,-1,5,0,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,5,-1,-1,0,7,-1,-1,-1,0,8,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,6,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,0,-1,-1,-1,8,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,0,-1,-1,-1,8,0,2,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,0,6,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,7,-1,-1,-1,0,8,2,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,7,-1,-1,0,7,-1,-1,-1,8,0,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,0,2,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,5,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,0,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,6,7,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,5,0,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,0,0,-1,-1,-1,8,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest66() {
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,2,-1,-1,-1,0,0,-1,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,5,-1,-1,-1,-1,0,6,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,0,-1,-1,-1,3,4,1,-1,-1,5,0,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,0,-1,-1,-1,6,5,2,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,3,-1,-1,-1,-1,0,0,-1,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,3,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,0,3,-1,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,2,-1,-1,0,0,-1,-1,-1,5,6,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,6,0,-1,-1,-1,7,5,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,2,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,0,6,-1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,3,-1,-1,-1,0,0,-1,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,7,8,2,-1,-1,1,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,4,1,-1,-1,0,5,2,-1,-1,6,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest67() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,0,4,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,-1,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,4,1,-1,-1,5,0,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,4,-1,-1,-1,-1,0,0,-1,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,0,6,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,2,-1,-1,-1,3,4,1,-1,-1,-1,0,-1,-1,-1,5,6,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,0,6,2,-1,-1,5,7,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,-1,2,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,-1,8,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,0,-1,-1,-1,3,4,1,-1,-1,-1,0,-1,-1,-1,5,6,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,7,8,2,-1,-1,-1,3,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,-1,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,0,6,2,-1,-1,3,7,2,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,3,-1,-1,-1,-1,0,6,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
        }

        @Test
        public void TreeMapSolverTest68() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,0,0,2,-1,-1,1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,6,0,-1,-1,-1,3,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,0,1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,4,8,2,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,2,-1,-1,1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,0,6,-1,-1,7,0,-1,-1,-1,8,4,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,7,2,-1,-1,0,5,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,2,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,1,-1,-1,-1,-1,6,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,5,-1,-1,0,0,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,3,-1,-1,-1,-1,6,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,6,-1,-1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,0,4,1,-1,-1,5,-1,-1,-1,-1,0,0,2,-1,-1,6,7,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,5,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,-1,6,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,1,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,3,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
        }

        @Test
        public void TreeMapSolverTest69() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,6,-1,-1,-1,-1,0,0,2,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,5,-1,-1,-1,7,8,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,5,-1,-1,0,8,-1,-1,-1,0,0,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,8,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,8,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,7,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,4,-1,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,4,0,1,-1,-1,0,0,-1,-1,-1,7,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,8,-1,-1,-1,0,0,2,-1,-1,2,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,4,-1,-1,-1,0,7,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,-1,-1,-1,0,0,2,-1,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,3,1,-1,-1,0,0,2,-1,-1,5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,8,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,8,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest70() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,7,0,2,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,4,-1,-1,-1,0,6,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,6,7,-1,-1,-1,0,8,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,0,-1,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,0,7,2,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,1,-1,-1,-1,7,0,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,0,0,-1,-1,-1,0,8,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,0,5,2,-1,-1,0,6,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,5,-1,-1,-1,0,0,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,6,7,2,-1,-1,0,3,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,0,-1,-1,5,0,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,4,-1,-1,-1,0,0,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,0,-1,-1,-1,0,8,2,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,7,-1,-1,-1,0,8,2,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,0,7,-1,-1,-1,0,8,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,0,3,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,4,1,-1,-1,5,0,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,7,-1,-1,-1,0,8,2,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest71() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,0,-1,-1,-1,7,0,2,-1,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,7,8,2,-1,-1,7,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,-1,3,-1,-1,-1,4,5,4,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,7,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,0,-1,-1,-1,8,0,2,-1,-1,2,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,0,0,-1,-1,-1,8,0,2,-1,-1,2,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,0,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,6,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,6,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,4,0,1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,2,-1,-1,0,5,2,-1,-1,6,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,-1,-1,-1,8,0,2,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,-1,-1,-1,8,0,2,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,0,-1,-1,-1,3,4,1,-1,-1,0,5,2,-1,-1,6,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,0,-1,-1,-1,8,0,2,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,0,-1,-1,-1,8,0,2,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest72() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,0,-1,-1,-1,3,5,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,0,1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,6,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,-1,4,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,-1,-1,-1,5,7,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,0,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,0,5,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,7,-1,-1,-1,6,8,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,4,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,3,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,0,0,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,7,8,2,-1,-1,4,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,2,-1,-1,-1,3,4,1,-1,-1,5,0,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,-1,3,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,-1,6,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
        }

        @Test
        public void TreeMapSolverTest73() {
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,-1,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,0,-1,-1,5,0,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,3,-1,-1,-1,5,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,4,1,-1,-1,-1,0,-1,-1,-1,5,6,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,-1,5,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,4,6,1,-1,-1,7,8,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,0,-1,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,0,4,1,-1,-1,5,-1,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,0,4,1,-1,-1,5,-1,-1,-1,-1,0,0,2,-1,-1,6,7,-1,-1,-1,2,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,0,6,-1,-1,0,7,-1,-1,-1,8,4,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,0,5,-1,-1,0,0,-1,-1,-1,6,3,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,-1,-1,-1,6,7,2,-1,-1,1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,-1,3,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,6,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,-1,4,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,0,5,-1,-1,6,0,-1,-1,-1,7,3,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest74() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,3,-1,-1,-1,0,6,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,6,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,0,-1,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,4,-1,-1,-1,-1,6,7,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,0,-1,-1,0,5,2,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,3,-1,-1,-1,-1,6,7,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,7,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,0,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,7,0,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,8,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,0,-1,-1,-1,-1,0,0,2,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,3,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,8,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,8,-1,-1,0,8,-1,-1,-1,0,0,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,0,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,3,1,-1,-1,0,0,2,-1,-1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest75() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,7,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,1,-1,-1,-1,0,0,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,-1,3,-1,-1,-1,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,6,7,-1,-1,-1,8,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,4,-1,-1,-1,7,0,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,2,-1,-1,-1,-1,6,0,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,0,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,5,6,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,4,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,0,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,4,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,1,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,0,6,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,5,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,0,-1,-1,-1,0,7,2,-1,-1,4,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,4,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,0,-1,-1,-1,0,8,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,7,0,2,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest76() {
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,-1,3,-1,-1,-1,4,5,2,-1,-1,-1,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,-1,-1,-1,6,0,2,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,1,-1,-1,-1,-1,0,6,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,1,-1,-1,-1,3,4,1,-1,-1,5,0,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,-1,-1,-1,6,7,2,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,-1,0,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,1,-1,-1,-1,3,4,1,-1,-1,0,5,2,-1,-1,6,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,1,-1,-1,-1,3,4,1,-1,-1,5,6,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,3,-1,-1,-1,0,-1,-1,-1,5,6,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,5,-1,-1,-1,-1,6,0,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,0,6,-1,-1,-1,5,7,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,3,-1,-1,-1,5,6,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,1,-1,-1,-1,-1,0,0,-1,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,-1,3,-1,-1,-1,4,5,4,-1,-1,-1,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,6,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,-1,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,0,-1,-1,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,0,2,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,6,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,-1,6,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
        }

        @Test
        public void TreeMapSolverTest77() {
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,0,6,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,-1,-1,-1,8,6,2,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,-1,0,-1,-1,-1,6,5,2,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,-1,3,-1,-1,-1,4,5,2,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,0,5,-1,-1,0,6,-1,-1,-1,7,3,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,-1,3,-1,-1,-1,4,5,0,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,0,0,-1,-1,-1,5,6,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,7,8,2,-1,-1,-1,4,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,0,1,-1,-1,0,0,6,-1,-1,0,0,-1,-1,-1,8,4,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,4,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,1,-1,-1,-1,3,4,1,-1,-1,5,0,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,1,-1,-1,-1,0,0,-1,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,0,4,1,-1,-1,5,6,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,7,8,2,-1,-1,5,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,-1,3,-1,-1,-1,4,5,3,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,0,0,-1,-1,-1,5,6,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,3,-1,-1,0,5,2,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,0,4,1,-1,-1,5,6,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest78() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,3,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,4,-1,-1,5,6,2,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,2,-1,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,8,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,1,5,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,3,-1,-1,-1,-1,6,0,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,5,-1,-1,-1,0,6,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,0,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,3,1,-1,-1,0,5,2,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,-1,-1,-1,0,0,2,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,6,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,0,0,-1,-1,-1,0,8,2,-1,-1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,0,-1,-1,-1,0,8,2,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,7,-1,-1,-1,0,0,2,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,0,0,-1,-1,-1,0,8,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,4,7,-1,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,0,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,7,-1,-1,-1,0,0,2,-1,-1,1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest79() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,0,5,2,-1,-1,6,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,3,-1,-1,-1,-1,6,0,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,6,7,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,0,-1,-1,5,6,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,7,0,2,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,4,-1,-1,-1,0,6,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,-1,-1,-1,6,0,2,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,-1,-1,-1,6,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,3,1,-1,-1,5,0,2,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,6,7,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,5,6,2,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,2,-1,-1,-1,-1,0,6,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,0,6,2,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,2,-1,-1,-1,3,4,1,-1,-1,5,6,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,3,-1,-1,5,6,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,7,-1,-1,-1,0,8,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,1,-1,-1,-1,7,0,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest80() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,0,6,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,3,1,-1,-1,5,6,2,-1,-1,-1,7,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,-1,3,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,0,-1,-1,0,5,2,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,0,-1,-1,-1,3,4,1,-1,-1,0,5,2,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,3,0,-1,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,2,-1,-1,-1,0,6,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,3,1,-1,-1,5,6,2,-1,-1,0,7,2,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,-1,3,-1,-1,-1,4,5,6,-1,-1,-1,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,2,0,-1,-1,-1,5,6,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,5,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,4,7,2,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,0,6,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,4,-1,-1,0,0,-1,-1,-1,5,6,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,6,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,-1,1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,7,8,2,-1,-1,-1,8,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,0,-1,-1,-1,8,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,7,2,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest81() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,3,-1,-1,5,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,0,3,2,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,-1,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,-1,3,-1,-1,-1,4,5,0,-1,-1,-1,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,0,-1,-1,-1,-1,6,7,2,-1,-1,8,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,4,1,-1,-1,5,6,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,4,7,1,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,3,6,2,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,3,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,4,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,2,-1,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,0,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest82() {
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,8,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,8,-1,-1,-1,0,0,2,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,4,-1,-1,-1,0,6,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,0,6,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,3,-1,-1,5,6,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,-1,-1,-1,0,0,2,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,8,-1,-1,-1,0,0,2,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,-1,-1,-1,0,0,2,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,-1,-1,-1,0,0,2,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,8,-1,-1,-1,0,0,2,-1,-1,4,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,5,6,2,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,2,3,-1,-1,-1,0,4,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,2,-1,-1,5,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,7,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,2,-1,-1,-1,3,4,1,-1,-1,0,5,2,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,0,8,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,4,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest83() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,2,-1,-1,-1,3,4,1,-1,-1,5,0,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,2,-1,-1,-1,-1,0,0,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,4,-1,-1,-1,-1,0,6,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,7,-1,-1,0,7,-1,-1,-1,0,8,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,-1,-1,-1,0,8,2,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,7,-1,-1,-1,0,8,2,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,2,-1,-1,-1,3,4,1,-1,-1,5,6,2,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,5,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,0,6,-1,-1,-1,7,0,2,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,0,3,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,3,1,-1,-1,0,5,2,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,7,0,2,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,3,0,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,0,-1,-1,-1,0,8,2,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,-1,-1,-1,0,8,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,4,-1,-1,-1,7,0,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,4,-1,-1,5,0,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,6,0,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,2,-1,-1,-1,-1,0,6,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest84() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,0,-1,-1,-1,5,6,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,7,2,-1,-1,0,1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,0,-1,-1,-1,-1,6,7,2,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,6,-1,-1,-1,-1,7,0,2,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,6,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,7,8,2,-1,-1,3,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,6,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,7,2,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,-1,3,-1,-1,-1,4,5,3,-1,-1,-1,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,0,6,-1,-1,-1,7,0,2,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,-1,0,-1,-1,-1,3,6,2,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,3,1,-1,-1,5,6,2,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,5,-1,-1,-1,5,6,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,0,5,2,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,0,-1,-1,-1,3,4,1,-1,-1,5,6,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
        }

        @Test
        public void TreeMapSolverTest85() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,4,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,-1,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,7,-1,-1,-1,8,6,2,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,4,1,-1,-1,0,5,2,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,5,0,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,7,8,2,-1,-1,8,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,0,5,-1,-1,0,6,2,-1,-1,7,3,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,4,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,7,-1,-1,0,0,-1,-1,-1,8,7,2,-1,-1,-1,0,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,5,-1,-1,6,7,2,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,0,6,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,-1,5,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,4,-1,-1,0,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,3,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,4,1,-1,-1,0,0,-1,-1,-1,5,6,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,6,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,0,6,-1,-1,-1,7,5,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,2,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest86() {
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,0,1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,3,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,0,4,1,-1,-1,5,0,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,0,4,1,-1,-1,5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,7,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,7,0,-1,-1,-1,2,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,1,-1,-1,4,5,-1,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,0,4,1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,0,0,1,-1,-1,4,-1,-1,-1,-1,5,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,0,1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,7,0,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,0,1,-1,-1,5,4,1,-1,-1,-1,-1,-1,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,0,1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest87() {
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,8,0,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,0,-1,-1,-1,0,0,2,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,3,-1,-1,-1,5,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,8,7,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,7,8,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,0,-1,-1,-1,3,4,1,-1,-1,5,6,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,4,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,0,-1,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,1,-1,-1,-1,7,8,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,0,1,-1,-1,-1,-1,-1,-1,-1,8,4,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,7,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,3,6,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,8,1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,4,1,-1,-1,5,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,0,-1,-1,-1,0,8,2,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,5,-1,-1,-1,-1,6,7,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest88() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,3,-1,-1,-1,-1,0,6,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,6,-1,-1,-1,7,0,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,3,-1,-1,-1,-1,6,7,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,-1,0,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,2,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,2,-1,-1,-1,0,6,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,0,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,3,-1,-1,5,0,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,6,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,0,8,-1,-1,-1,0,0,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,0,6,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,8,0,-1,-1,-1,0,0,2,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,8,0,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,4,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,8,0,-1,-1,-1,0,0,2,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,8,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,3,-1,-1,-1,0,7,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest89() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,0,-1,-1,-1,0,0,2,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,4,-1,-1,-1,7,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,1,-1,-1,-1,0,6,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,0,1,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,-1,0,4,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,4,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,1,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,4,-1,-1,0,5,2,-1,-1,0,6,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,7,-1,-1,-1,0,8,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,2,-1,-1,-1,-1,6,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,4,-1,-1,0,5,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,0,-1,-1,7,0,-1,-1,-1,0,8,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,4,-1,-1,-1,0,7,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,3,-1,-1,-1,7,0,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,6,7,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,-1,-1,-1,0,8,2,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,1,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest90() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,-1,-1,-1,0,8,2,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,7,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,8,-1,-1,-1,0,0,2,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,0,8,-1,-1,-1,0,0,2,-1,-1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,0,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,4,1,-1,-1,5,6,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,3,-1,-1,5,6,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,0,0,-1,-1,-1,0,8,2,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,0,1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,0,8,-1,-1,-1,0,0,2,-1,-1,3,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,0,1,-1,-1,-1,-1,-1,-1,-1,4,8,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,-1,-1,-1,0,0,2,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,0,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,0,7,2,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,3,1,-1,-1,0,0,2,-1,-1,0,5,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,6,7,2,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,0,7,2,-1,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,0,7,2,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest91() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,5,-1,-1,0,0,-1,-1,-1,0,8,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,5,-1,-1,-1,0,6,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,2,-1,-1,-1,6,7,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,0,7,2,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,1,0,-1,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,8,0,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,0,-1,-1,8,0,-1,-1,-1,0,0,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,6,7,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,8,0,-1,-1,-1,0,4,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,8,-1,-1,-1,0,0,2,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,8,0,-1,-1,-1,0,0,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,4,-1,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,0,6,2,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,4,0,1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,5,6,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,4,-1,-1,-1,6,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,7,-1,-1,7,0,-1,-1,-1,0,8,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,6,0,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,2,-1,-1,0,5,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest92() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,2,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,0,0,2,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,7,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,7,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,2,-1,-1,-1,3,4,1,-1,-1,5,6,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,7,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,8,-1,-1,-1,0,0,2,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,8,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,0,1,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,6,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,0,-1,-1,-1,3,4,1,-1,-1,0,5,2,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,1,-1,-1,-1,-1,0,6,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,3,-1,-1,0,5,2,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,1,-1,-1,-1,3,4,1,-1,-1,5,6,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,7,-1,-1,8,7,-1,-1,-1,0,0,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest93() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,3,5,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,8,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,0,7,2,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,-1,-1,-1,0,0,2,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,0,3,2,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,-1,-1,-1,0,6,2,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,4,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,1,-1,-1,-1,-1,6,0,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,3,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,3,1,-1,-1,0,5,2,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,5,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,6,7,-1,-1,-1,0,3,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,2,-1,-1,-1,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,0,-1,-1,0,7,-1,-1,-1,0,8,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,0,6,-1,-1,-1,0,0,2,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,7,-1,-1,0,0,-1,-1,-1,0,7,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,0,-1,-1,-1,3,4,1,-1,-1,-1,0,-1,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,6,-1,-1,7,0,-1,-1,-1,0,8,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest94() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,0,-1,-1,-1,0,7,2,-1,-1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,6,7,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,0,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,8,-1,-1,-1,0,0,2,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,6,0,1,-1,-1,0,0,2,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,6,7,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,4,-1,-1,-1,6,7,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,2,-1,-1,5,6,2,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,0,5,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,3,6,2,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,0,-1,-1,-1,3,4,1,-1,-1,5,6,2,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,0,-1,-1,-1,0,7,2,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,6,5,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,2,-1,-1,-1,0,7,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,4,1,-1,-1,0,0,-1,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,0,-1,-1,-1,0,7,2,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest95() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,0,-1,-1,-1,0,7,2,-1,-1,3,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,6,7,1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,8,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,7,-1,-1,-1,0,8,2,-1,-1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,0,6,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,0,-1,-1,-1,0,7,2,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,0,8,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,0,5,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,-1,-1,-1,0,8,2,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,7,-1,-1,-1,0,8,2,-1,-1,3,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,6,0,-1,-1,-1,0,3,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,4,0,1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,-1,6,-1,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,8,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,-1,-1,-1,0,4,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,6,7,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,8,-1,-1,-1,0,0,2,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest96() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,7,0,2,-1,-1,0,7,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,7,0,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,6,0,2,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,2,-1,-1,-1,-1,0,0,-1,-1,-1,6,0,2,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,0,0,-1,-1,-1,8,0,2,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,0,6,2,-1,-1,5,7,2,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,0,6,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,5,-1,-1,-1,0,7,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,0,-1,-1,-1,7,0,2,-1,-1,5,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,0,6,2,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,4,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,0,6,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,7,-1,-1,-1,8,0,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,5,-1,-1,-1,6,5,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,-1,0,-1,-1,-1,5,0,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,4,-1,-1,-1,-1,0,0,-1,-1,-1,6,0,2,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,6,7,-1,-1,0,0,4,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,4,7,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
        }

        @Test
        public void TreeMapSolverTest97() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,4,0,1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,7,0,2,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,2,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,0,-1,-1,-1,8,0,2,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,3,-1,-1,-1,-1,6,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,0,-1,-1,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,0,0,-1,-1,-1,8,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,7,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,0,-1,-1,-1,7,0,2,-1,-1,-1,8,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,1,-1,-1,-1,-1,6,0,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,5,-1,-1,-1,-1,0,0,-1,-1,-1,6,7,2,-1,-1,0,0,5,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,4,-1,-1,0,7,-1,-1,-1,8,0,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,2,-1,-1,-1,3,4,1,-1,-1,5,6,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,2,-1,-1,7,0,-1,-1,-1,8,0,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,6,4,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,-1,-1,-1,8,0,2,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,2,-1,-1,0,7,-1,-1,-1,8,0,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,7,-1,-1,-1,8,0,2,-1,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,1,-1,-1,-1,-1,0,6,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,1,0,-1,-1,-1,5,6,2,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,-1,-1,6,7,2,-1,-1,0,0,5,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest98() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,0,6,-1,-1,-1,7,0,2,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,4,0,1,-1,-1,0,0,-1,-1,-1,7,0,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,-1,2,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,4,-1,-1,-1,5,6,2,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,4,-1,-1,5,6,2,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,1,-1,-1,-1,3,4,1,-1,-1,5,6,2,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,2,-1,-1,-1,-1,0,6,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,0,0,-1,-1,-1,5,6,2,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,6,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,8,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,-1,6,-1,-1,-1,5,7,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,7,8,2,-1,-1,-1,5,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,4,-1,-1,-1,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,-1,0,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,6,0,1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,7,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,1,-1,-1,-1,3,4,1,-1,-1,5,6,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,6,3,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,0,-1,-1,-1,8,0,2,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,7,-1,-1,-1,8,0,2,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
        }

        @Test
        public void TreeMapSolverTest99() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,3,1,-1,-1,5,6,2,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,6,-1,-1,-1,0,0,4,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,0,-1,-1,-1,5,6,2,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,0,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,5,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,2,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,-1,0,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,0,6,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,2,0,-1,-1,-1,5,0,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,0,-1,-1,-1,7,0,2,-1,-1,-1,5,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,-1,-1,-1,7,5,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,7,2,-1,-1,0,6,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,-1,-1,-1,8,0,2,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,3,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,1,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,4,-1,-1,-1,0,6,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,-1,-1,-1,6,7,2,-1,-1,4,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,1,-1,-1,-1,6,7,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,6,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest100() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,4,-1,-1,-1,-1,6,7,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,0,-1,-1,-1,7,0,2,-1,-1,1,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,3,-1,-1,-1,7,0,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,5,0,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,-1,-1,-1,6,0,2,-1,-1,6,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,3,-1,-1,6,0,2,-1,-1,0,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,0,0,-1,-1,-1,8,0,2,-1,-1,2,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,2,-1,-1,-1,3,4,1,-1,-1,0,5,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,4,-1,-1,-1,0,7,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,0,6,-1,-1,7,8,-1,-1,-1,4,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,0,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,7,-1,-1,-1,8,0,2,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,6,-1,-1,-1,-1,7,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,4,0,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,5,-1,-1,-1,-1,6,7,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,-1,-1,-1,8,6,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,4,-1,-1,-1,-1,6,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,2,-1,-1,-1,0,6,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,-1,-1,-1,-1,0,0,6,-1,-1,0,0,-1,-1,-1,4,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest101() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,2,-1,-1,-1,-1,0,0,-1,-1,-1,6,7,2,-1,-1,0,0,5,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,3,1,-1,-1,5,6,2,-1,-1,7,0,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,5,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,2,-1,-1,5,0,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,2,5,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,0,6,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,7,-1,-1,-1,8,0,2,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,0,1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,8,0,2,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,4,1,-1,-1,5,6,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,0,-1,-1,-1,6,8,2,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,6,2,-1,-1,0,0,4,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,6,0,2,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,7,0,2,-1,-1,-1,5,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,-1,-1,-1,8,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,2,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,7,2,-1,-1,0,5,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,5,6,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,0,-1,-1,-1,7,0,2,-1,-1,-1,6,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest102() {
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,0,0,6,-1,-1,0,8,-1,-1,-1,4,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,1,-1,-1,-1,3,4,1,-1,-1,0,5,2,-1,-1,6,0,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,0,6,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,6,7,2,-1,-1,0,0,5,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,7,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,6,-1,-1,-1,0,0,4,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,2,0,-1,-1,-1,5,6,2,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,7,0,2,-1,-1,5,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,4,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,0,-1,-1,-1,3,4,1,-1,-1,0,0,-1,-1,-1,5,0,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,2,-1,-1,-1,6,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,7,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,6,7,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,1,-1,-1,6,7,2,-1,-1,0,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,6,7,2,-1,-1,0,0,5,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,6,0,-1,-1,-1,5,7,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,5,-1,-1,-1,-1,0,6,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,0,-1,-1,-1,8,6,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,0,2,-1,-1,0,6,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest103() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,4,-1,-1,-1,-1,0,6,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,4,-1,-1,-1,0,-1,-1,-1,5,0,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,2,-1,-1,0,0,-1,-1,-1,5,6,2,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,7,8,2,-1,-1,3,0,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,1,-1,-1,-1,5,6,2,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,-1,-1,-1,-1,0,0,6,-1,-1,8,0,-1,-1,-1,4,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,7,-1,-1,-1,8,0,2,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,7,-1,-1,-1,8,0,2,-1,-1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,4,-1,-1,6,0,2,-1,-1,0,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,2,0,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,1,-1,-1,-1,0,0,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,0,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,-1,-1,-1,-1,0,0,6,-1,-1,0,0,-1,-1,-1,4,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,7,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,-1,0,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,3,-1,-1,-1,-1,0,0,-1,-1,-1,6,7,2,-1,-1,0,0,5,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,6,0,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,0,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,6,3,2,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest104() {
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,1,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,0,0,1,-1,-1,4,-1,-1,-1,-1,5,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,0,0,1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,0,1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,1,-1,-1,-1,0,6,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,4,-1,-1,0,5,2,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,6,7,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,0,6,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,5,-1,-1,-1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,7,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,0,0,2,-1,-1,2,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,0,4,1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,0,-1,-1,-1,6,7,2,-1,-1,0,0,5,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest105() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,0,6,-1,-1,-1,0,7,2,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,3,1,-1,-1,0,5,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,0,5,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,0,7,2,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,0,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,0,0,-1,-1,-1,0,8,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,4,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,0,-1,-1,-1,0,8,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,4,-1,-1,0,7,-1,-1,-1,0,0,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,0,-1,-1,0,5,2,-1,-1,0,6,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,4,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,7,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,8,-1,-1,-1,0,0,2,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,0,0,-1,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,6,-1,-1,7,8,-1,-1,-1,0,0,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,8,-1,-1,-1,0,0,2,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,0,0,-1,-1,-1,0,8,2,-1,-1,1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,7,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,5,-1,-1,-1,-1,0,6,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,0,-1,-1,-1,0,8,2,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest106() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,0,-1,-1,-1,0,-1,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,2,-1,-1,-1,6,7,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,-1,-1,-1,0,0,2,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,0,-1,-1,5,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,7,-1,-1,8,0,-1,-1,-1,0,0,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,7,0,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,2,-1,-1,-1,-1,6,7,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,0,0,-1,-1,-1,0,8,2,-1,-1,4,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,0,0,2,-1,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,5,6,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,0,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,5,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,5,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,7,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,4,1,-1,-1,5,6,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,0,8,-1,-1,-1,0,0,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,7,0,-1,-1,-1,-1,8,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest107() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,-1,-1,-1,0,8,2,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,7,-1,-1,-1,0,8,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,6,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,8,0,-1,-1,-1,0,0,2,-1,-1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,4,-1,-1,-1,-1,-1,-1,-1,-1,8,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,2,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,0,6,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,-1,-1,-1,0,8,2,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,0,-1,-1,-1,-1,0,6,2,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,6,-1,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,0,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,2,-1,-1,-1,3,4,1,-1,-1,-1,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,7,-1,-1,-1,0,8,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,-1,-1,-1,0,8,2,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,6,7,1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest108() {
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,3,-1,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,5,0,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,3,1,-1,-1,0,5,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,-1,-1,-1,0,0,2,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,6,-1,-1,0,0,-1,-1,-1,0,8,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,-1,-1,-1,0,0,2,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,7,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,0,7,-1,-1,-1,0,0,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,8,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,0,6,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,0,6,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,2,-1,-1,0,7,-1,-1,-1,0,8,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,0,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,0,-1,-1,-1,0,7,2,-1,-1,2,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,0,-1,-1,-1,-1,0,0,2,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,0,3,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,7,-1,-1,-1,0,0,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest109() {
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,6,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,8,-1,-1,-1,0,0,2,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,3,6,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,8,0,-1,-1,-1,0,0,2,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,0,0,-1,-1,-1,0,8,2,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,7,-1,-1,-1,0,8,2,-1,-1,2,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,5,-1,-1,-1,0,7,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,0,6,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,7,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,2,-1,-1,-1,7,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,-1,-1,-1,0,8,2,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,6,7,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,6,0,1,-1,-1,0,0,2,-1,-1,7,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,0,6,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,0,-1,-1,-1,0,7,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,0,-1,-1,-1,5,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,6,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,8,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest110() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,2,-1,-1,-1,0,6,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,8,-1,-1,-1,0,0,2,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,0,7,2,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,8,0,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,0,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,0,-1,-1,-1,0,8,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,4,-1,-1,5,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,6,3,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,0,0,2,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,0,-1,-1,-1,0,8,2,-1,-1,2,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,6,7,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,8,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,6,-1,-1,-1,7,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest111() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,0,-1,-1,-1,5,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,4,-1,-1,5,6,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,8,-1,-1,-1,0,0,2,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,0,-1,-1,5,6,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,0,0,2,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,2,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,0,1,-1,-1,-1,-1,-1,-1,-1,8,0,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,8,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,6,0,-1,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,0,5,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,0,-1,-1,-1,0,7,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,4,1,-1,-1,0,5,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,2,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,4,-1,-1,0,5,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,2,-1,-1,-1,3,4,1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,7,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,-1,-1,-1,0,0,2,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest112() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,6,0,1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,2,-1,-1,-1,0,7,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,7,-1,-1,-1,0,8,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,5,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,0,6,2,-1,-1,0,7,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,4,-1,-1,-1,-1,6,0,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,-1,-1,-1,0,8,2,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,-1,-1,-1,0,0,2,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,3,-1,-1,-1,6,7,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,5,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,7,-1,-1,-1,0,8,2,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,5,-1,-1,-1,6,7,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,4,5,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,6,-1,-1,7,0,-1,-1,-1,0,0,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest113() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,1,-1,-1,-1,3,4,1,-1,-1,0,5,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,6,-1,-1,-1,-1,7,0,2,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,1,-1,-1,-1,0,7,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,0,-1,-1,-1,0,8,2,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,0,-1,-1,-1,8,0,2,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,-1,-1,-1,8,0,2,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,3,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,-1,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,0,-1,-1,-1,7,0,2,-1,-1,-1,1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,7,2,-1,-1,0,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,7,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,1,-1,-1,-1,6,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,1,-1,-1,-1,3,4,1,-1,-1,0,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,6,0,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,0,-1,-1,-1,0,4,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,0,6,-1,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,0,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,6,-1,-1,0,6,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest114() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,6,0,-1,-1,0,0,4,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,0,5,-1,-1,6,0,-1,-1,-1,3,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,6,-1,-1,-1,0,0,4,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,4,-1,-1,5,0,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,7,-1,-1,-1,8,6,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,6,-1,-1,-1,0,0,4,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,7,0,2,-1,-1,0,6,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,8,-1,-1,-1,0,0,6,-1,-1,0,0,-1,-1,-1,4,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,0,-1,-1,-1,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,0,-1,-1,0,5,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,6,0,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,0,0,6,-1,-1,0,0,-1,-1,-1,4,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,7,0,2,-1,-1,2,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,0,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,0,5,-1,-1,6,7,-1,-1,-1,3,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,0,6,-1,-1,0,0,-1,-1,-1,4,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,7,0,2,-1,-1,-1,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,6,0,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,1,-1,-1,-1,6,0,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest115() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,7,-1,-1,-1,8,0,2,-1,-1,1,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,1,-1,-1,-1,-1,6,7,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,2,-1,-1,0,5,2,-1,-1,6,0,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,7,8,2,-1,-1,8,0,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,0,1,-1,-1,0,0,6,-1,-1,0,8,-1,-1,-1,4,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,0,-1,-1,-1,5,6,2,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,-1,-1,-1,8,0,2,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,5,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,6,7,2,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,7,-1,-1,-1,8,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,7,8,2,-1,-1,-1,4,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,6,-1,-1,6,0,2,-1,-1,0,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,2,-1,-1,-1,0,7,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,6,0,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,0,0,6,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,8,-1,-1,-1,6,0,2,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,-1,-1,-1,8,0,2,-1,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,6,-1,-1,-1,0,0,4,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest116() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,5,0,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,5,6,2,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,0,6,-1,-1,0,7,-1,-1,-1,4,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,6,7,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,2,-1,-1,-1,-1,0,6,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,2,-1,-1,0,5,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,6,-1,-1,0,0,-1,-1,-1,7,0,2,-1,-1,-1,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,0,-1,-1,-1,5,0,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,3,-1,-1,-1,5,6,2,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,0,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,6,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,0,-1,-1,-1,8,0,2,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,0,-1,-1,-1,3,4,1,-1,-1,-1,0,-1,-1,-1,5,0,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,-1,-1,-1,8,0,2,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,5,-1,-1,-1,-1,0,6,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,7,0,2,-1,-1,4,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,0,5,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,4,-1,-1,-1,-1,0,0,-1,-1,-1,6,7,2,-1,-1,0,0,5,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,6,0,2,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest117() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,0,-1,-1,-1,7,6,2,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,0,0,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,0,-1,-1,-1,-1,6,0,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,0,-1,-1,-1,7,0,2,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,0,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,7,-1,-1,0,0,-1,-1,-1,8,7,2,-1,-1,-1,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,0,7,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,6,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,7,-1,-1,-1,8,4,2,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,4,-1,-1,-1,0,0,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,0,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,6,7,2,-1,-1,0,0,5,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,4,-1,-1,0,0,-1,-1,-1,8,0,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,7,0,2,-1,-1,0,1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,3,-1,-1,-1,-1,0,6,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,-1,-1,-1,6,0,2,-1,-1,4,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,0,6,-1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,0,6,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,0,0,-1,-1,-1,8,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
        }

        @Test
        public void TreeMapSolverTest118() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,3,-1,-1,-1,0,7,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,0,1,-1,-1,-1,-1,-1,-1,-1,4,0,-1,-1,-1,8,0,2,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,0,7,-1,-1,-1,8,0,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,5,6,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,5,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,0,-1,-1,-1,8,0,2,-1,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,0,-1,-1,-1,6,5,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,6,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,-1,0,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,0,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,7,-1,-1,0,0,-1,-1,-1,8,0,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,7,0,2,-1,-1,0,3,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,1,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,5,-1,-1,-1,6,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,0,0,6,-1,-1,8,0,-1,-1,-1,4,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,0,-1,-1,-1,8,0,2,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,3,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,0,-1,-1,-1,3,4,1,-1,-1,5,0,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,7,-1,-1,-1,8,0,2,-1,-1,3,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,4,-1,-1,-1,-1,6,0,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest119() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,1,-1,-1,5,6,3,-1,-1,-1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,1,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,7,8,2,-1,-1,6,0,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,0,4,1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,2,-1,-1,-1,0,3,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,1,-1,-1,4,5,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,0,4,1,-1,-1,5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,1,-1,-1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,0,0,1,-1,-1,4,-1,-1,-1,-1,5,6,-1,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,1,-1,-1,4,5,0,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,0,6,2,-1,-1,7,3,2,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,0,0,1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,2,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,4,1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,3,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,3,-1,-1,-1,6,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,0,1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,0,-1,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,0,1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,7,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest120() {
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,6,0,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,5,-1,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,5,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,0,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,8,0,-1,-1,-1,0,0,2,-1,-1,3,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,0,8,-1,-1,-1,0,0,2,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,3,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,7,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,0,7,2,-1,-1,1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,7,0,-1,-1,-1,1,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,5,-1,-1,0,7,-1,-1,-1,0,0,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,0,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,-1,-1,-1,0,0,2,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,0,8,-1,-1,-1,0,0,2,-1,-1,4,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest121() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,8,-1,-1,-1,0,0,2,-1,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,4,-1,-1,0,0,-1,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,1,-1,-1,-1,3,4,1,-1,-1,5,6,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,6,-1,-1,-1,0,7,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,7,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,6,0,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,5,-1,-1,-1,7,0,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,0,-1,-1,-1,0,8,2,-1,-1,1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,4,-1,-1,-1,5,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,1,-1,-1,-1,3,4,1,-1,-1,5,6,2,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,2,-1,-1,5,0,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,-1,-1,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,7,-1,-1,0,8,-1,-1,-1,0,0,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest122() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,4,-1,-1,-1,6,0,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,1,-1,-1,-1,3,4,1,-1,-1,0,5,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,6,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,5,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,4,-1,-1,-1,0,0,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,4,-1,-1,-1,0,-1,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,4,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,8,-1,-1,-1,0,0,2,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,8,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,0,8,-1,-1,-1,0,0,2,-1,-1,1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,8,0,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,8,-1,-1,-1,0,0,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,0,-1,-1,-1,0,8,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,7,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,-1,-1,-1,0,6,2,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest123() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,3,-1,-1,0,5,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,0,6,2,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,2,-1,-1,-1,5,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,2,-1,-1,-1,7,0,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,0,-1,-1,0,5,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,7,0,-1,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,6,7,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,-1,-1,-1,0,0,2,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,6,7,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,3,0,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,3,1,-1,-1,0,5,2,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,8,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,0,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,8,-1,-1,-1,0,0,2,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,-1,-1,-1,0,6,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,1,-1,-1,-1,-1,0,6,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest124() {
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,4,7,1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,4,-1,-1,5,6,2,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,0,6,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,0,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,6,3,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,5,-1,-1,-1,-1,0,6,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,0,-1,-1,-1,3,4,1,-1,-1,5,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,0,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,5,6,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,0,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,6,-1,-1,-1,-1,0,7,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,8,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,2,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,4,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,0,6,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest125() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,6,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,0,6,-1,-1,-1,0,0,2,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,3,-1,-1,-1,7,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,5,-1,-1,-1,-1,6,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,7,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,4,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,0,0,-1,-1,-1,0,8,2,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,0,6,2,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,6,7,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,7,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,4,-1,-1,-1,-1,0,6,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,-1,-1,-1,0,8,2,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,0,6,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,-1,5,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,1,-1,-1,-1,0,0,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,2,-1,-1,-1,0,-1,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,0,0,2,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest126() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,0,0,-1,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,6,0,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,5,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,-1,-1,-1,0,6,2,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,5,-1,-1,-1,-1,6,0,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,8,0,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,3,5,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,4,7,1,-1,-1,0,0,-1,-1,-1,8,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,4,1,-1,-1,-1,0,-1,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,5,-1,-1,-1,-1,6,7,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,8,-1,-1,-1,0,0,2,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,-1,-1,-1,0,8,2,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,6,0,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,-1,-1,-1,0,8,2,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,3,-1,-1,-1,-1,0,6,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,0,-1,-1,-1,0,0,2,-1,-1,1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,3,-1,-1,-1,6,7,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,0,0,-1,-1,-1,5,0,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest127() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,-1,-1,-1,6,8,2,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,-1,-1,-1,8,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,6,7,2,-1,-1,0,0,5,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,7,0,2,-1,-1,3,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,3,-1,-1,-1,6,0,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,-1,8,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,0,-1,-1,0,5,2,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,0,-1,-1,-1,5,0,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,4,-1,-1,0,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,6,1,-1,-1,0,0,4,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,4,1,-1,-1,0,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,4,0,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,0,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,3,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,3,6,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,4,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest128() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,0,6,-1,-1,-1,7,5,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,8,-1,-1,0,0,-1,-1,-1,8,0,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,6,6,-1,-1,0,0,4,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,6,6,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,2,-1,-1,5,0,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,-1,-1,-1,6,7,2,-1,-1,0,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,0,-1,-1,0,0,-1,-1,-1,5,0,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,4,1,-1,-1,0,0,-1,-1,-1,5,0,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,0,-1,-1,-1,8,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,0,6,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,0,-1,-1,-1,7,0,2,-1,-1,-1,7,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,6,-1,-1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,0,-1,-1,-1,3,4,1,-1,-1,0,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,0,-1,-1,-1,0,-1,-1,-1,5,6,2,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,7,0,2,-1,-1,-1,6,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,2,-1,-1,-1,0,6,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,5,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,3,1,-1,-1,5,6,2,-1,-1,0,7,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest129() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,5,-1,-1,-1,-1,0,0,-1,-1,-1,6,0,2,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,1,5,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,0,5,-1,-1,0,6,2,-1,-1,3,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,5,-1,-1,-1,6,0,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,6,7,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,3,-1,-1,5,0,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,0,6,-1,-1,-1,7,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,2,-1,-1,-1,6,7,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,4,-1,-1,5,0,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,6,7,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,0,-1,-1,7,0,-1,-1,-1,8,0,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,0,-1,-1,-1,8,0,2,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,4,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,-1,0,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,-1,-1,-1,6,8,2,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,0,6,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,0,-1,-1,-1,8,0,2,-1,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,3,-1,-1,-1,-1,6,0,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,6,0,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest130() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,0,1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,6,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,0,-1,-1,-1,3,4,1,-1,-1,-1,0,-1,-1,-1,5,6,2,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,7,8,2,-1,-1,-1,3,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,0,5,-1,-1,0,0,-1,-1,-1,3,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,6,7,2,-1,-1,0,0,5,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,3,1,-1,-1,5,6,2,-1,-1,0,7,2,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,2,-1,-1,-1,5,0,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,7,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,5,-1,-1,0,7,-1,-1,-1,8,0,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,0,3,2,-1,-1,6,7,2,-1,-1,0,0,5,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,0,-1,-1,5,6,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,4,1,-1,-1,5,0,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,7,8,2,-1,-1,-1,1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,3,-1,-1,5,6,2,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,0,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,3,-1,-1,5,6,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,4,1,-1,-1,-1,0,-1,-1,-1,5,6,2,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,6,7,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
        }

        @Test
        public void TreeMapSolverTest131() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,3,0,-1,-1,-1,6,0,2,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,4,0,-1,-1,-1,5,6,2,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,1,-1,-1,5,0,1,-1,-1,-1,-1,-1,-1,-1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,1,-1,-1,5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,0,5,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,5,-1,-1,0,0,-1,-1,-1,7,0,2,-1,-1,-1,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,0,4,1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,7,-1,-1,0,8,-1,-1,-1,7,0,2,-1,-1,-1,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,0,1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,6,7,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,0,1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,2,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,7,0,-1,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,1,-1,-1,-1,-1,6,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,7,-1,-1,-1,8,0,2,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,0,0,-1,-1,-1,8,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
        }

        @Test
        public void TreeMapSolverTest132() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,7,-1,-1,-1,0,0,2,-1,-1,4,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,0,7,2,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,0,7,2,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,4,-1,-1,0,5,2,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,2,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,6,-1,-1,0,8,-1,-1,-1,0,0,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,2,-1,-1,7,8,-1,-1,-1,0,0,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,8,-1,-1,-1,0,0,2,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,8,-1,-1,-1,0,0,2,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,4,-1,-1,-1,-1,6,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,2,-1,-1,-1,3,4,1,-1,-1,0,5,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,8,-1,-1,-1,0,0,2,-1,-1,3,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,6,7,-1,-1,-1,0,0,2,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,8,-1,-1,-1,0,0,2,-1,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,0,-1,-1,-1,0,7,2,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest133() {
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,6,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,2,-1,-1,0,7,-1,-1,-1,0,0,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,5,-1,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,-1,-1,-1,0,8,2,-1,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,0,-1,-1,-1,0,0,2,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,8,-1,-1,-1,0,0,2,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,8,-1,-1,-1,0,0,2,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,8,-1,-1,-1,0,0,2,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,8,-1,-1,-1,0,0,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,4,5,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,0,-1,-1,-1,0,0,2,-1,-1,3,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,3,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,7,0,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,1,-1,-1,-1,6,7,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,-1,-1,-1,0,0,2,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,4,-1,-1,-1,7,8,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest134() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,4,-1,-1,8,0,-1,-1,-1,0,0,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,0,-1,-1,-1,0,8,2,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,3,1,-1,-1,0,0,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,6,-1,-1,-1,0,0,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,0,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,4,0,1,-1,-1,0,0,-1,-1,-1,0,7,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,8,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,2,-1,-1,-1,6,0,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,7,8,-1,-1,-1,0,0,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,8,-1,-1,8,0,-1,-1,-1,0,0,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,-1,-1,-1,0,8,2,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,0,8,-1,-1,-1,0,0,2,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,0,6,2,-1,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,6,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,2,-1,-1,0,0,-1,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,8,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,3,-1,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest135() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,3,-1,-1,-1,0,0,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,0,-1,-1,-1,0,8,2,-1,-1,4,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,-1,-1,-1,0,8,2,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,0,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,0,8,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,1,-1,-1,-1,3,4,1,-1,-1,5,6,2,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,0,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,4,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,8,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,5,6,2,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,0,7,2,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,0,-1,-1,-1,0,8,2,-1,-1,3,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,0,1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,0,8,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,0,0,2,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,1,5,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,4,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,7,-1,-1,-1,0,8,2,-1,-1,1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,7,-1,-1,-1,0,8,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest136() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,7,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,0,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,6,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,0,5,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,6,-1,-1,-1,0,0,4,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,0,-1,-1,-1,0,0,2,-1,-1,2,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,3,6,2,-1,-1,0,7,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,4,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,4,0,1,-1,-1,0,0,-1,-1,-1,0,7,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,3,-1,-1,-1,-1,0,0,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,6,5,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,1,-1,-1,-1,0,6,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,0,-1,-1,0,0,-1,-1,-1,8,0,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,0,-1,-1,0,5,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,0,-1,-1,-1,8,0,2,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,3,-1,-1,-1,0,0,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,7,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest137() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,6,0,1,-1,-1,7,0,2,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,7,0,2,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,0,0,6,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,4,-1,-1,5,6,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,7,-1,-1,-1,8,0,2,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,2,-1,-1,0,0,-1,-1,-1,7,0,2,-1,-1,-1,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,5,-1,-1,-1,0,6,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,0,-1,-1,5,0,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,6,5,-1,-1,0,0,4,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,0,-1,-1,0,0,-1,-1,-1,7,0,2,-1,-1,-1,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,6,0,2,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,7,-1,-1,-1,8,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,0,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,0,1,-1,-1,0,0,6,-1,-1,0,0,-1,-1,-1,4,8,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,0,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,7,0,2,-1,-1,7,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,5,-1,-1,-1,-1,6,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,0,1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,8,4,2,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,0,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
        }

        @Test
        public void TreeMapSolverTest138() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,-1,-1,-1,8,0,2,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,5,-1,-1,-1,6,7,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,-1,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,7,0,2,-1,-1,4,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,2,-1,-1,-1,3,4,1,-1,-1,-1,0,-1,-1,-1,5,0,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,0,0,-1,-1,-1,7,0,2,-1,-1,-1,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,1,-1,-1,-1,-1,0,6,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,-1,-1,-1,8,0,2,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,3,-1,-1,-1,-1,6,7,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,8,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,4,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,0,1,-1,-1,0,0,6,-1,-1,8,0,-1,-1,-1,4,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,3,-1,-1,5,0,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,3,0,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,0,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,2,-1,-1,0,0,-1,-1,-1,5,0,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,6,-1,-1,-1,0,0,4,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,2,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,7,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
        }

        @Test
        public void TreeMapSolverTest139() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,-1,-1,-1,5,7,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,2,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,0,2,-1,-1,0,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,0,5,-1,-1,0,6,-1,-1,-1,3,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,0,2,-1,-1,0,2,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,6,-1,-1,-1,0,0,4,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,0,6,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,0,-1,-1,-1,3,4,1,-1,-1,5,6,2,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,6,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,0,-1,-1,-1,8,0,2,-1,-1,4,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,-1,-1,-1,8,0,2,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,-1,-1,-1,6,7,2,-1,-1,7,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,0,-1,-1,-1,8,0,2,-1,-1,2,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,0,3,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,3,1,-1,-1,5,6,2,-1,-1,-1,0,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,-1,-1,-1,6,0,2,-1,-1,1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,7,0,2,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,1,-1,-1,-1,0,0,-1,-1,-1,6,0,2,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,0,-1,-1,5,0,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,6,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest140() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,8,-1,-1,-1,6,0,2,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,-1,-1,-1,6,0,2,-1,-1,5,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,4,1,-1,-1,0,5,2,-1,-1,6,0,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,0,2,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,0,3,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,1,-1,-1,-1,3,4,1,-1,-1,-1,0,-1,-1,-1,5,6,2,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,0,0,-1,-1,-1,5,6,2,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,1,-1,-1,4,5,5,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,1,-1,-1,4,5,5,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,0,4,1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,0,0,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest141() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,1,-1,-1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,0,1,-1,-1,5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,-1,-1,-1,0,0,2,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,5,-1,-1,-1,-1,6,0,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,8,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,0,3,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,3,-1,-1,0,6,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,2,-1,-1,-1,3,4,1,-1,-1,5,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,1,-1,-1,5,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,2,-1,-1,-1,3,4,1,-1,-1,-1,0,-1,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,8,-1,-1,-1,0,0,2,-1,-1,1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,0,-1,-1,-1,0,8,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,0,1,-1,-1,5,0,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,0,7,2,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,6,4,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,0,6,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest142() {
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,7,-1,-1,0,7,-1,-1,-1,0,0,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,1,-1,-1,-1,7,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,8,-1,-1,-1,0,0,2,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,3,-1,-1,-1,0,7,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,8,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,7,8,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,-1,-1,-1,0,8,2,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,7,0,-1,-1,-1,0,8,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,-1,-1,-1,0,8,2,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,3,1,-1,-1,0,5,2,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,5,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,6,5,2,-1,-1,0,7,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,5,-1,-1,-1,7,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,4,1,-1,-1,5,6,2,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest143() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,1,-1,-1,-1,6,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,0,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,0,0,2,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,1,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,4,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,-1,-1,-1,0,8,2,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,0,4,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,0,7,2,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,-1,-1,-1,0,0,2,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,0,0,-1,-1,-1,0,8,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,1,-1,-1,-1,3,4,1,-1,-1,-1,0,-1,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,1,-1,-1,-1,-1,6,7,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,7,-1,-1,-1,0,8,2,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,1,-1,-1,0,5,2,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,8,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,4,7,1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest144() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,0,6,-1,-1,-1,0,7,2,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,1,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,2,-1,-1,-1,3,4,1,-1,-1,0,0,-1,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,4,-1,-1,0,6,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,0,7,2,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,6,0,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,0,7,2,-1,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,0,-1,-1,-1,0,0,2,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,6,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,5,-1,-1,7,0,-1,-1,-1,0,0,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,7,-1,-1,8,0,-1,-1,-1,0,0,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,7,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,5,-1,-1,0,6,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,8,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,0,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest145() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,3,-1,-1,-1,6,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,5,-1,-1,0,0,-1,-1,-1,0,7,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,8,-1,-1,-1,0,0,2,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,3,-1,-1,-1,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,6,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,5,-1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,0,6,-1,-1,-1,0,0,2,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,-1,6,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,0,8,-1,-1,-1,0,0,2,-1,-1,2,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,0,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,0,-1,-1,-1,0,8,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,0,-1,-1,0,0,-1,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,0,-1,-1,-1,0,7,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,0,-1,-1,-1,0,8,2,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,0,-1,-1,-1,0,8,2,-1,-1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,1,-1,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,2,-1,-1,-1,0,0,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,2,-1,-1,-1,3,4,1,-1,-1,0,5,2,-1,-1,0,6,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest146() {
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,0,-1,-1,-1,8,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,7,8,2,-1,-1,-1,0,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,3,1,-1,-1,5,0,2,-1,-1,0,6,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,7,0,2,-1,-1,6,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,7,0,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,0,-1,-1,-1,7,8,2,-1,-1,0,0,6,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,5,6,2,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,7,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,6,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,4,-1,-1,-1,0,0,-1,-1,-1,6,0,2,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,0,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,-1,0,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,-1,1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,-1,-1,-1,6,7,2,-1,-1,5,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,2,-1,-1,-1,0,0,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,0,-1,-1,-1,7,0,2,-1,-1,2,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,7,-1,-1,7,0,-1,-1,-1,8,0,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,2,-1,-1,-1,3,4,1,-1,-1,0,0,-1,-1,-1,5,6,2,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest147() {
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,7,-1,-1,-1,8,0,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,7,8,2,-1,-1,-1,2,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,0,-1,-1,6,0,2,-1,-1,0,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,-1,0,-1,-1,-1,6,5,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,2,-1,-1,-1,3,4,1,-1,-1,-1,0,-1,-1,-1,5,6,2,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,5,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,0,-1,-1,-1,7,0,2,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,7,0,2,-1,-1,1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,5,-1,-1,0,0,-1,-1,-1,8,0,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,5,-1,-1,-1,0,0,-1,-1,-1,6,7,2,-1,-1,0,0,5,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,6,-1,-1,0,7,-1,-1,-1,8,0,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,6,7,1,-1,-1,8,0,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,6,0,2,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,0,0,-1,-1,-1,7,0,2,-1,-1,3,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,6,-1,-1,-1,0,0,4,-1,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,-1,0,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,0,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,8,0,2,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,1,-1,-1,-1,3,4,1,-1,-1,5,0,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,6,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,6,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest148() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,0,5,-1,-1,0,6,2,-1,-1,3,7,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,-1,-1,-1,-1,0,7,-1,-1,-1,8,6,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,0,6,2,-1,-1,7,5,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,7,0,-1,-1,-1,8,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,3,1,-1,-1,5,0,2,-1,-1,-1,6,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,3,-1,-1,6,7,2,-1,-1,0,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,4,-1,-1,6,7,2,-1,-1,0,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,7,0,2,-1,-1,2,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,6,7,2,-1,-1,0,0,5,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,0,0,-1,-1,-1,8,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,3,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,6,-1,-1,-1,0,0,4,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,2,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,0,-1,-1,-1,3,4,1,-1,-1,0,5,2,-1,-1,6,0,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,0,0,-1,-1,-1,5,0,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,5,-1,-1,0,6,2,-1,-1,5,0,2,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,0,-1,-1,-1,3,4,1,-1,-1,5,0,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,3,-1,-1,-1,5,0,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest149() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,5,0,2,-1,-1,0,6,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,5,-1,-1,-1,7,0,3,-1,-1,0,8,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,2,-1,-1,-1,-1,7,0,3,-1,-1,8,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,1,-1,-1,-1,0,7,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,1,-1,-1,-1,-1,7,0,3,-1,-1,0,8,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,7,2,-1,-1,0,2,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,0,-1,-1,-1,7,8,2,-1,-1,-1,7,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,3,-1,-1,0,8,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,7,8,2,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,0,-1,-1,-1,3,4,1,-1,-1,0,0,-1,-1,-1,5,6,2,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,0,2,-1,-1,6,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,3,-1,-1,8,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,0,4,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,6,-1,-1,6,7,2,-1,-1,0,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,7,8,2,-1,-1,0,0,6,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,0,2,-1,-1,0,3,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,3,0,-1,-1,-1,7,0,3,-1,-1,8,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,1,-1,-1,-1,0,0,-1,-1,-1,6,7,2,-1,-1,0,0,5,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,2,-1,-1,-1,-1,8,0,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
        }

        @Test
        public void TreeMapSolverTest150() {
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,7,8,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,7,-1,-1,-1,-1,0,0,4,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,2,-1,-1,5,0,2,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,6,7,1,-1,-1,0,0,6,-1,-1,0,0,-1,-1,-1,4,8,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,7,0,-1,-1,-1,8,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,2,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,8,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,4,1,-1,-1,6,7,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,2,-1,-1,5,0,2,-1,-1,6,7,2,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,7,-1,-1,-1,-1,0,0,4,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,4,1,-1,-1,6,0,-1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,6,7,2,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,0,2,-1,-1,6,7,-1,-1,-1,0,0,3,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,5,0,2,-1,-1,6,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,4,-1,-1,4,5,1,-1,-1,2,6,3,-1,-1,7,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,0,-1,-1,5,6,2,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,2,-1,-1,5,0,2,-1,-1,6,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,6,7,1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,8,4,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
        }

        @Test
        public void TreeMapSolverTest151() {
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,8,0,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,8,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,2,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,2,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,3,-1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,1,2,-1,-1,-1,3,4,1,-1,-1,5,0,2,-1,-1,6,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,8,3,-1,-1,4,0,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,0,0,5,-1,-1,4,0,3,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,4,5,5,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,0,2,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,0,0,5,-1,-1,4,7,3,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,3,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,7,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,4,1,-1,-1,6,0,-1,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,6,0,2,-1,-1,7,5,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,0,-1,-1,5,0,2,-1,-1,6,7,2,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,7,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,3,-1,-1,8,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,4,-1,-1,5,6,2,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest152() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,2,-1,-1,5,0,2,-1,-1,6,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,4,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,7,0,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,-1,-1,-1,7,4,1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,0,3,-1,-1,0,0,7,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,2,-1,-1,-1,3,4,1,-1,-1,5,0,2,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,7,0,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,2,-1,-1,-1,3,4,1,-1,-1,5,6,2,-1,-1,7,-1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,2,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,3,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,8,0,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,4,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,8,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,2,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,4,5,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,0,-1,-1,-1,7,0,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,0,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,0,7,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,3,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,0,3,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,4,6,1,-1,-1,7,0,3,-1,-1,0,0,-1,-1,-1,8,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,4,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,4,-1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,4,1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,7,0,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest153() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,5,-1,-1,-1,4,6,1,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,0,0,5,-1,-1,4,7,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,7,0,3,-1,-1,0,8,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,6,4,1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,6,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,4,2,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,-1,-1,-1,-1,5,2,1,-1,-1,-1,-1,-1,-1,-1,6,7,3,-1,-1,0,0,5,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,8,4,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,8,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,0,2,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,0,2,-1,-1,6,7,6,-1,-1,0,0,3,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,0,2,-1,-1,6,0,2,-1,-1,0,0,3,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,2,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,0,7,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,4,-1,-1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,5,0,2,-1,-1,6,0,2,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,-1,-1,-1,6,7,1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,8,4,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,2,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,3,-1,-1,0,8,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,0,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,2,-1,-1,-1,3,4,1,-1,-1,5,6,2,-1,-1,7,0,2,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,8,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,0,2,-1,-1,6,4,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest154() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,2,-1,-1,-1,-1,7,0,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,7,-1,-1,-1,-1,8,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,6,-1,-1,7,8,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,0,7,-1,-1,6,0,3,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,4,1,-1,-1,6,0,-1,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,6,7,2,-1,-1,5,0,2,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,0,1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,8,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,7,-1,-1,-1,-1,7,0,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,2,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,7,0,3,-1,-1,0,8,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,4,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,7,-1,-1,-1,-1,7,0,3,-1,-1,0,8,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,7,0,3,-1,-1,0,8,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,4,5,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,3,0,-1,-1,-1,7,0,3,-1,-1,0,8,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,6,7,1,-1,-1,0,0,6,-1,-1,0,0,-1,-1,-1,4,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,4,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,4,-1,-1,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,2,-1,-1,5,0,2,-1,-1,0,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,0,2,-1,-1,6,0,1,-1,-1,0,0,3,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,6,0,2,-1,-1,5,7,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest155() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,4,5,2,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,7,0,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,3,-1,-1,8,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,5,-1,-1,6,7,1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,0,3,-1,-1,0,5,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,4,5,-1,-1,-1,0,0,3,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,8,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,0,4,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,3,-1,-1,-1,7,0,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,7,-1,-1,-1,-1,0,0,4,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,1,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,7,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,6,-1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,0,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,0,2,-1,-1,0,4,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,5,-1,-1,6,5,1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,7,0,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,8,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,0,8,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,4,-1,-1,5,6,2,-1,-1,0,7,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,3,-1,-1,2,5,1,-1,-1,0,0,2,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,8,0,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,1,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,0,8,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest156() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,2,-1,-1,-1,7,0,3,-1,-1,0,8,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,7,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,0,2,-1,-1,-1,3,4,1,-1,-1,5,6,2,-1,-1,0,-1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,0,3,-1,-1,0,4,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,4,5,4,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,7,4,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,8,3,-1,-1,0,4,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,2,0,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,0,8,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,0,7,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,8,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,0,5,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,4,0,1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,0,2,-1,-1,0,2,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,7,0,3,-1,-1,0,8,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,8,0,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,6,-1,-1,7,6,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,8,0,3,-1,-1,0,0,7,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,7,-1,-1,-1,-1,0,0,4,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,3,-1,-1,4,8,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,3,-1,-1,5,0,2,-1,-1,6,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,0,8,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,0,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,8,0,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
        }

        @Test
        public void TreeMapSolverTest157() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,7,-1,-1,-1,-1,0,8,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,1,2,-1,-1,-1,3,4,1,-1,-1,0,5,2,-1,-1,6,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,4,-1,-1,4,5,1,-1,-1,0,2,3,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,0,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,7,8,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,0,5,2,-1,-1,6,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,0,-1,-1,0,5,2,-1,-1,0,6,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,4,-1,-1,0,5,2,-1,-1,6,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,3,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,7,3,-1,-1,0,8,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,0,8,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,3,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,7,8,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,6,7,2,-1,-1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,-1,4,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,8,3,-1,-1,0,4,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,1,-1,-1,6,2,3,-1,-1,0,7,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,4,-1,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest158() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,4,5,2,-1,-1,-1,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,0,-1,-1,-1,0,0,3,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,3,-1,-1,8,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,5,0,-1,-1,-1,0,7,3,-1,-1,8,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,0,4,3,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,2,-1,-1,-1,3,4,1,-1,-1,0,5,2,-1,-1,6,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,3,-1,-1,0,5,2,-1,-1,6,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,1,0,-1,-1,-1,0,7,3,-1,-1,0,8,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,0,-1,-1,0,5,2,-1,-1,6,7,2,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,7,-1,-1,-1,-1,0,0,4,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,4,-1,-1,5,6,2,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,8,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,5,-1,-1,-1,6,4,1,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,-1,4,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,1,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,2,-1,-1,-1,0,7,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,0,0,5,-1,-1,7,4,3,-1,-1,8,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,1,2,-1,-1,-1,3,4,1,-1,-1,0,5,2,-1,-1,0,6,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,6,-1,-1,-1,0,7,3,-1,-1,0,8,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,0,-1,-1,5,6,2,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest159() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,5,-1,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,6,1,-1,-1,0,0,5,-1,-1,7,4,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,-1,4,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,7,2,-1,-1,0,0,3,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,4,2,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,4,7,3,-1,-1,8,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,6,7,2,-1,-1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,0,7,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,1,-1,-1,2,6,3,-1,-1,0,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,8,3,-1,-1,4,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,0,2,-1,-1,-1,3,4,1,-1,-1,0,5,2,-1,-1,0,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,8,3,-1,-1,4,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,4,5,-1,-1,-1,-1,4,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,2,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,7,3,-1,-1,8,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,6,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
        }

        @Test
        public void TreeMapSolverTest160() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,6,5,2,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,3,-1,-1,8,4,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1,-1,0,4,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,5,-1,-1,-1,-1,0,7,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,8,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,0,5,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,0,7,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,2,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,5,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,7,8,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,8,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,2,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,7,-1,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,4,1,-1,-1,6,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,8,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,0,1,-1,-1,0,0,3,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,5,-1,-1,6,7,1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,-1,0,5,-1,-1,-1,0,0,6,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,0,5,2,-1,-1,6,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,2,-1,-1,0,5,2,-1,-1,0,6,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,2,-1,-1,5,6,2,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,4,-1,-1,5,6,2,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest161() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,7,-1,-1,-1,-1,0,0,4,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,3,-1,-1,8,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,4,-1,-1,-1,0,7,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,3,-1,-1,0,8,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,-1,0,4,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,-1,-1,-1,7,4,1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,-1,0,0,7,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,4,6,1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,2,0,-1,-1,-1,0,7,3,-1,-1,8,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,5,-1,-1,-1,0,7,3,-1,-1,0,8,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,7,-1,-1,-1,-1,0,0,4,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,3,-1,-1,8,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,2,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,3,-1,-1,0,8,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,3,-1,-1,0,8,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,0,0,5,-1,-1,7,4,3,-1,-1,8,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,3,-1,-1,0,8,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,-1,4,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,0,-1,-1,0,5,2,-1,-1,6,0,2,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest162() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,7,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,4,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,7,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,8,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,4,7,3,-1,-1,8,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,0,6,2,-1,-1,7,5,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,1,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,0,7,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,2,-1,-1,-1,-1,0,8,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,1,2,-1,-1,-1,3,4,1,-1,-1,5,6,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,7,3,-1,-1,0,8,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,0,0,5,-1,-1,7,4,3,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,7,-1,-1,-1,0,7,3,-1,-1,8,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,2,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,7,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,0,0,5,-1,-1,7,4,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,3,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,8,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,0,5,2,-1,-1,0,6,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,3,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,-1,4,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,6,1,-1,-1,0,0,5,-1,-1,7,4,3,-1,-1,8,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest163() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,0,-1,-1,5,6,2,-1,-1,7,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,0,6,2,-1,-1,5,0,2,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,4,1,-1,-1,0,0,-1,-1,-1,6,7,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,7,-1,-1,-1,-1,0,0,4,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,3,-1,-1,2,5,1,-1,-1,0,0,2,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,6,-1,-1,-1,0,7,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,7,2,-1,-1,0,0,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,3,-1,-1,0,5,2,-1,-1,6,7,2,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,4,-1,-1,4,5,1,-1,-1,6,2,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,3,-1,-1,2,6,1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,6,1,-1,-1,0,0,5,-1,-1,7,4,3,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,5,-1,-1,-1,0,7,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,7,5,-1,-1,0,0,3,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,1,-1,-1,2,6,3,-1,-1,0,7,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,3,-1,-1,5,6,2,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,2,0,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,4,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,0,-1,-1,5,6,2,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,1,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,5,-1,-1,-1,4,6,1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest164() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,5,-1,-1,-1,0,7,3,-1,-1,8,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,4,1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,1,0,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,0,7,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,0,-1,-1,-1,4,5,2,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,4,5,-1,-1,-1,5,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,5,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,4,7,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,-1,0,4,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,2,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,7,8,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,0,2,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,0,-1,-1,0,5,2,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,0,7,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,1,-1,-1,-1,0,4,2,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,1,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,1,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,7,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,8,3,-1,-1,0,4,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,3,-1,-1,4,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,-1,-1,-1,6,7,1,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1,-1,0,4,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,0,-1,-1,5,6,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest165() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,1,-1,-1,-1,4,5,1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,6,7,1,-1,-1,0,0,6,-1,-1,0,0,-1,-1,-1,0,4,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,1,2,-1,-1,-1,3,4,1,-1,-1,5,6,2,-1,-1,7,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,4,1,-1,-1,6,0,-1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,7,3,-1,-1,8,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,2,-1,-1,-1,3,4,1,-1,-1,5,6,2,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,0,2,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,4,5,5,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,4,5,2,-1,-1,-1,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,-1,4,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,0,1,-1,-1,6,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,1,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,7,8,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,2,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,5,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,6,7,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,3,-1,-1,5,0,1,-1,-1,0,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,2,-1,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
        }

        @Test
        public void TreeMapSolverTest166() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,4,1,-1,-1,0,6,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,0,0,2,-1,-1,6,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,4,-1,-1,0,0,2,-1,-1,5,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,0,2,3,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,0,0,2,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,4,1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,3,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,-1,-1,-1,4,6,1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,0,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,6,4,1,-1,-1,7,8,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,3,-1,-1,-1,0,0,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,4,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,0,2,-1,-1,5,0,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,0,0,3,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest167() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,2,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,0,5,2,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,2,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,4,1,-1,-1,0,0,-1,-1,-1,6,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,4,6,1,-1,-1,7,0,3,-1,-1,0,0,-1,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,5,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,3,-1,-1,5,0,2,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,3,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,1,-1,-1,-1,-1,7,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,2,0,-1,-1,-1,7,0,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,7,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,1,2,-1,-1,-1,3,4,1,-1,-1,0,5,2,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,7,0,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,4,1,-1,-1,0,6,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest168() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,8,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,0,8,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,8,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,6,7,2,-1,-1,5,0,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,8,3,-1,-1,0,4,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,5,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,2,-1,-1,5,6,2,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,4,7,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,-1,-1,0,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,5,6,2,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,6,5,2,-1,-1,7,0,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,6,5,2,-1,-1,0,-1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,8,7,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest169() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,5,6,2,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,2,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,3,-1,-1,5,6,2,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,4,-1,-1,5,6,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,5,6,2,-1,-1,7,0,2,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,6,7,2,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,-1,-1,-1,6,7,1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,4,8,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,7,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,8,0,3,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,2,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,4,5,-1,-1,-1,-1,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,2,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,0,2,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,5,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,8,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,4,1,-1,-1,0,0,-1,-1,-1,6,7,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,0,2,-1,-1,-1,3,4,1,-1,-1,5,6,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest170() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,3,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,0,1,-1,-1,6,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,6,5,2,-1,-1,7,-1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,4,5,-1,-1,-1,3,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,0,1,-1,-1,6,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,6,7,2,-1,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,6,7,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,0,2,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,2,-1,-1,-1,4,5,2,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,2,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,0,1,-1,-1,0,1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,0,2,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,4,1,-1,-1,0,6,-1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,-1,-1,-1,-1,4,2,1,-1,-1,5,6,3,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,4,0,1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest171() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,0,2,-1,-1,5,0,5,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,2,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,0,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,3,-1,-1,-1,-1,0,0,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,7,0,-1,-1,-1,0,0,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,4,-1,-1,-1,0,0,3,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,0,4,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,3,-1,-1,-1,0,0,3,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,5,-1,-1,6,7,1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,8,5,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,0,0,2,-1,-1,5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,6,-1,-1,7,6,1,-1,-1,-1,-1,-1,-1,-1,8,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,0,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,0,3,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest172() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,2,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,0,8,3,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,5,-1,-1,-1,0,7,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,4,1,-1,-1,6,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,0,2,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,4,1,-1,-1,6,0,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,3,-1,-1,-1,0,7,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,5,-1,-1,-1,0,7,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,3,-1,-1,4,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,4,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,0,7,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest173() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,6,0,-1,-1,-1,7,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,5,0,2,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,0,2,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,4,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,0,2,-1,-1,-1,3,4,1,-1,-1,5,0,2,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,4,6,1,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,0,2,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,3,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,3,-1,-1,-1,8,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,4,-1,-1,5,0,2,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,0,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,1,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,2,1,-1,-1,-1,-1,-1,-1,-1,6,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,5,0,2,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,4,1,-1,-1,0,6,-1,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,4,-1,-1,-1,7,0,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,0,2,-1,-1,6,0,4,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,5,-1,-1,-1,7,0,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,2,0,3,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest174() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,6,7,1,-1,-1,0,0,6,-1,-1,0,0,-1,-1,-1,8,4,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,3,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,8,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,8,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,8,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,4,6,1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,4,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,4,5,-1,-1,-1,-1,2,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,0,-1,-1,5,6,2,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,0,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,8,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,2,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,4,-1,-1,4,5,1,-1,-1,6,2,3,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,2,1,-1,-1,-1,-1,-1,-1,-1,6,7,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,4,6,1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,4,1,-1,-1,0,6,-1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
        }

        @Test
        public void TreeMapSolverTest175() {
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,0,2,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,3,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,1,2,-1,-1,-1,3,4,1,-1,-1,5,6,2,-1,-1,7,0,2,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,1,0,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,4,5,0,-1,-1,-1,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,2,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,1,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,4,5,2,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,1,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,3,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,8,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,7,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,4,7,3,-1,-1,0,8,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,2,1,-1,-1,-1,-1,-1,-1,-1,6,7,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,3,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,3,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
        }

        @Test
        public void TreeMapSolverTest176() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,6,0,1,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,4,-1,-1,5,6,2,-1,-1,7,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,0,-1,-1,-1,4,0,1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,5,-1,-1,-1,6,7,1,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1,-1,8,4,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,5,-1,-1,6,7,1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,5,8,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,0,0,3,-1,-1,6,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,4,1,-1,-1,0,6,-1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,4,7,3,-1,-1,8,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,0,1,-1,-1,6,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,-1,-1,-1,6,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,0,2,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,1,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,4,5,-1,-1,-1,-1,5,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,4,5,-1,-1,-1,1,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,5,-1,-1,6,7,1,-1,-1,0,-1,-1,-1,-1,0,0,6,-1,-1,8,5,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,3,-1,-1,2,4,1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
        }

        @Test
        public void TreeMapSolverTest177() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,3,-1,-1,-1,-1,0,0,3,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,0,2,-1,-1,5,6,0,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,4,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,-1,-1,-1,7,4,1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,0,2,-1,-1,5,6,6,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,4,6,1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,1,-1,-1,-1,-1,0,7,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,0,-1,-1,0,5,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,3,-1,-1,-1,0,0,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,8,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,-1,-1,-1,4,7,1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,-1,0,0,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,7,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,-1,-1,-1,4,7,1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest178() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,0,2,-1,-1,6,7,4,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,2,-1,-1,-1,3,4,1,-1,-1,0,5,2,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,3,-1,-1,-1,7,0,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,0,2,3,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,4,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,4,-1,-1,5,0,2,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,4,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,2,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,6,0,-1,-1,-1,0,7,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,2,0,3,-1,-1,6,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,4,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,7,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,2,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,2,0,-1,-1,-1,7,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest179() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,0,0,5,-1,-1,7,4,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,-1,-1,-1,4,6,1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,2,0,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,8,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,4,5,0,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,1,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,0,2,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,3,-1,-1,-1,4,5,2,-1,-1,-1,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,5,-1,-1,-1,4,6,1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,0,1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,4,7,3,-1,-1,0,8,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,4,5,2,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,0,0,5,-1,-1,7,4,3,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,4,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,2,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,1,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,8,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,-1,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,4,1,-1,-1,6,0,-1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,8,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest180() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,0,0,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,-1,-1,-1,-1,-1,0,3,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,8,3,-1,-1,4,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,0,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,0,6,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,7,-1,-1,-1,8,7,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,-1,-1,-1,-1,5,2,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,0,2,-1,-1,-1,3,4,1,-1,-1,5,6,2,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,2,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,8,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,2,-1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,8,3,-1,-1,0,4,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,4,5,-1,-1,-1,-1,3,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,-1,-1,-1,-1,-1,7,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,3,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest181() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,0,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,0,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,4,-1,-1,0,0,2,-1,-1,5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,0,5,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,5,-1,-1,-1,8,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,-1,-1,-1,4,6,1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,-1,-1,-1,7,8,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,4,3,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,0,3,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,2,-1,-1,-1,-1,0,0,3,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,0,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,0,3,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,7,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,4,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,0,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,8,-1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,1,2,-1,-1,-1,3,4,1,-1,-1,0,5,2,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,4,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,2,-1,-1,-1,4,5,1,-1,-1,0,0,3,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,3,-1,-1,2,4,1,-1,-1,5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest182() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,3,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,2,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,2,-1,-1,-1,7,0,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,2,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,6,-1,-1,-1,7,0,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,3,-1,-1,2,6,1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,0,-1,-1,5,0,2,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,3,-1,-1,4,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,4,-1,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,0,1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,8,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,0,2,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest183() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,4,8,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,1,0,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,6,4,1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,0,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,2,-1,-1,5,6,2,-1,-1,7,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,4,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,5,6,2,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,0,8,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,6,7,2,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,3,-1,-1,2,6,1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,4,1,-1,-1,6,0,-1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,4,5,-1,-1,-1,2,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,2,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,4,5,-1,-1,-1,-1,6,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,8,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,-1,-1,-1,-1,5,2,1,-1,-1,-1,-1,-1,-1,-1,6,7,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,6,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest184() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,6,7,2,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,1,-1,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,2,-1,-1,-1,3,4,1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,0,2,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,2,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,8,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,-1,-1,-1,6,7,1,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1,-1,8,4,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,5,-1,-1,-1,4,0,1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,1,-1,-1,2,6,3,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,4,0,1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,3,-1,-1,2,6,1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,8,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,0,1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,0,0,3,-1,-1,6,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,0,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,4,-1,-1,0,0,2,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,3,-1,-1,5,6,2,-1,-1,7,0,2,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,0,0,2,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,4,5,6,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,4,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest185() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,3,-1,-1,-1,4,5,1,-1,-1,0,0,3,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,4,1,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,6,-1,-1,7,6,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,8,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,1,-1,-1,-1,4,5,1,-1,-1,0,0,3,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,1,2,-1,-1,-1,3,4,1,-1,-1,0,0,2,-1,-1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,3,-1,-1,0,0,2,-1,-1,5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,5,-1,-1,6,5,1,-1,-1,0,-1,-1,-1,-1,0,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,0,2,-1,-1,5,0,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,1,7,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,1,-1,-1,-1,0,0,3,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,0,2,3,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,3,0,-1,-1,-1,0,0,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,5,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,4,6,1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,0,8,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,0,2,-1,-1,5,6,2,-1,-1,2,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest186() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,-1,-1,-1,4,6,1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,-1,-1,-1,6,4,1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,5,6,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,2,-1,-1,-1,0,7,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,6,-1,-1,-1,7,0,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,4,1,-1,-1,0,6,-1,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,3,-1,-1,2,5,1,-1,-1,-1,-1,-1,-1,-1,6,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,4,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,8,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,1,2,-1,-1,-1,3,4,1,-1,-1,5,6,2,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,1,2,-1,-1,-1,3,4,1,-1,-1,5,0,2,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,5,-1,-1,6,5,1,-1,-1,0,-1,-1,-1,-1,0,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,7,0,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,4,1,-1,-1,6,0,-1,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,6,4,1,-1,-1,7,0,-1,-1,-1,0,0,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,1,0,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,7,0,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,4,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,4,6,1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest187() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,0,5,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,8,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,7,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,8,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,2,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,1,-1,-1,2,6,3,-1,-1,7,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,1,-1,-1,-1,4,5,2,-1,-1,-1,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,3,-1,-1,5,6,2,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,4,5,3,-1,-1,-1,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,1,2,-1,-1,-1,3,4,1,-1,-1,5,6,2,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,7,-1,-1,-1,-1,8,7,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,8,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,6,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,8,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,0,2,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,3,-1,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,4,5,6,-1,-1,-1,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,6,-1,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,6,7,2,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,4,7,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest188() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,2,0,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,4,-1,-1,-1,0,0,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,4,-1,-1,-1,5,0,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,0,2,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,4,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,0,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,4,1,-1,-1,0,0,-1,-1,-1,6,7,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,4,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,4,-1,-1,-1,5,0,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,-1,4,-1,-1,-1,5,0,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,-1,-1,-1,-1,-1,7,6,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,0,3,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,8,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,3,-1,-1,2,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,1,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,7,8,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,4,6,1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest189() {
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,7,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,1,2,-1,-1,-1,3,4,1,-1,-1,0,5,2,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,1,-1,-1,-1,0,7,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,4,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,4,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,0,0,2,-1,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,2,0,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,0,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,2,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,0,0,3,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,0,8,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,3,-1,-1,2,5,1,-1,-1,-1,-1,-1,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,3,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,1,0,-1,-1,-1,4,5,1,-1,-1,0,0,3,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,0,5,2,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest190() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,8,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,2,-1,-1,-1,3,4,1,-1,-1,5,0,2,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,3,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,0,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,4,-1,-1,5,6,2,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,3,-1,-1,5,0,2,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,4,5,5,-1,-1,-1,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,0,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,4,-1,-1,5,0,2,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,5,0,2,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,3,-1,-1,5,6,2,-1,-1,7,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,5,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,3,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,5,0,2,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,0,2,-1,-1,-1,3,4,1,-1,-1,5,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,0,-1,-1,5,0,2,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,4,-1,-1,5,0,2,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest191() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,0,2,-1,-1,-1,3,4,1,-1,-1,5,6,2,-1,-1,7,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,6,0,3,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,7,0,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,4,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,4,6,1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,7,0,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,3,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,0,2,-1,-1,-1,3,4,1,-1,-1,5,6,2,-1,-1,7,0,2,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,8,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,6,7,1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,4,8,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,4,5,-1,-1,-1,4,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,-1,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,5,6,2,-1,-1,7,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,7,0,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,0,2,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,4,-1,-1,-1,0,-1,-1,-1,5,0,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,0,6,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,3,-1,-1,2,6,1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,8,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,0,6,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,6,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
        }

        @Test
        public void TreeMapSolverTest192() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,1,2,-1,-1,-1,3,4,1,-1,-1,5,0,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,7,0,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,6,5,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,5,-1,-1,-1,7,0,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,7,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,3,-1,-1,-1,5,0,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,5,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,7,0,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,5,-1,-1,-1,5,0,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,8,0,3,-1,-1,0,0,7,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,8,0,3,-1,-1,0,0,7,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,5,0,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,4,-1,-1,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,7,0,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,5,-1,-1,6,7,1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,0,-1,-1,-1,8,0,3,-1,-1,0,0,7,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,5,-1,-1,-1,0,0,-1,-1,-1,7,0,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,8,-1,-1,-1,-1,0,0,-1,-1,-1,8,0,3,-1,-1,0,0,7,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest193() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,7,0,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,7,-1,-1,-1,8,0,-1,-1,-1,7,0,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,-1,-1,-1,6,0,2,-1,-1,7,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,2,-1,-1,-1,5,6,2,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,-1,-1,-1,4,7,1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,0,3,-1,-1,0,0,7,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,4,-1,-1,0,0,-1,-1,-1,5,0,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,0,-1,-1,5,6,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,2,-1,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,6,0,2,-1,-1,7,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,4,1,-1,-1,6,7,3,-1,-1,0,8,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,6,-1,-1,-1,-1,7,0,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,0,0,7,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,-1,4,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,6,0,3,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,7,0,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,-1,-1,-1,7,5,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,6,7,2,-1,-1,-1,2,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,3,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,7,0,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest194() {
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,-1,-1,-1,6,0,2,-1,-1,2,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,4,-1,-1,5,4,1,-1,-1,2,6,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,0,-1,-1,-1,0,0,-1,-1,-1,7,0,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,0,5,2,-1,-1,6,0,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,4,0,3,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,2,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,6,7,2,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,3,-1,-1,0,0,-1,-1,-1,5,0,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,2,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,1,0,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,0,3,-1,-1,-1,4,0,2,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,-1,-1,-1,6,4,1,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,0,0,3,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,4,0,-1,-1,-1,7,8,3,-1,-1,0,0,6,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,0,0,-1,-1,-1,5,6,2,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,4,1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,4,1,-1,-1,6,7,3,-1,-1,8,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,0,0,3,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest195() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,2,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,6,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,0,0,3,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,0,-1,-1,0,0,-1,-1,-1,5,6,2,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,0,0,3,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,6,7,2,-1,-1,6,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,2,-1,-1,0,0,-1,-1,-1,5,0,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,1,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,0,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,4,-1,-1,-1,5,6,2,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,4,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,6,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,-1,-1,-1,7,8,1,-1,-1,0,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,4,0,3,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,8,0,3,-1,-1,0,0,7,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,3,-1,-1,-1,-1,7,0,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,2,-1,-1,-1,5,0,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,-1,6,-1,-1,-1,5,0,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,6,-1,-1,0,0,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest196() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,0,0,6,-1,-1,7,0,-1,-1,-1,4,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,1,0,-1,-1,-1,5,6,2,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,6,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,3,-1,-1,5,2,1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,4,5,6,-1,-1,0,0,3,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,7,0,-1,-1,-1,0,0,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,1,2,-1,-1,-1,3,4,1,-1,-1,0,5,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,5,-1,-1,6,5,1,-1,-1,0,-1,-1,-1,-1,7,0,3,-1,-1,0,8,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,-1,5,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,7,0,-1,-1,-1,7,0,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,6,0,2,-1,-1,5,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,5,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,0,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,8,0,3,-1,-1,0,0,7,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,6,0,-1,-1,-1,7,5,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,2,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,6,0,3,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,0,-1,-1,-1,5,6,2,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,5,-1,-1,-1,6,4,1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,3,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest197() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,-1,-1,-1,6,7,1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,8,4,3,-1,-1,0,0,7,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,0,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,7,0,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,0,6,2,-1,-1,-1,1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,7,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,8,0,3,-1,-1,0,0,7,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,0,6,3,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,2,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,6,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,2,0,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,6,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,4,-1,-1,6,0,2,-1,-1,0,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,0,0,-1,-1,-1,8,0,3,-1,-1,0,0,7,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,0,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,2,0,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,0,6,3,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,5,0,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,1,2,-1,-1,-1,3,4,1,-1,-1,0,0,-1,-1,-1,0,5,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,6,7,3,-1,-1,0,0,5,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,8,0,3,-1,-1,0,0,7,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,6,0,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest198() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,4,6,1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,0,-1,-1,5,0,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,5,6,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,7,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,4,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,6,7,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,3,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,3,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,8,3,-1,-1,0,0,7,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,7,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,6,7,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,1,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,6,1,-1,-1,0,0,6,-1,-1,7,8,-1,-1,-1,0,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,4,1,-1,-1,0,6,3,-1,-1,7,8,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,0,6,2,-1,-1,0,4,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,-1,-1,-1,6,4,1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,4,5,0,-1,-1,-1,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,0,5,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,4,6,1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
        }

        @Test
        public void TreeMapSolverTest199() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,2,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,0,0,6,-1,-1,7,8,-1,-1,-1,0,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,5,-1,-1,-1,4,6,1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,7,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,0,-1,-1,0,5,2,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,-1,0,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,8,3,-1,-1,0,0,7,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,5,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,2,0,-1,-1,-1,0,5,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,0,-1,-1,0,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,4,7,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,4,7,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,0,-1,-1,5,6,2,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,4,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,7,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,3,0,-1,-1,-1,0,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,2,-1,-1,-1,3,4,1,-1,-1,0,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,1,-1,-1,6,7,2,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,6,7,1,-1,-1,0,0,7,-1,-1,0,0,-1,-1,-1,0,8,-1,-1,-1,0,4,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,0,6,3,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,1,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,6,7,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest200() {
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,6,1,-1,-1,0,0,6,-1,-1,7,0,-1,-1,-1,0,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,4,-1,-1,-1,5,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,5,-1,-1,6,5,1,-1,-1,0,-1,-1,-1,-1,0,7,3,-1,-1,0,8,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,0,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,6,7,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,1,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,4,-1,-1,-1,-1,0,0,-1,-1,-1,0,7,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,0,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,-1,4,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,-1,-1,-1,6,7,2,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,0,0,6,-1,-1,0,7,-1,-1,-1,8,4,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,4,-1,-1,5,0,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,4,1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,8,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,2,6,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,7,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,6,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,-1,-1,-1,7,4,1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,6,7,-1,-1,-1,0,5,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,1,-1,-1,-1,0,0,-1,-1,-1,0,8,3,-1,-1,0,0,7,-1"));
        }

        @Test
        public void TreeMapSolverTest201() {
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,6,7,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,-1,4,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,5,-1,-1,0,6,2,-1,-1,0,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,4,-1,-1,0,0,-1,-1,-1,5,6,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,0,2,-1,-1,-1,6,7,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,0,6,2,-1,-1,6,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,-1,0,-1,-1,-1,5,6,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,0,6,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,4,-1,-1,-1,0,5,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,6,7,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,5,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,7,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,5,-1,-1,-1,-1,7,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,5,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,5,0,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
        }

        @Test
        public void TreeMapSolverTest202() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,7,2,-1,-1,0,1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,5,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,2,-1,-1,-1,3,4,1,-1,-1,0,0,-1,-1,-1,0,5,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,6,7,2,-1,-1,5,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,0,6,3,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,4,1,-1,-1,6,7,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,3,-1,-1,5,6,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,-1,-1,-1,6,7,2,-1,-1,4,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,0,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,7,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,7,2,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,6,-1,-1,7,8,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,0,8,-1,-1,0,0,-1,-1,-1,0,6,3,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,3,-1,-1,-1,4,5,2,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,0,3,-1,-1,-1,0,4,2,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,-1,-1,-1,0,6,2,-1,-1,2,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,8,3,-1,-1,0,0,7,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,4,-1,-1,5,4,1,-1,-1,0,2,3,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,2,-1,-1,-1,5,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest203() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,4,1,-1,-1,0,6,3,-1,-1,0,7,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,4,5,2,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,-1,5,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,0,8,3,-1,-1,0,0,7,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,3,-1,-1,-1,0,0,-1,-1,-1,0,8,3,-1,-1,0,0,7,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,-1,6,-1,-1,-1,0,5,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,0,-1,-1,-1,5,6,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,7,-1,-1,-1,0,0,-1,-1,-1,0,7,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,0,5,2,-1,-1,0,6,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,7,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,0,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,8,3,-1,-1,0,0,7,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,0,6,2,-1,-1,0,7,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,8,3,-1,-1,0,0,7,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,5,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,7,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,-1,1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest204() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,4,-1,-1,-1,7,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,0,6,2,-1,-1,-1,2,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,1,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,0,6,2,-1,-1,5,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,4,-1,-1,-1,0,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,4,5,6,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,3,-1,-1,6,2,1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,0,0,6,-1,-1,7,8,-1,-1,-1,0,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,-1,-1,-1,7,5,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,0,6,2,-1,-1,2,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,4,1,-1,-1,6,7,3,-1,-1,8,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,0,8,3,-1,-1,0,0,7,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,6,-1,-1,7,6,2,-1,-1,0,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,0,-1,-1,-1,0,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,3,0,-1,-1,-1,5,6,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,2,6,3,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,-1,4,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,7,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,2,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
        }

        @Test
        public void TreeMapSolverTest205() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,8,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,0,5,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,4,6,1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,-1,-1,-1,0,4,1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,-1,-1,-1,4,6,1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,7,0,-1,-1,-1,7,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,4,7,1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,8,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,4,1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,6,7,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,4,1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,3,5,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,5,-1,-1,-1,6,4,1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,0,6,1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,3,-1,-1,-1,7,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,-1,-1,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,2,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest206() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,2,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,0,5,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,4,5,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,6,7,2,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,1,3,-1,-1,-1,0,4,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,0,2,-1,-1,-1,3,4,1,-1,-1,0,0,-1,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,1,-1,-1,-1,-1,0,0,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,0,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,4,-1,-1,-1,5,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,6,4,1,-1,-1,7,0,3,-1,-1,0,0,-1,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,0,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,0,6,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,2,-1,-1,-1,-1,0,0,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,3,-1,-1,-1,5,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,3,0,-1,-1,-1,7,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest207() {
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,7,2,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,6,0,-1,-1,-1,7,5,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,1,2,-1,-1,-1,3,4,1,-1,-1,0,0,-1,-1,-1,5,6,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,2,-1,-1,5,0,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,6,-1,-1,7,8,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,6,4,1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,6,7,2,-1,-1,-1,8,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,7,2,-1,-1,0,5,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,4,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,0,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,6,7,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,6,7,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,0,5,2,-1,-1,6,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,8,-1,-1,-1,4,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,7,0,-1,-1,-1,4,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
        }

        @Test
        public void TreeMapSolverTest208() {
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,5,0,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,0,-1,-1,-1,0,-1,-1,-1,5,6,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,3,-1,-1,6,2,1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,6,7,2,-1,-1,-1,3,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,4,-1,-1,5,4,1,-1,-1,6,2,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,4,0,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,3,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,0,2,-1,-1,-1,3,4,1,-1,-1,5,0,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,-1,-1,-1,6,7,2,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,4,-1,-1,5,4,1,-1,-1,6,2,3,-1,-1,7,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,-1,0,-1,-1,-1,5,6,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,0,6,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,1,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,-1,3,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,4,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest209() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,1,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,4,-1,-1,0,5,2,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,1,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,3,-1,-1,0,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,6,-1,-1,6,7,2,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,2,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,0,0,6,-1,-1,7,0,-1,-1,-1,8,4,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,0,5,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,5,0,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,2,0,-1,-1,-1,6,7,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,0,5,2,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,2,0,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,6,7,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,0,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,7,2,-1,-1,0,4,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,4,0,-1,-1,-1,5,6,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,-1,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,3,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,6,7,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest210() {
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,7,-1,-1,-1,8,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,3,-1,-1,4,2,1,-1,-1,5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,0,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,5,-1,-1,-1,0,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,6,-1,-1,-1,-1,0,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,5,6,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,2,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,6,-1,-1,7,8,1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,6,7,1,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,-1,-1,-1,0,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,3,-1,-1,-1,0,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,6,1,-1,-1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,3,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest211() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,6,7,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,0,6,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,3,-1,-1,5,6,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,0,-1,-1,-1,7,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,3,-1,-1,5,2,1,-1,-1,-1,-1,-1,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,2,0,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,6,-1,-1,-1,0,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,0,6,2,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,7,-1,-1,-1,0,8,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,4,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,2,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,8,-1,-1,-1,0,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,2,-1,-1,-1,7,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,4,1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,2,-1,-1,-1,0,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest212() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,2,5,1,-1,-1,-1,-1,-1,-1,-1,6,7,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,1,3,-1,-1,-1,4,5,2,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,-1,5,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,0,2,-1,-1,-1,3,4,1,-1,-1,0,0,-1,-1,-1,5,6,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,7,0,-1,-1,-1,0,0,-1,-1,-1,8,7,3,-1,-1,0,0,6,-1,-1,0,0,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,4,-1,-1,5,4,1,-1,-1,6,2,3,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,4,6,1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,-1,6,-1,-1,-1,5,7,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,0,8,-1,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,0,0,6,-1,-1,7,0,-1,-1,-1,8,4,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,0,-1,-1,-1,6,5,2,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,3,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,4,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,0,0,6,-1,-1,0,7,-1,-1,-1,8,4,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,5,-1,-1,-1,4,6,1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,1,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest213() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,4,-1,-1,5,0,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,0,-1,-1,6,7,2,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,4,5,5,-1,-1,-1,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,3,-1,-1,-1,5,6,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,0,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,4,8,3,-1,-1,0,0,7,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,6,1,-1,-1,0,0,6,-1,-1,0,0,-1,-1,-1,7,4,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,6,7,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,3,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,7,-1,-1,-1,4,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,4,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,5,-1,-1,-1,6,5,2,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,6,7,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,4,-1,-1,0,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,4,-1,-1,-1,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
        }

        @Test
        public void TreeMapSolverTest214() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,6,-1,-1,0,7,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,6,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,1,-1,-1,-1,5,6,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,7,-1,-1,-1,4,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,4,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,-1,-1,-1,0,6,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,0,3,2,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,5,-1,-1,-1,0,4,1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,0,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,0,5,2,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,2,-1,-1,-1,3,4,1,-1,-1,0,0,-1,-1,-1,5,6,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,6,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,0,5,1,-1,-1,6,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,0,5,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest215() {
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,6,-1,-1,-1,7,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,5,-1,-1,-1,4,6,1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,4,1,-1,-1,0,6,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,-1,-1,-1,7,8,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,0,-1,-1,-1,0,-1,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,5,-1,-1,6,5,1,-1,-1,0,-1,-1,-1,-1,0,7,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,3,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,1,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,8,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,5,-1,-1,-1,-1,7,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,2,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,0,0,-1,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,0,6,2,-1,-1,4,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest216() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,5,0,-1,-1,-1,0,7,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,4,6,1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,4,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,3,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,0,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,5,-1,-1,6,7,1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,5,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,-1,-1,-1,6,4,1,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,4,0,-1,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,2,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,4,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,1,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,0,2,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,4,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest217() {
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,0,0,-1,-1,-1,5,6,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,-1,-1,-1,5,7,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,0,0,6,-1,-1,0,0,-1,-1,-1,7,4,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,0,6,2,-1,-1,5,7,2,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,7,0,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,3,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,6,0,-1,-1,-1,5,7,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,0,0,-1,-1,-1,5,6,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,4,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,7,2,-1,-1,0,2,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,4,5,1,-1,-1,-1,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,2,5,1,-1,-1,-1,-1,-1,-1,-1,6,7,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,2,-1,-1,-1,5,6,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,0,-1,-1,-1,5,6,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest218() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,-1,0,-1,-1,-1,6,5,2,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,2,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,4,5,0,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,7,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,-1,-1,-1,0,6,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,7,2,-1,-1,0,3,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,3,-1,-1,-1,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,0,5,1,-1,-1,6,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,5,-1,-1,6,7,1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,7,2,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,1,7,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,6,7,1,-1,-1,0,0,7,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,8,4,3,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,3,-1,-1,-1,0,4,1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,0,6,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,-1,-1,-1,6,7,2,-1,-1,3,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
        }

        @Test
        public void TreeMapSolverTest219() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,5,6,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,4,-1,-1,5,6,2,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,5,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,8,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,7,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,6,0,-1,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,3,-1,-1,-1,-1,7,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,-1,6,-1,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,2,-1,-1,-1,-1,0,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,7,0,-1,-1,-1,0,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,7,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,2,-1,-1,-1,-1,7,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,7,-1,-1,-1,7,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest220() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,2,-1,-1,-1,0,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,7,0,-1,-1,-1,4,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,0,-1,-1,0,5,2,-1,-1,6,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,2,-1,-1,0,5,2,-1,-1,0,6,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,0,2,-1,-1,-1,3,4,1,-1,-1,0,0,-1,-1,-1,5,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,4,1,-1,-1,6,0,3,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,0,0,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,-1,-1,-1,4,6,1,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,6,5,2,-1,-1,0,7,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,1,3,-1,-1,-1,4,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,-1,-1,-1,6,7,1,-1,-1,0,0,7,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,8,4,3,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,0,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,1,0,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,4,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,4,1,-1,-1,0,6,3,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,6,-1,-1,0,7,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,4,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,2,-1,-1,-1,3,4,1,-1,-1,0,0,-1,-1,-1,5,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest221() {
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,-1,4,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,6,7,2,-1,-1,1,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,5,-1,-1,6,7,1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,5,8,3,-1,-1,0,0,7,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,6,7,2,-1,-1,-1,2,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,0,-1,-1,5,0,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,-1,-1,0,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,0,2,-1,-1,-1,3,4,1,-1,-1,0,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,0,6,-1,-1,-1,7,5,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,8,7,3,-1,-1,0,0,6,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,-1,-1,-1,6,7,2,-1,-1,2,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,2,-1,-1,-1,0,-1,-1,-1,5,6,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,2,7,3,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,4,5,3,-1,-1,-1,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,4,1,-1,-1,6,7,3,-1,-1,8,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,4,5,5,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest222() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,0,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,3,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,4,1,-1,-1,6,7,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,0,-1,-1,-1,0,5,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,6,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,5,-1,-1,-1,8,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,4,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,5,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,4,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,0,5,1,-1,-1,0,6,-1,-1,-1,0,0,3,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,-1,-1,-1,6,4,1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,3,-1,-1,-1,-1,7,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest223() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,5,6,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,0,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,3,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,7,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,5,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,7,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,1,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,2,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,0,6,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,4,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,7,-1,-1,-1,-1,0,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,4,1,-1,-1,0,6,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,0,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,-1,-1,-1,0,0,2,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,5,-1,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,-1,0,-1,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest224() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,5,-1,-1,-1,6,4,1,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,7,0,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,4,5,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,4,-1,-1,-1,7,0,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,4,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,6,0,2,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,4,1,-1,-1,6,0,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,7,-1,-1,-1,4,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,6,-1,-1,-1,-1,7,0,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,6,7,2,-1,-1,8,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,5,-1,-1,-1,6,7,1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,4,8,3,-1,-1,0,0,7,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,6,5,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,6,4,1,-1,-1,7,0,3,-1,-1,0,0,-1,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,5,6,2,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,3,-1,-1,6,2,1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,2,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest225() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,2,0,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,2,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,6,7,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,2,-1,-1,0,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,-1,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,2,-1,-1,0,0,-1,-1,-1,5,6,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,6,7,2,-1,-1,2,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,2,3,-1,-1,-1,4,5,2,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,6,7,2,-1,-1,-1,7,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,5,-1,-1,-1,4,6,1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,-1,-1,-1,6,7,1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,4,8,3,-1,-1,0,0,7,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,2,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,6,7,2,-1,-1,4,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,6,0,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,-1,-1,-1,6,7,2,-1,-1,1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,7,0,-1,-1,-1,4,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,6,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,4,-1,-1,-1,5,6,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest226() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,3,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,1,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,1,0,-1,-1,-1,5,6,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,2,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,8,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,3,-1,-1,-1,8,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,0,0,6,-1,-1,0,0,-1,-1,-1,7,4,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,0,2,-1,-1,-1,3,4,1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,1,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,8,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,0,0,2,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,1,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,1,2,-1,-1,-1,3,4,1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,0,5,1,-1,-1,2,6,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,0,5,1,-1,-1,1,6,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,2,0,-1,-1,-1,0,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,4,1,-1,-1,0,0,3,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,0,-1,-1,-1,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest227() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,6,7,1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,0,-1,-1,5,6,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,0,6,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,7,0,-1,-1,-1,7,0,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,4,-1,-1,-1,0,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,3,-1,-1,0,5,2,-1,-1,6,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,2,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,6,7,2,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,5,0,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,0,-1,-1,-1,0,4,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,2,-1,-1,5,6,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,-1,-1,-1,0,6,2,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,6,-1,-1,7,6,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,8,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,3,-1,-1,0,0,-1,-1,-1,5,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest228() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,0,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,6,7,2,-1,-1,-1,6,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,1,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,2,0,-1,-1,-1,5,6,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,6,7,2,-1,-1,-1,1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,0,0,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,4,1,-1,-1,6,7,3,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,-1,-1,-1,6,7,2,-1,-1,8,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,4,1,-1,-1,6,7,3,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,1,0,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,0,0,7,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,8,4,3,-1,-1,0,0,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,2,-1,-1,-1,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,4,5,-1,-1,-1,-1,6,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,5,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
        }

        @Test
        public void TreeMapSolverTest229() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,3,-1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,2,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,0,-1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,0,0,1,-1,-1,3,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,6,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,2,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,6,7,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,-1,-1,-1,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,6,1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,-1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,0,1,-1,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,6,7,2,-1,-1,-1,5,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,7,2,-1,-1,0,6,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,-1,0,-1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest230() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,0,0,2,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,4,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,2,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,0,-1,-1,5,6,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,6,0,-1,-1,-1,7,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,6,-1,-1,-1,7,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,4,-1,-1,-1,5,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,8,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,2,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,8,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,4,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest231() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,3,-1,-1,5,6,2,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,2,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,6,-1,-1,7,8,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,3,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,3,-1,-1,0,5,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,-1,-1,-1,0,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,2,-1,-1,-1,-1,7,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,5,-1,-1,6,5,1,-1,-1,0,-1,-1,-1,-1,0,7,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,4,-1,-1,5,6,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,0,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,-1,0,4,3,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest232() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,5,-1,-1,-1,0,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,4,1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,8,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,4,-1,-1,-1,7,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,3,5,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,7,-1,-1,-1,0,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,0,6,2,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,0,-1,-1,0,5,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,5,6,2,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,0,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,6,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,7,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,5,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,6,-1,-1,7,8,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,6,3,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,6,-1,-1,0,6,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,3,-1,-1,5,6,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest233() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,0,6,2,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,6,0,-1,-1,-1,7,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,7,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,3,-1,-1,-1,0,-1,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,6,0,-1,-1,-1,7,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,4,1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,-1,5,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,4,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,0,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,2,-1,-1,-1,7,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,5,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,6,5,2,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,1,-1,-1,-1,0,0,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,1,0,-1,-1,-1,7,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,6,-1,-1,7,6,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,0,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest234() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,8,1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,4,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,4,0,-1,-1,-1,0,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,1,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,-1,-1,-1,7,4,1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,7,0,-1,-1,-1,0,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,5,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,3,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,0,-1,-1,0,5,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,5,-1,-1,-1,6,4,1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,4,1,-1,-1,0,0,3,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,4,1,-1,-1,0,0,3,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest235() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,2,6,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,4,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,2,-1,-1,0,5,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,0,0,2,-1,-1,1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,8,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,4,3,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,4,7,1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,5,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,7,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,2,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,2,-1,-1,-1,0,-1,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,6,-1,-1,-1,7,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,4,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,1,0,-1,-1,-1,7,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,6,7,1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest236() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,-1,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,0,5,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,4,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,5,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,4,1,-1,-1,0,0,3,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,0,6,2,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,0,0,2,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,3,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,7,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,7,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,4,0,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,0,6,2,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,5,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,1,0,-1,-1,-1,0,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,4,-1,-1,-1,0,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,4,1,-1,-1,0,0,3,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,2,-1,-1,-1,-1,0,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,0,-1,-1,5,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,0,6,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest237() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,7,0,-1,-1,-1,7,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,2,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,2,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,4,1,-1,-1,0,6,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,8,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,0,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,1,0,-1,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,3,-1,-1,-1,-1,0,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,-1,-1,-1,4,6,1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,6,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,1,-1,-1,-1,7,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,-1,-1,-1,4,6,1,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,0,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,3,-1,-1,0,0,-1,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest238() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,0,2,-1,-1,-1,3,4,1,-1,-1,5,6,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,1,-1,-1,-1,-1,0,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,5,-1,-1,-1,0,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,5,-1,-1,-1,4,6,1,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,0,-1,-1,5,6,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,-1,-1,-1,0,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,7,0,-1,-1,-1,0,8,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,0,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,4,6,1,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,1,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,0,-1,-1,0,5,2,-1,-1,0,6,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,5,6,2,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,7,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest239() {
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,5,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,8,0,3,-1,-1,0,0,7,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,1,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,6,0,3,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,-1,0,-1,-1,-1,5,6,2,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,6,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,6,1,-1,-1,0,0,4,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,2,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,3,-1,-1,0,5,2,-1,-1,6,0,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,1,0,-1,-1,-1,0,0,-1,-1,-1,7,0,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,7,8,3,-1,-1,0,0,6,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,6,0,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,6,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,6,7,2,-1,-1,5,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,4,1,-1,-1,6,7,3,-1,-1,0,8,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,1,-1,-1,-1,5,6,2,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,7,0,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,-1,0,-1,-1,-1,5,0,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,5,-1,-1,6,0,2,-1,-1,0,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,5,0,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,-1,-1,-1,6,4,1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,5,-1,-1,6,7,2,-1,-1,0,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest240() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,6,0,-1,-1,-1,0,7,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,6,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,4,-1,-1,-1,-1,7,0,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,6,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,0,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,7,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,7,0,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,4,0,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,6,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,0,-1,-1,0,0,-1,-1,-1,5,0,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,3,5,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,5,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,6,7,3,-1,-1,0,0,5,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,3,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,6,7,3,-1,-1,0,0,5,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,4,-1,-1,-1,-1,0,7,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,1,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,2,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,4,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
        }

        @Test
        public void TreeMapSolverTest241() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,0,0,-1,-1,-1,8,0,3,-1,-1,0,0,7,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,4,1,-1,-1,6,0,3,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,2,-1,-1,-1,-1,0,0,-1,-1,-1,7,0,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,5,-1,-1,-1,6,4,1,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,1,0,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,4,-1,-1,-1,0,0,-1,-1,-1,7,0,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,4,6,1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,-1,6,-1,-1,-1,7,5,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,0,6,-1,-1,-1,7,5,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,0,2,-1,-1,-1,6,0,3,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,0,-1,-1,-1,5,0,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,6,1,-1,-1,0,0,6,-1,-1,7,0,-1,-1,-1,4,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,1,-1,-1,6,7,2,-1,-1,0,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,3,-1,-1,5,0,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,7,0,-1,-1,-1,8,4,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,6,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,8,0,3,-1,-1,0,0,7,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,0,0,7,-1,-1,-1,-1,-1,-1,-1,8,0,-1,-1,-1,4,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,8,0,3,-1,-1,0,0,7,-1"));
        }

        @Test
        public void TreeMapSolverTest242() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,0,2,-1,-1,-1,3,4,1,-1,-1,0,0,-1,-1,-1,5,0,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,0,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,6,0,3,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,7,0,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,6,-1,-1,0,0,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,6,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,0,6,2,-1,-1,5,0,2,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,6,-1,-1,0,0,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,6,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,4,0,-1,-1,-1,0,0,-1,-1,-1,7,0,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,4,7,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,4,0,-1,-1,-1,5,0,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,1,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,6,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,7,0,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,6,-1,-1,-1,0,0,4,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,0,2,-1,-1,0,6,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,6,-1,-1,-1,0,0,4,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,2,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,2,-1,-1,-1,-1,0,7,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
        }

        @Test
        public void TreeMapSolverTest243() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,4,6,1,-1,-1,7,0,-1,-1,-1,0,0,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,4,6,1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,7,0,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,6,7,3,-1,-1,0,0,5,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,4,0,-1,-1,-1,5,6,2,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,6,7,2,-1,-1,1,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,7,0,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,7,0,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,6,3,-1,-1,0,0,4,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,0,-1,-1,-1,0,-1,-1,-1,5,6,2,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,2,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,5,-1,-1,6,7,1,-1,-1,0,-1,-1,-1,-1,0,0,7,-1,-1,0,8,-1,-1,-1,5,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,7,0,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,0,2,-1,-1,-1,6,7,3,-1,-1,0,0,5,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,8,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,6,7,2,-1,-1,-1,3,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,1,0,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest244() {
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,8,0,3,-1,-1,0,0,7,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,6,0,2,-1,-1,-1,2,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,4,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,7,0,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,4,-1,-1,-1,-1,0,0,-1,-1,-1,7,0,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,7,0,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,2,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,7,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,7,0,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,0,-1,-1,6,0,2,-1,-1,0,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,4,0,-1,-1,-1,0,7,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,5,-1,-1,-1,4,6,1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,7,0,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,6,-1,-1,-1,0,0,4,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,5,-1,-1,-1,-1,7,0,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,4,1,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,8,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,6,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,5,-1,-1,6,7,1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,8,0,3,-1,-1,0,0,7,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,6,-1,-1,-1,0,7,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,6,-1,-1,7,6,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,8,0,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
        }

        @Test
        public void TreeMapSolverTest245() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,6,0,-1,-1,-1,5,0,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,2,-1,-1,-1,-1,7,0,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,0,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,7,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,-1,-1,-1,5,0,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,4,0,-1,-1,-1,7,8,3,-1,-1,0,0,6,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,4,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,6,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,1,2,-1,-1,-1,3,4,1,-1,-1,5,6,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,8,0,3,-1,-1,0,0,7,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,1,-1,-1,-1,0,0,-1,-1,-1,7,0,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,7,-1,-1,-1,-1,7,0,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,0,2,-1,-1,-1,3,4,1,-1,-1,0,5,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,0,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,6,1,-1,-1,0,0,6,-1,-1,0,0,-1,-1,-1,4,7,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,3,-1,-1,-1,5,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,6,-1,-1,-1,0,0,4,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,1,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,6,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,7,0,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,0,7,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
        }

        @Test
        public void TreeMapSolverTest246() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,0,-1,-1,-1,0,5,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,1,-1,-1,6,0,2,-1,-1,0,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,3,-1,-1,0,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,2,-1,-1,5,0,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,5,6,2,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,0,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,0,-1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,-1,-1,-1,4,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,1,2,-1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,0,1,-1,-1,1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,6,-1,-1,7,8,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,2,5,1,-1,-1,-1,-1,-1,-1,-1,6,7,3,-1,-1,0,0,5,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,-1,6,-1,-1,-1,5,7,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,-1,-1,-1,6,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,8,7,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,-1,-1,-1,5,7,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,2,-1,-1,-1,4,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest247() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,6,-1,-1,-1,-1,7,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,2,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,0,6,2,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,0,1,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,0,-1,-1,-1,0,4,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,5,-1,-1,6,0,1,-1,-1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,4,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,5,6,2,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,4,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,2,-1,-1,-1,0,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,3,-1,-1,-1,0,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,0,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,8,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,-1,-1,-1,-1,-1,7,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,7,-1,-1,-1,-1,7,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest248() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,8,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,6,-1,-1,-1,0,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,6,7,1,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,2,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,-1,-1,-1,4,7,1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,8,-1,-1,-1,-1,0,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,1,-1,-1,-1,0,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,4,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,8,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,8,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest249() {
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,7,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,0,6,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,4,0,-1,-1,-1,7,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,4,-1,-1,5,0,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,2,-1,-1,-1,3,4,1,-1,-1,0,5,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,6,5,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,2,5,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,4,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,4,6,1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest250() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,0,-1,-1,0,6,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,5,0,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,2,0,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,2,-1,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,8,-1,-1,-1,0,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,7,7,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,-1,-1,-1,0,0,2,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,0,6,2,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,7,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,2,0,-1,-1,-1,7,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,6,-1,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,4,-1,-1,-1,-1,0,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,6,7,-1,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,0,0,2,-1,-1,2,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,4,1,-1,-1,0,0,3,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest251() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,3,-1,-1,0,6,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,0,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,4,-1,-1,-1,0,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,0,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,7,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,2,0,-1,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,-1,-1,-1,7,4,1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,-1,-1,-1,4,7,1,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,7,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,0,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,4,1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,0,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,0,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,4,6,1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,1,0,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,4,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest252() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,4,-1,-1,0,5,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,2,5,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,0,-1,-1,-1,0,0,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,6,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,4,1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,0,0,2,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,0,6,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,-1,-1,-1,4,6,1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,5,-1,-1,-1,4,6,1,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,2,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,0,6,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest253() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,7,-1,-1,0,8,2,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,4,7,1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,0,5,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,7,-1,-1,-1,0,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,2,-1,-1,-1,-1,8,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,7,0,-1,-1,-1,0,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,8,7,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,2,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,7,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,4,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,2,-1,-1,-1,7,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,2,6,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,6,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest254() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,0,2,-1,-1,-1,3,4,1,-1,-1,5,0,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,3,-1,-1,-1,-1,0,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,2,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,-1,-1,-1,4,7,1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,4,1,-1,-1,0,0,3,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,4,0,-1,-1,-1,7,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,5,-1,-1,-1,0,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,0,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,3,-1,-1,5,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,4,1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,7,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,8,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,4,0,-1,-1,-1,0,0,3,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,3,-1,-1,-1,7,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,3,-1,-1,5,0,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,5,-1,-1,6,7,1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,5,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest255() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,0,0,6,-1,-1,0,0,-1,-1,-1,4,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,-1,-1,-1,6,7,2,-1,-1,7,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,0,2,-1,-1,-1,3,4,1,-1,-1,0,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,6,-1,-1,6,0,2,-1,-1,0,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,2,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,7,0,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,1,-1,-1,0,6,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,0,0,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,7,0,-1,-1,-1,8,4,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,3,0,-1,-1,-1,0,0,-1,-1,-1,7,0,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,6,0,-1,-1,0,0,4,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,5,0,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,4,1,-1,-1,6,7,3,-1,-1,8,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,1,-1,-1,-1,0,7,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,4,-1,-1,-1,0,7,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,7,0,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,7,0,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,0,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,7,0,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,7,0,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,6,-1,-1,7,8,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,0,8,-1,-1,0,0,-1,-1,-1,6,0,3,-1"));
        }

        @Test
        public void TreeMapSolverTest256() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,0,0,7,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,4,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,0,6,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,2,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,6,7,3,-1,-1,0,0,5,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,4,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,6,-1,-1,0,0,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,2,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,6,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,4,0,-1,-1,-1,7,8,3,-1,-1,0,0,6,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,-1,-1,-1,6,0,2,-1,-1,5,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,6,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,3,-1,-1,5,0,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,1,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,7,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,4,-1,-1,-1,7,0,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,6,7,-1,-1,-1,5,0,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,6,-1,-1,-1,0,0,4,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,5,-1,-1,6,7,1,-1,-1,0,-1,-1,-1,-1,0,0,7,-1,-1,0,0,-1,-1,-1,5,8,3,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,4,6,1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,6,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,-1,-1,-1,6,7,2,-1,-1,5,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest257() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,6,0,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,0,-1,-1,-1,8,0,3,-1,-1,0,0,7,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,4,-1,-1,5,0,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,8,0,3,-1,-1,0,0,7,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,4,-1,-1,5,0,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,-1,6,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,6,0,3,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,6,-1,-1,-1,0,0,4,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,4,-1,-1,5,4,1,-1,-1,2,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,0,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,6,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,4,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,7,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,7,2,-1,-1,0,6,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,1,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,4,1,-1,-1,6,0,3,-1,-1,0,7,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,0,6,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,4,6,1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,0,-1,-1,5,6,2,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest258() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,6,0,3,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,2,-1,-1,0,0,-1,-1,-1,5,6,2,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,5,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,6,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,6,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,6,4,1,-1,-1,7,0,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,6,6,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,3,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,4,-1,-1,0,5,2,-1,-1,6,0,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,7,0,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,6,0,3,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,0,5,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,2,-1,-1,-1,0,7,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,-1,0,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,5,6,2,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,7,-1,-1,-1,8,4,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,3,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,7,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,0,5,2,-1,-1,6,0,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest259() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,-1,-1,-1,6,7,1,-1,-1,0,0,7,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,4,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,6,7,3,-1,-1,0,0,5,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,2,-1,-1,-1,0,0,-1,-1,-1,8,0,3,-1,-1,0,0,7,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,2,5,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,3,-1,-1,-1,-1,0,0,-1,-1,-1,8,0,3,-1,-1,0,0,7,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,4,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,8,0,3,-1,-1,0,0,7,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,5,-1,-1,-1,6,7,1,-1,-1,0,0,7,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,-1,4,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,8,4,3,-1,-1,0,0,7,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,6,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,0,0,6,-1,-1,0,0,-1,-1,-1,4,7,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,0,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,6,7,3,-1,-1,0,0,5,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,7,0,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,5,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,6,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,3,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,6,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,-1,0,-1,-1,-1,5,0,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,7,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
        }

        @Test
        public void TreeMapSolverTest260() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,3,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,3,-1,-1,5,2,1,-1,-1,0,0,2,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,0,5,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,0,-1,-1,-1,7,0,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,0,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,0,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,3,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,6,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,2,3,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,0,5,2,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,7,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,0,5,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,4,-1,-1,5,4,1,-1,-1,2,6,3,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,4,-1,-1,6,7,2,-1,-1,0,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,7,-1,-1,-1,7,0,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,7,-1,-1,-1,8,4,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,7,2,-1,-1,0,1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,7,0,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest261() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,4,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,7,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,2,0,-1,-1,-1,7,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,0,1,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,0,1,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,4,1,-1,-1,0,5,1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,8,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,0,1,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,5,-1,-1,-1,-1,0,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,3,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,0,1,-1,-1,5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,-1,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,7,8,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,2,-1,-1,-1,7,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,0,4,1,-1,-1,0,5,1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,0,1,-1,-1,4,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,0,1,-1,-1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest262() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,4,-1,-1,0,5,2,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,3,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,6,0,-1,-1,-1,0,0,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,5,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,1,-1,-1,-1,7,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,0,2,-1,-1,-1,3,4,1,-1,-1,5,6,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,0,-1,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,2,5,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,1,-1,-1,-1,7,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,7,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest263() {
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,0,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,-1,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,2,-1,-1,-1,7,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,2,4,1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,4,6,1,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,3,0,-1,-1,-1,0,0,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,2,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,2,-1,-1,-1,-1,0,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,5,-1,-1,-1,6,4,1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,5,7,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,3,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,7,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,5,-1,-1,6,5,1,-1,-1,0,-1,-1,-1,-1,0,0,3,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,4,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,4,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,7,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,2,6,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,1,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,0,6,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest264() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,0,0,2,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,6,-1,-1,-1,-1,0,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,6,-1,-1,-1,7,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,5,-1,-1,6,5,1,-1,-1,0,-1,-1,-1,-1,0,7,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,1,-1,-1,-1,7,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,4,-1,-1,-1,0,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,0,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,7,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,6,4,1,-1,-1,0,7,3,-1,-1,0,0,-1,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,2,0,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,8,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,5,6,2,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,0,6,-1,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,4,0,-1,-1,-1,0,0,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,0,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest265() {
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,0,-1,-1,-1,0,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,6,-1,-1,-1,8,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,4,-1,-1,0,0,-1,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,-1,-1,-1,7,8,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,0,0,3,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,-1,8,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,3,-1,-1,-1,0,0,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,6,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,0,5,2,-1,-1,0,6,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,4,-1,-1,5,6,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,4,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,4,1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,5,-1,-1,6,7,1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,-1,0,5,3,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest266() {
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,3,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,4,1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,2,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,5,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,-1,6,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,5,-1,-1,-1,-1,7,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,5,-1,-1,6,5,1,-1,-1,0,-1,-1,-1,-1,0,0,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,8,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,7,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,3,7,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,1,0,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,4,-1,-1,-1,-1,7,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,0,6,2,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest267() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,6,-1,-1,-1,0,0,4,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,2,-1,-1,-1,-1,0,0,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,0,2,-1,-1,-1,0,6,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,6,7,-1,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,0,6,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,-1,-1,-1,4,6,1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,7,0,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,4,-1,-1,0,5,2,-1,-1,0,6,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,2,0,-1,-1,-1,5,0,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,6,-1,-1,-1,0,0,4,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,3,-1,-1,-1,7,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,4,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,-1,-1,-1,6,0,2,-1,-1,0,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,2,-1,-1,-1,0,0,-1,-1,-1,7,0,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,3,-1,-1,-1,0,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,3,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,5,6,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest268() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,-1,-1,-1,6,0,2,-1,-1,4,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,2,-1,-1,-1,0,0,-1,-1,-1,7,0,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,2,-1,-1,5,6,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,4,0,-1,-1,-1,7,0,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,2,-1,-1,-1,3,4,1,-1,-1,5,0,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,5,-1,-1,-1,0,0,-1,-1,-1,8,0,3,-1,-1,0,0,7,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,0,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,0,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,-1,6,-1,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,2,-1,-1,5,0,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,8,0,3,-1,-1,0,0,7,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,5,-1,-1,-1,5,6,2,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,5,-1,-1,-1,0,7,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,6,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,-1,-1,-1,6,7,1,-1,-1,0,0,7,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,-1,4,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,7,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,7,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,6,-1,-1,0,0,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest269() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,1,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,2,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,6,0,3,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,6,7,3,-1,-1,0,0,5,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,7,0,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,3,-1,-1,-1,0,7,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,0,4,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,0,8,-1,-1,-1,7,0,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,1,-1,-1,-1,7,0,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,0,-1,-1,-1,5,6,2,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,0,-1,-1,-1,5,6,2,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,6,7,2,-1,-1,-1,4,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,6,4,1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,4,-1,-1,-1,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,6,7,-1,-1,-1,8,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,0,-1,-1,5,0,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,7,0,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,7,4,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,1,0,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
        }

        @Test
        public void TreeMapSolverTest270() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,6,7,2,-1,-1,-1,6,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,6,4,-1,-1,0,0,4,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,6,-1,-1,-1,0,0,4,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,2,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,6,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,3,-1,-1,-1,0,-1,-1,-1,5,6,2,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,7,-1,-1,-1,0,0,-1,-1,-1,7,0,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,6,7,3,-1,-1,0,0,5,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,5,6,-1,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,3,0,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,6,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,6,7,1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,8,0,3,-1,-1,0,0,7,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,0,-1,-1,-1,8,0,3,-1,-1,0,0,7,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,8,0,3,-1,-1,0,0,7,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,6,0,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,6,-1,-1,-1,0,0,4,-1,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,0,0,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,-1,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,5,-1,-1,-1,4,6,1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,8,0,3,-1,-1,0,0,7,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,8,0,3,-1,-1,0,0,7,-1"));
        }

        @Test
        public void TreeMapSolverTest271() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,6,-1,-1,-1,0,7,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,4,-1,-1,-1,7,0,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,0,0,1,-1,-1,2,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,6,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,3,-1,-1,6,7,2,-1,-1,0,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,0,0,1,-1,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,8,0,3,-1,-1,0,0,7,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,0,5,1,-1,-1,3,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,8,0,3,-1,-1,0,0,7,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,6,-1,-1,-1,0,0,4,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,-1,-1,-1,6,4,1,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,-1,-1,-1,6,7,2,-1,-1,1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,6,7,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,5,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,3,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,0,5,1,-1,-1,3,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,0,1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,5,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,6,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,0,0,1,-1,-1,0,5,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
        }

        @Test
        public void TreeMapSolverTest272() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,4,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,-1,-1,-1,7,8,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,0,-1,-1,-1,0,0,3,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,2,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,2,-1,-1,5,6,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,0,5,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,2,0,-1,-1,-1,7,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,0,1,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,4,6,1,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,4,-1,-1,-1,5,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,0,5,1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,0,5,1,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,2,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,0,1,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,5,-1,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,6,1,-1,-1,-1,-1,-1,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,0,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,7,0,-1,-1,-1,8,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,0,2,-1,-1,-1,3,4,1,-1,-1,0,5,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest273() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,1,2,-1,-1,-1,3,4,1,-1,-1,5,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,4,7,1,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,6,4,1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,2,-1,-1,-1,7,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,2,-1,-1,-1,0,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,4,0,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,5,-1,-1,6,7,1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,0,-1,-1,-1,0,5,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,-1,-1,-1,4,7,1,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,0,5,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,-1,-1,-1,0,6,2,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,3,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,7,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,1,-1,-1,-1,-1,7,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,6,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,4,-1,-1,-1,-1,0,0,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,0,6,2,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest274() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,6,-1,-1,-1,-1,7,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,8,4,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,2,-1,-1,5,0,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,4,6,1,-1,-1,7,8,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,0,6,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,2,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,5,0,-1,-1,-1,0,0,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,4,-1,-1,-1,-1,7,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,5,0,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,5,-1,-1,-1,6,4,1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,3,-1,-1,5,2,1,-1,-1,-1,-1,-1,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,1,-1,-1,-1,0,0,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,1,0,-1,-1,-1,0,0,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest275() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,6,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,8,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,5,-1,-1,6,7,1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,5,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,4,-1,-1,-1,-1,7,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,2,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,2,-1,-1,-1,0,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,8,-1,-1,-1,0,4,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,0,0,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,0,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,-1,-1,-1,0,0,2,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,8,-1,-1,-1,0,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,4,0,-1,-1,-1,7,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest276() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,5,-1,-1,-1,4,6,1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,6,4,1,-1,-1,0,7,3,-1,-1,0,0,-1,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,0,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,4,-1,-1,-1,7,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,-1,-1,-1,4,6,1,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,5,-1,-1,6,5,1,-1,-1,0,-1,-1,-1,-1,0,0,3,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,5,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,6,-1,-1,7,6,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,0,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,5,-1,-1,-1,6,4,1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,1,-1,-1,-1,8,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,3,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,8,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,4,1,-1,-1,0,6,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,5,6,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,2,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest277() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,5,-1,-1,-1,0,0,-1,-1,-1,7,0,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,0,0,-1,-1,-1,8,0,3,-1,-1,0,0,7,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,4,6,1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,0,6,2,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,7,-1,-1,-1,-1,7,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,5,-1,-1,-1,0,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,4,6,1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,-1,-1,-1,0,6,2,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,0,-1,-1,0,5,2,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,0,5,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,0,2,-1,-1,0,7,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,5,-1,-1,6,7,1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,0,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,4,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,2,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest278() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,0,0,-1,-1,-1,5,0,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,0,-1,-1,5,0,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,6,1,-1,-1,0,0,6,-1,-1,0,0,-1,-1,-1,4,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,8,0,3,-1,-1,0,0,7,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,3,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,-1,-1,-1,6,7,2,-1,-1,6,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,1,0,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,6,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,7,0,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,6,1,-1,-1,0,0,6,-1,-1,0,7,-1,-1,-1,4,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,2,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,2,-1,-1,5,6,2,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,-1,-1,-1,4,6,1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,7,8,3,-1,-1,0,0,6,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,0,5,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,1,0,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,6,7,3,-1,-1,0,0,5,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,2,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest279() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,2,-1,-1,-1,0,-1,-1,-1,5,6,2,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,8,0,3,-1,-1,0,0,7,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,1,0,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,6,0,3,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,4,1,-1,-1,6,0,3,-1,-1,7,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,-1,-1,-1,4,6,1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,4,-1,-1,5,4,1,-1,-1,2,0,3,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,0,0,6,-1,-1,0,7,-1,-1,-1,4,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,2,0,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,6,-1,-1,0,0,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,6,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,2,0,-1,-1,-1,0,0,-1,-1,-1,7,0,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,5,-1,-1,-1,-1,0,0,-1,-1,-1,7,0,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,7,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,4,0,-1,-1,-1,7,0,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,1,0,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,4,1,-1,-1,6,0,3,-1,-1,7,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,3,-1,-1,-1,0,7,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,6,7,3,-1,-1,0,0,5,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest280() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,-1,-1,-1,6,0,2,-1,-1,3,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,0,0,6,-1,-1,0,0,-1,-1,-1,4,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,4,-1,-1,5,6,2,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,4,0,-1,-1,-1,7,0,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,-1,-1,-1,6,4,1,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,8,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,3,-1,-1,-1,0,0,-1,-1,-1,7,0,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,2,-1,-1,0,5,2,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,7,-1,-1,-1,0,0,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,6,0,2,-1,-1,-1,3,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,4,5,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,1,-1,-1,-1,5,0,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,6,-1,-1,7,6,2,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,1,2,-1,-1,-1,3,4,1,-1,-1,0,0,-1,-1,-1,5,6,2,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,8,0,-1,-1,-1,7,0,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,7,0,2,-1,-1,-1,-1,-1,-1,-1,0,6,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest281() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,2,0,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,6,0,3,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,2,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,8,0,3,-1,-1,0,0,7,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,7,-1,-1,-1,8,4,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,6,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,5,-1,-1,-1,0,7,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,0,2,-1,-1,0,3,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,6,-1,-1,-1,0,0,4,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,-1,0,-1,-1,-1,5,6,2,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,2,0,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,6,7,1,-1,-1,0,0,7,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,4,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,4,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,3,-1,-1,-1,5,6,2,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,1,-1,-1,-1,0,0,-1,-1,-1,8,0,3,-1,-1,0,0,7,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,3,-1,-1,0,5,2,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,8,1,-1,-1,0,0,8,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,4,0,3,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,1,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,6,7,3,-1,-1,0,0,5,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,0,-1,-1,-1,0,7,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
        }

        @Test
        public void TreeMapSolverTest282() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,0,1,-1,-1,3,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,7,0,-1,-1,-1,8,4,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,0,5,1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,0,4,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,4,-1,-1,-1,0,5,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,-1,-1,-1,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,0,1,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,1,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,6,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,0,1,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,0,0,1,-1,-1,2,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,0,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,-1,4,-1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,-1,-1,-1,7,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,4,-1,-1,-1,0,5,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,4,7,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,0,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest283() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,0,-1,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,5,-1,-1,6,7,1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,5,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,6,-1,-1,-1,0,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,3,-1,-1,-1,0,5,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,3,-1,-1,4,2,1,-1,-1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,3,-1,-1,-1,-1,8,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,-1,-1,-1,7,8,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,4,3,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,3,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,-1,0,-1,-1,-1,0,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,-1,5,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,3,-1,-1,0,5,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,4,-1,-1,-1,7,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest284() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,-1,0,4,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,8,8,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,4,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,0,6,2,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,1,2,-1,-1,-1,3,4,1,-1,-1,5,6,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,4,6,1,-1,-1,7,0,-1,-1,-1,0,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,4,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,5,-1,-1,-1,7,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,0,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,0,2,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,2,5,1,-1,-1,-1,-1,-1,-1,-1,0,6,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,2,4,1,-1,-1,0,5,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest285() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,3,-1,-1,0,0,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,8,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,3,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,0,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,8,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,2,-1,-1,-1,0,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,0,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,4,1,-1,-1,0,6,3,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,5,-1,-1,6,7,1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,3,0,-1,-1,-1,7,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,8,4,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,5,-1,-1,-1,0,0,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,2,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,1,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,-1,-1,-1,0,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,5,-1,-1,-1,-1,7,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest286() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,1,-1,-1,-1,-1,7,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,3,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,-1,-1,-1,7,4,1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,7,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,5,-1,-1,6,7,1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,4,6,1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,7,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,3,-1,-1,-1,0,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,6,0,-1,-1,-1,0,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,1,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,-1,-1,-1,0,6,2,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,2,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,7,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,6,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest287() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,-1,-1,-1,6,7,2,-1,-1,3,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,3,0,-1,-1,-1,7,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,6,0,3,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,8,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,7,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,5,6,2,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,6,0,-1,-1,-1,0,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,3,-1,-1,6,0,2,-1,-1,0,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,4,1,-1,-1,0,6,3,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,3,-1,-1,5,2,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,6,2,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,0,0,6,-1,-1,0,0,-1,-1,-1,4,7,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,0,0,-1,-1,-1,0,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,4,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,7,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,7,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,8,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,7,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest288() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,2,0,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,2,0,-1,-1,-1,5,6,2,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,4,-1,-1,-1,5,0,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,6,0,2,-1,-1,-1,4,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,6,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,4,1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,6,0,2,-1,-1,-1,1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,5,-1,-1,6,7,1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,8,5,3,-1,-1,0,0,7,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,0,0,6,-1,-1,0,7,-1,-1,-1,4,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,7,-1,-1,-1,0,8,-1,-1,-1,7,0,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,3,-1,-1,6,2,1,-1,-1,0,0,2,-1,-1,0,0,-1,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,3,0,-1,-1,-1,5,0,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,4,-1,-1,-1,8,0,3,-1,-1,0,0,7,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,2,-1,-1,6,0,2,-1,-1,0,5,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,1,-1,-1,-1,-1,0,0,-1,-1,-1,7,0,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,0,0,-1,-1,-1,5,0,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,1,5,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,0,6,2,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest289() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,2,-1,-1,-1,3,4,1,-1,-1,0,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,4,1,-1,-1,6,7,3,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,7,0,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,4,1,-1,-1,6,0,3,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,6,0,2,-1,-1,1,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,6,4,1,-1,-1,7,0,3,-1,-1,0,0,-1,-1,-1,0,8,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,0,-1,-1,0,5,2,-1,-1,6,7,2,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,0,-1,-1,6,7,2,-1,-1,0,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,8,0,3,-1,-1,0,0,7,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,2,-1,-1,-1,7,0,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,7,-1,-1,-1,-1,0,7,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,2,-1,-1,0,5,-1,-1,-1,6,7,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,2,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,7,0,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,6,-1,-1,-1,7,0,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,6,0,2,-1,-1,2,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,0,-1,-1,-1,6,0,3,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest290() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,5,0,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,6,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,4,0,-1,-1,-1,8,0,3,-1,-1,0,0,7,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,7,0,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,0,6,-1,-1,-1,5,0,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,5,-1,-1,6,5,1,-1,-1,0,-1,-1,-1,-1,7,0,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,1,-1,-1,-1,0,7,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,6,7,2,-1,-1,-1,8,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,1,-1,-1,-1,5,-1,-1,-1,6,0,2,-1,-1,3,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,-1,0,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,4,1,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,6,-1,-1,-1,0,0,-1,-1,-1,7,0,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,6,-1,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,-1,-1,-1,4,6,1,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,2,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,7,0,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,4,-1,-1,-1,5,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,1,-1,-1,6,0,-1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,1,0,-1,-1,-1,7,0,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,6,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,6,7,1,-1,-1,0,0,7,-1,-1,0,0,-1,-1,-1,0,8,-1,-1,-1,4,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,4,1,-1,-1,6,0,3,-1,-1,0,7,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest291() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,-1,0,-1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,7,0,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,5,-1,-1,6,0,-1,-1,-1,5,7,2,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,1,0,-1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,6,4,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,-1,4,-1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,0,5,1,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,0,5,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,0,2,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,-1,-1,-1,-1,-1,5,6,2,-1,-1,0,0,4,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,0,6,1,-1,-1,-1,-1,-1,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,0,0,1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,-1,-1,-1,0,5,-1,-1,-1,6,0,2,-1,-1,1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,6,1,-1,-1,-1,-1,-1,-1,-1,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,0,4,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,-1,2,-1,-1,-1,3,4,4,-1,-1,0,5,-1,-1,-1,6,0,2,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,0,6,1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,0,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,1,-1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest292() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,0,5,1,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,0,0,1,-1,-1,5,6,-1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,-1,-1,-1,0,6,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,0,6,1,-1,-1,-1,-1,-1,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,0,0,1,-1,-1,5,6,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,0,5,1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,0,0,1,-1,-1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,5,-1,-1,0,6,1,-1,-1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,0,5,1,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,0,5,1,-1,-1,5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,0,0,1,-1,-1,5,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,5,-1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,0,-1,-1,0,6,1,-1,-1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,-1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest293() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,0,1,-1,-1,4,6,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,0,0,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,-1,-1,-1,0,4,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,-1,-1,-1,6,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,2,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,4,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,2,-1,-1,-1,4,5,1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,5,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,0,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,0,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,5,-1,-1,-1,0,4,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,0,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,4,-1,-1,-1,0,0,3,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,0,1,-1,-1,5,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,3,7,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest294() {
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,7,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,6,4,1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,6,3,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,6,3,-1,-1,7,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,-1,-1,-1,4,0,1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,4,7,1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,1,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,8,4,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,-1,-1,-1,-1,-1,7,4,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,6,-1,-1,0,7,3,-1,-1,8,6,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,-1,-1,-1,6,4,1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,-1,-1,-1,-1,-1,7,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,0,3,-1,-1,6,0,2,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,6,4,1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,4,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,7,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest295() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,5,-1,-1,6,7,1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,5,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,5,0,-1,-1,-1,0,0,3,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,4,1,-1,-1,6,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,4,0,-1,-1,-1,0,0,3,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,3,-1,-1,0,6,3,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,8,4,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,0,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,0,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,2,0,-1,-1,-1,0,0,3,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,5,-1,-1,6,7,1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,5,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,5,-1,-1,0,0,3,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,6,3,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,4,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,4,5,1,-1,-1,0,0,3,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,6,-1,-1,-1,0,0,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,0,3,-1,-1,6,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,2,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,4,-1,-1,0,6,3,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest296() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,-1,-1,-1,7,4,1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,2,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,6,-1,-1,0,6,3,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,3,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,8,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,7,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,0,1,-1,-1,6,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,0,1,-1,-1,0,2,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,0,-1,-1,6,0,1,-1,-1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,1,-1,-1,-1,4,0,1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,0,-1,-1,0,0,3,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,2,7,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,7,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,2,-1,-1,-1,0,0,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,7,0,-1,-1,-1,0,7,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,4,1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,4,6,1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,2,-1,-1,-1,0,7,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest297() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,7,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,4,5,1,-1,-1,0,0,3,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,0,3,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,1,0,-1,-1,-1,0,7,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,6,-1,-1,0,0,3,-1,-1,7,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,2,-1,-1,-1,-1,0,8,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,4,1,-1,-1,6,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,0,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,0,3,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,3,-1,-1,-1,-1,0,0,3,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,8,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,4,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,0,3,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,4,1,-1,-1,6,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,5,-1,-1,6,5,1,-1,-1,0,-1,-1,-1,-1,7,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,5,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest298() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,6,3,-1,-1,7,8,1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,3,-1,-1,-1,0,7,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,5,-1,-1,6,5,1,-1,-1,0,-1,-1,-1,-1,7,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,3,-1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,6,3,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,6,3,-1,-1,7,8,2,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,0,0,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,2,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,6,3,-1,-1,7,8,5,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,0,3,-1,-1,6,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,6,3,-1,-1,7,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,0,3,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,2,4,-1,-1,-1,5,0,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,-1,4,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,-1,-1,-1,-1,-1,7,3,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,2,-1,-1,-1,4,5,1,-1,-1,0,0,3,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,0,1,-1,-1,0,6,-1,-1,-1,0,0,3,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest299() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,6,-1,-1,7,0,1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,2,-1,-1,0,6,3,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,5,-1,-1,6,0,1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,4,1,-1,-1,6,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,4,5,1,-1,-1,0,0,3,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,3,-1,-1,-1,4,5,1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,0,3,-1,-1,6,7,3,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,0,0,3,-1,-1,6,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,4,3,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,7,0,-1,-1,-1,0,7,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,6,3,-1,-1,7,8,4,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,6,-1,-1,-1,-1,0,7,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest300() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,7,7,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,3,-1,-1,0,0,3,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,-1,-1,-1,6,4,1,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,1,0,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,6,-1,-1,6,0,1,-1,-1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,-1,-1,-1,-1,-1,0,1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,0,5,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,4,1,-1,-1,0,6,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,5,-1,-1,-1,0,7,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,0,3,-1,-1,6,7,-1,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,1,4,-1,-1,-1,5,0,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,6,3,-1,-1,7,0,6,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,4,-1,-1,-1,0,7,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,3,0,-1,-1,-1,0,7,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,4,1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,7,0,-1,-1,-1,0,8,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,7,-1,-1,-1,0,7,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,6,3,-1,-1,7,8,6,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest301() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,5,-1,-1,6,7,1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,5,8,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,3,-1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,7,-1,-1,-1,-1,0,0,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,2,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,4,-1,-1,0,0,3,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,0,0,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,2,-1,-1,0,6,3,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,5,-1,-1,0,0,3,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,0,3,-1,-1,6,0,5,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,2,-1,-1,-1,0,0,3,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,8,-1,-1,-1,-1,0,8,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,5,-1,-1,-1,0,0,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,7,-1,-1,-1,-1,0,0,3,-1,-1,8,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,6,-1,-1,-1,0,0,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,8,8,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest302() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,7,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,0,0,3,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,4,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,4,-1,-1,-1,-1,0,7,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,6,3,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,3,-1,-1,0,0,3,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,4,1,-1,-1,0,6,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,6,3,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,1,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,3,-1,-1,-1,0,7,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,4,1,-1,-1,6,0,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,4,1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,0,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,4,6,1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,-1,-1,-1,6,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,6,-1,-1,0,7,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,3,-1,-1,4,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,8,4,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,4,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest303() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,4,-1,-1,-1,-1,7,0,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1,-1,4,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,0,-1,-1,-1,0,7,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,6,-1,-1,0,0,3,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,3,-1,-1,0,8,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,0,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,7,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,6,3,-1,-1,7,8,8,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,7,-1,-1,-1,-1,0,0,3,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,0,3,-1,-1,6,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,3,-1,-1,-1,0,0,3,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,6,3,-1,-1,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,8,0,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,4,8,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest304() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,2,0,-1,-1,-1,7,0,3,-1,-1,8,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,3,-1,-1,0,8,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,0,8,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,8,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,3,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,0,8,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,4,6,1,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,4,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,7,0,3,-1,-1,8,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,5,-1,-1,6,7,3,-1,-1,0,8,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,0,3,-1,-1,7,8,7,-1,-1,0,0,4,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,7,3,-1,-1,8,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,4,-1,-1,6,7,3,-1,-1,8,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,5,-1,-1,6,7,3,-1,-1,8,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,5,6,-1,-1,-1,0,0,4,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,5,-1,-1,-1,-1,0,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,4,1,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,5,-1,-1,6,7,3,-1,-1,0,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,0,3,-1,-1,2,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,7,-1,-1,-1,-1,0,0,4,-1,-1,0,5,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest305() {
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,5,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,2,0,-1,-1,-1,7,0,3,-1,-1,0,8,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,5,0,4,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,4,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,0,3,-1,-1,7,8,4,-1,-1,0,0,4,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,0,3,-1,-1,7,0,2,-1,-1,0,0,4,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,6,-1,-1,7,8,3,-1,-1,6,0,3,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,5,-1,-1,-1,7,0,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,8,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,3,-1,-1,0,8,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,6,-1,-1,6,0,3,-1,-1,0,7,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,7,8,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,4,1,-1,-1,0,0,-1,-1,-1,6,0,3,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,2,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,3,-1,-1,4,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,7,0,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,4,7,1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,4,1,-1,-1,6,0,-1,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest306() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,7,3,-1,-1,0,5,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,3,-1,-1,6,0,3,-1,-1,7,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,0,3,-1,-1,7,8,3,-1,-1,0,0,4,-1,-1,1,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,7,3,-1,-1,1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,0,0,5,-1,-1,4,0,3,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,2,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,3,-1,-1,6,0,3,-1,-1,7,0,3,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,0,3,-1,-1,7,0,-1,-1,-1,0,0,4,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,5,6,-1,-1,-1,0,0,4,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,5,6,4,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,7,3,-1,-1,4,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,1,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,5,-1,-1,-1,-1,7,0,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,0,0,5,-1,-1,4,0,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,0,7,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,4,1,-1,-1,0,6,-1,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,8,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,6,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,1,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,0,7,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest307() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,8,0,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,7,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,5,-1,-1,-1,4,6,1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,2,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,7,3,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,0,3,-1,-1,7,8,-1,-1,-1,0,0,4,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,0,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,5,0,-1,-1,-1,7,0,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,0,3,-1,-1,7,1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,5,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,3,-1,-1,0,4,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,0,0,5,-1,-1,4,7,3,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,0,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,5,6,0,-1,-1,0,0,4,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,3,-1,-1,8,4,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,1,-1,-1,-1,7,0,3,-1,-1,8,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest308() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,2,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,7,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,0,3,-1,-1,7,8,-1,-1,-1,0,0,4,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,6,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,-1,-1,-1,6,7,1,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1,-1,4,0,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,1,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,-1,-1,-1,6,7,1,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1,-1,4,8,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,3,-1,-1,0,8,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,2,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,7,0,3,-1,-1,8,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,5,0,6,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,0,8,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,4,1,-1,-1,0,6,-1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,0,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,0,3,-1,-1,7,8,-1,-1,-1,0,0,4,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1,-1,4,0,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,0,8,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,0,-1,-1,6,0,3,-1,-1,7,8,3,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,0,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,8,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest309() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,4,-1,-1,6,7,3,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,2,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,7,0,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,6,-1,-1,7,0,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,2,0,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,7,3,-1,-1,8,6,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,5,6,-1,-1,-1,0,0,4,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,2,-1,-1,6,7,3,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,7,-1,-1,-1,-1,0,0,4,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,7,3,-1,-1,2,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,3,-1,-1,0,8,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,8,3,-1,-1,0,4,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,5,6,-1,-1,-1,0,0,4,-1,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,8,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,3,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,7,3,-1,-1,0,4,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,4,6,1,-1,-1,7,0,3,-1,-1,0,0,-1,-1,-1,0,8,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,0,8,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,5,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest310() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,4,1,-1,-1,0,0,-1,-1,-1,6,7,3,-1,-1,0,0,5,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,8,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,-1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,0,0,1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,3,-1,-1,6,0,3,-1,-1,7,8,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,0,0,1,-1,-1,1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,0,5,1,-1,-1,1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,3,-1,-1,8,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,7,3,-1,-1,8,0,3,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,4,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,4,0,-1,-1,-1,7,0,3,-1,-1,0,8,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,0,4,1,-1,-1,0,0,1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,7,3,-1,-1,7,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,0,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,7,0,3,-1,-1,8,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,5,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,-1,-1,-1,6,4,1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,7,0,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,8,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,0,0,1,-1,-1,5,6,-1,-1,-1,-1,-1,-1,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,7,4,3,-1,-1,8,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest311() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,0,5,1,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,-1,-1,-1,0,6,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,0,5,1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,-1,-1,-1,0,6,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,-1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,4,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,4,-1,-1,-1,0,5,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,0,4,1,-1,-1,0,5,1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,0,5,1,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,0,6,1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,4,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,0,5,1,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,6,1,-1,-1,-1,-1,-1,-1,-1,7,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,0,5,1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,0,4,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,4,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,0,6,1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,0,5,1,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,-1,-1,-1,0,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest312() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,0,1,-1,-1,0,6,-1,-1,-1,0,0,3,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,1,-1,-1,-1,0,4,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,4,-1,-1,6,0,1,-1,-1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,0,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,0,6,1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,1,4,-1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,0,5,1,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,0,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,4,0,1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,6,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,2,-1,-1,0,6,1,-1,-1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,0,4,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,0,5,1,-1,-1,2,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,0,6,1,-1,-1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,0,-1,-1,-1,0,5,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,-1,4,-1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest313() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,4,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,0,3,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,4,-1,-1,0,6,3,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,0,3,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,0,3,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,0,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,5,0,-1,-1,-1,0,7,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,3,-1,-1,8,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,4,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,7,-1,-1,-1,0,8,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,7,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,0,3,-1,-1,6,7,4,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,0,0,3,-1,-1,6,-1,-1,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,4,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,8,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,2,-1,-1,-1,-1,0,7,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,5,-1,-1,6,7,1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest314() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,0,1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,0,-1,-1,-1,5,0,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,-1,-1,-1,7,4,1,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,3,-1,-1,0,6,3,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,8,0,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,6,3,-1,-1,7,0,7,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,4,1,-1,-1,6,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,0,-1,-1,-1,5,0,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,0,1,-1,-1,-1,5,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,6,-1,-1,0,0,3,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,6,3,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,5,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,6,3,-1,-1,7,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,-1,-1,-1,-1,-1,7,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,0,0,3,-1,-1,6,-1,-1,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,4,0,-1,-1,-1,0,0,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,4,1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest315() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,2,-1,-1,0,6,3,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,6,3,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,4,3,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,0,3,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,0,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,7,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,6,-1,-1,0,7,3,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,4,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,6,3,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,4,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,6,3,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,1,0,-1,-1,-1,0,7,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,1,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,0,3,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,-1,-1,-1,6,4,1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,4,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,5,-1,-1,-1,-1,0,0,3,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,6,-1,-1,-1,0,7,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,6,3,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,5,-1,-1,-1,-1,0,7,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest316() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,8,6,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,2,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,7,-1,-1,-1,-1,0,0,3,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,0,3,-1,-1,6,0,3,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,0,3,-1,-1,6,7,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,4,-1,-1,0,0,3,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,0,0,3,-1,-1,6,-1,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,0,3,-1,-1,6,7,7,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,0,3,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,3,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,6,3,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,0,1,-1,-1,-1,-1,-1,-1,-1,3,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,0,1,-1,-1,1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,0,0,3,-1,-1,6,-1,-1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,6,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,0,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,4,1,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest317() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,6,0,-1,-1,-1,0,0,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,0,-1,-1,0,6,3,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,5,-1,-1,6,5,1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,7,0,-1,-1,-1,0,8,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,2,-1,-1,-1,-1,0,7,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,6,3,-1,-1,7,0,5,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,0,1,-1,-1,5,6,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,4,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,6,3,-1,-1,7,8,7,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,2,-1,-1,6,0,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,6,-1,-1,-1,-1,0,7,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,0,-1,-1,0,6,3,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,4,-1,-1,-1,5,0,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,0,8,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,2,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,7,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,3,0,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest318() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,4,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,0,-1,-1,0,6,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,5,-1,-1,6,0,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,0,5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,2,-1,-1,0,6,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,2,0,-1,-1,-1,0,0,3,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,3,-1,-1,-1,0,0,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,6,4,1,-1,-1,7,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,-1,-1,-1,4,7,1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,-1,-1,-1,7,8,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,0,4,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,0,1,-1,-1,6,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,6,3,-1,-1,7,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,2,0,-1,-1,-1,4,5,1,-1,-1,0,0,3,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,0,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,8,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,5,-1,-1,6,7,1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,-1,5,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,0,3,-1,-1,6,7,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,6,-1,-1,0,7,3,-1,-1,6,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest319() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,8,7,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,6,-1,-1,-1,0,7,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,4,1,-1,-1,6,0,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,6,-1,-1,0,0,3,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,4,-1,-1,-1,-1,0,0,3,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,7,-1,-1,-1,0,7,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,3,-1,-1,0,0,3,-1,-1,6,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,2,-1,-1,0,6,3,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,6,-1,-1,7,8,1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,0,1,-1,-1,6,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,2,-1,-1,-1,-1,0,7,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,-1,-1,-1,7,8,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,7,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,0,0,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,5,-1,-1,-1,4,6,1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest320() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,0,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,2,-1,-1,-1,0,7,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,6,-1,-1,0,7,3,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,4,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,8,-1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,8,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,3,-1,-1,-1,0,0,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,0,0,3,-1,-1,6,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,8,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,8,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,6,-1,-1,0,7,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,0,3,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,7,0,-1,-1,-1,0,0,3,-1,-1,8,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,4,7,1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,0,1,-1,-1,0,4,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,0,0,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,2,-1,-1,0,0,3,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest321() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,0,-1,-1,0,6,3,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,3,0,-1,-1,-1,0,0,3,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,0,0,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,5,0,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,6,0,-1,-1,-1,0,0,3,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,4,-1,-1,-1,0,7,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,5,-1,-1,-1,0,0,3,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,1,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,1,-1,-1,0,0,3,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,6,-1,-1,-1,-1,0,0,3,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,2,0,-1,-1,-1,4,5,1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,4,3,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest322() {
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,0,7,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,6,-1,-1,0,7,3,-1,-1,8,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,6,3,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,4,1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,0,0,5,-1,-1,4,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,5,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,7,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,8,1,-1,-1,0,0,7,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,4,0,3,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,4,1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,5,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,7,-1,-1,-1,-1,0,0,4,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,7,-1,-1,-1,-1,0,7,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1,-1,4,0,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,0,3,-1,-1,4,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,0,3,-1,-1,7,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,3,-1,-1,0,8,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,4,0,-1,-1,-1,7,0,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,1,-1,-1,-1,7,0,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,6,3,-1,-1,7,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest323() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,7,-1,-1,-1,-1,7,0,3,-1,-1,8,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,5,-1,-1,6,7,1,-1,-1,0,-1,-1,-1,-1,0,0,6,-1,-1,5,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,7,0,3,-1,-1,8,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,0,3,-1,-1,7,0,3,-1,-1,0,0,4,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,6,-1,-1,-1,7,0,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,7,3,-1,-1,0,1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,-1,-1,-1,7,8,1,-1,-1,0,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,0,3,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,5,3,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,6,-1,-1,7,0,3,-1,-1,8,6,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,5,-1,-1,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,5,-1,-1,-1,4,6,1,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,8,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,7,-1,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,0,3,-1,-1,7,0,0,-1,-1,0,0,4,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,8,0,3,-1,-1,4,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,7,-1,-1,-1,7,0,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,6,-1,-1,7,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,7,0,3,-1,-1,8,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,7,3,-1,-1,6,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest324() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,7,3,-1,-1,8,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,8,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,5,-1,-1,6,0,3,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,0,8,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,7,3,-1,-1,8,7,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,5,6,-1,-1,-1,0,0,4,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,3,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,4,1,-1,-1,0,6,-1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,0,3,-1,-1,6,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,0,7,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,7,-1,-1,-1,-1,0,0,4,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,7,8,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,8,-1,-1,-1,-1,8,0,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,8,3,-1,-1,4,0,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,5,-1,-1,6,7,1,-1,-1,0,-1,-1,-1,-1,0,0,6,-1,-1,5,0,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,6,-1,-1,7,0,3,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,0,3,-1,-1,7,2,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,1,-1,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,5,-1,-1,6,7,3,-1,-1,8,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,6,-1,-1,6,7,3,-1,-1,8,0,3,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,0,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest325() {
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,5,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,8,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,5,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,3,-1,-1,8,4,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,5,-1,-1,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,0,7,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,3,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,4,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,8,0,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,5,-1,-1,6,0,3,-1,-1,7,8,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,7,0,3,-1,-1,0,8,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,3,-1,-1,6,0,3,-1,-1,0,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,7,3,-1,-1,0,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,0,-1,-1,6,0,3,-1,-1,0,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,0,3,-1,-1,4,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,5,6,3,-1,-1,0,0,4,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,6,-1,-1,6,0,3,-1,-1,7,8,3,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,0,3,-1,-1,7,0,3,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,0,3,-1,-1,3,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,0,3,-1,-1,7,8,3,-1,-1,0,0,4,-1,-1,4,0,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest326() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,6,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,7,0,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,0,3,-1,-1,7,8,3,-1,-1,0,0,4,-1,-1,5,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,-1,-1,-1,4,6,1,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,5,5,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,0,0,5,-1,-1,4,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,0,3,-1,-1,7,4,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,0,3,-1,-1,0,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,0,3,-1,-1,7,8,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,2,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,7,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,6,-1,-1,-1,7,0,3,-1,-1,8,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,3,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,7,8,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,6,-1,-1,6,7,3,-1,-1,0,8,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,4,-1,-1,6,0,3,-1,-1,7,8,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,7,0,-1,-1,-1,8,0,3,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,4,1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,8,0,3,-1,-1,0,0,7,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,7,0,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,3,-1,-1,0,8,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest327() {
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,7,8,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,7,3,-1,-1,0,3,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,5,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,7,0,3,-1,-1,0,8,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,3,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,8,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,6,4,1,-1,-1,7,0,-1,-1,-1,0,0,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,5,-1,-1,6,0,3,-1,-1,7,0,3,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,1,-1,-1,-1,7,0,3,-1,-1,0,8,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,7,3,-1,-1,8,0,1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,3,-1,-1,6,7,3,-1,-1,0,8,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,5,6,5,-1,-1,0,0,4,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,-1,-1,-1,4,6,1,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,8,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,5,6,2,-1,-1,0,0,4,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,6,-1,-1,7,0,3,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,8,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,2,-1,-1,6,7,3,-1,-1,8,0,3,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,5,0,5,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,7,-1,-1,-1,-1,0,0,4,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,0,3,-1,-1,5,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,7,3,-1,-1,8,2,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest328() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,0,-1,-1,6,7,3,-1,-1,8,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,0,0,1,-1,-1,0,5,-1,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,0,3,-1,-1,7,0,3,-1,-1,0,0,4,-1,-1,3,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,8,0,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,2,4,-1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,6,-1,-1,7,0,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,-1,-1,-1,4,7,1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,4,-1,-1,0,0,1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,4,6,1,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,8,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,7,3,-1,-1,8,0,8,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,5,6,-1,-1,-1,0,0,4,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,2,-1,-1,0,6,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,3,-1,-1,0,5,1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,3,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,0,7,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,0,0,1,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,4,-1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest329() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,0,0,1,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,0,-1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,0,5,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,6,1,-1,-1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,-1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,-1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,0,5,1,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,5,-1,-1,0,6,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,0,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,4,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,0,5,1,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,-1,0,-1,-1,-1,0,4,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,6,1,-1,-1,-1,-1,-1,-1,-1,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,0,0,1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,0,0,1,-1,-1,0,5,-1,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,3,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,6,1,-1,-1,-1,-1,-1,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,0,0,1,-1,-1,5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest330() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,0,0,1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,-1,-1,-1,-1,-1,7,5,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,0,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,6,1,-1,-1,-1,-1,-1,-1,-1,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,3,-1,-1,0,0,1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,0,0,1,-1,-1,0,5,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,4,-1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,0,5,1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,0,0,1,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,0,0,1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,0,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,0,3,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,4,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,0,1,-1,-1,-1,6,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,0,1,-1,-1,0,6,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,4,1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,0,5,1,-1,-1,2,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest331() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,6,3,-1,-1,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,0,0,3,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,6,-1,-1,-1,0,0,3,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,8,-1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,2,-1,-1,-1,4,0,1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,0,3,-1,-1,6,7,3,-1,-1,3,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,6,3,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,2,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,6,3,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,-1,-1,-1,4,0,1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,3,-1,-1,4,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,6,-1,-1,0,0,3,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,0,-1,-1,-1,0,5,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,-1,0,0,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,0,-1,-1,-1,4,5,1,-1,-1,0,0,3,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,4,1,-1,-1,6,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest332() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,0,4,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,4,-1,-1,0,6,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,-1,-1,-1,6,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,-1,4,-1,-1,-1,5,0,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,0,-1,-1,-1,0,7,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,0,3,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,6,3,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,4,5,1,-1,-1,0,0,3,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,7,0,-1,-1,-1,0,0,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,0,3,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,6,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,6,3,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,0,1,-1,-1,0,6,-1,-1,-1,0,0,3,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,2,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,6,3,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,5,7,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,0,1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest333() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,0,3,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,0,1,-1,-1,0,6,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,1,0,-1,-1,-1,0,0,3,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,2,-1,-1,-1,-1,0,0,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,2,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,3,-1,-1,-1,0,5,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,3,-1,-1,-1,4,0,1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,1,0,-1,-1,-1,4,5,1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,0,3,-1,-1,6,0,3,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,0,0,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,5,-1,-1,6,7,1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,5,-1,-1,6,5,1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,0,1,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,6,-1,-1,0,0,3,-1,-1,6,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest334() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,-1,-1,-1,4,7,1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,5,-1,-1,-1,4,6,1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,0,-1,-1,-1,0,0,3,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,5,-1,-1,-1,4,6,1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,6,3,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,6,-1,-1,-1,-1,0,0,3,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,7,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,2,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,7,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,0,0,3,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,0,-1,-1,-1,4,5,1,-1,-1,0,0,3,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,2,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,0,3,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,1,-1,-1,-1,0,7,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,0,3,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,6,-1,-1,-1,0,0,3,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,-1,-1,-1,6,4,1,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,6,7,1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest335() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,0,1,-1,-1,0,6,-1,-1,-1,0,0,3,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,1,0,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,6,7,1,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,5,-1,-1,-1,0,0,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,0,1,-1,-1,5,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,0,3,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,6,-1,-1,0,6,3,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,7,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,0,3,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,0,0,3,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,4,6,1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,0,-1,-1,-1,5,0,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,6,3,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,-1,0,-1,-1,-1,4,0,1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,5,-1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,5,-1,-1,-1,6,4,1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,7,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,3,-1,-1,-1,0,0,3,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest336() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,0,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,7,-1,-1,-1,0,0,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,0,3,-1,-1,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,4,6,1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,-1,-1,-1,7,8,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,4,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,8,4,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,7,-1,-1,-1,0,8,3,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,4,3,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,7,-1,-1,-1,-1,0,0,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,0,1,-1,-1,6,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,0,3,-1,-1,6,0,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,0,-1,-1,0,0,3,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,2,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,0,3,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,4,-1,-1,-1,-1,0,7,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,3,-1,-1,4,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,0,1,-1,-1,6,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,0,5,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,8,-1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,1,-1,-1,-1,4,5,1,-1,-1,0,0,3,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest337() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,2,-1,-1,-1,0,7,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,0,1,-1,-1,6,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,0,0,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,-1,-1,-1,7,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,6,-1,-1,-1,0,0,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,2,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,8,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,0,0,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,-1,-1,-1,7,4,1,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,3,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,0,-1,-1,0,0,3,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,2,-1,-1,0,6,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,3,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,1,-1,-1,0,0,3,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,4,8,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,3,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,2,-1,-1,-1,4,5,1,-1,-1,0,0,3,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest338() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,6,-1,-1,6,7,3,-1,-1,8,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,5,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,8,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,0,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,0,8,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,7,0,3,-1,-1,8,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,2,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,0,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,6,-1,-1,0,7,3,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,3,-1,-1,-1,0,7,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,5,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,7,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,6,3,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,8,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,8,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,2,-1,-1,6,7,3,-1,-1,0,8,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,6,-1,-1,6,0,3,-1,-1,7,8,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,5,6,-1,-1,-1,0,0,4,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,0,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,2,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest339() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,0,3,-1,-1,7,8,-1,-1,-1,0,0,4,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,6,4,1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,7,3,-1,-1,8,1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,3,-1,-1,-1,-1,7,0,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,2,0,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,0,7,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,1,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,5,-1,-1,6,0,3,-1,-1,7,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,5,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,0,8,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,5,6,4,-1,-1,0,0,4,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,6,-1,-1,7,0,3,-1,-1,6,8,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,6,0,-1,-1,-1,7,0,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,7,-1,-1,-1,-1,8,0,3,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,6,-1,-1,7,0,3,-1,-1,6,0,3,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,5,-1,-1,-1,8,0,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,7,8,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,2,-1,-1,6,0,3,-1,-1,7,8,3,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,3,-1,-1,0,8,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,3,-1,-1,0,4,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,0,3,-1,-1,4,0,-1,-1,-1,0,0,6,-1"));
        }

        @Test
        public void TreeMapSolverTest340() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,7,8,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,7,3,-1,-1,8,0,6,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,4,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,3,-1,-1,6,0,3,-1,-1,0,7,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,0,-1,-1,6,7,3,-1,-1,0,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,7,3,-1,-1,8,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,0,3,-1,-1,1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,5,-1,-1,6,0,3,-1,-1,0,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,3,-1,-1,-1,7,0,3,-1,-1,8,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,7,3,-1,-1,8,0,3,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,8,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,3,-1,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,6,-1,-1,7,6,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,8,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,8,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,5,3,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,8,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,4,1,-1,-1,0,6,-1,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,6,-1,-1,7,6,3,-1,-1,8,0,3,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,2,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,7,8,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,8,0,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
        }

        @Test
        public void TreeMapSolverTest341() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,7,4,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,7,-1,-1,-1,7,0,3,-1,-1,8,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,3,-1,-1,-1,7,0,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,2,0,-1,-1,-1,7,0,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,5,6,-1,-1,-1,0,0,4,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,2,-1,-1,-1,5,0,3,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,6,-1,-1,7,6,3,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,6,-1,-1,6,0,3,-1,-1,7,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,0,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,7,3,-1,-1,8,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,5,6,-1,-1,-1,0,0,4,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,3,-1,-1,-1,-1,7,0,3,-1,-1,8,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,7,-1,-1,-1,-1,0,0,4,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,3,-1,-1,6,7,3,-1,-1,0,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,5,6,-1,-1,-1,0,0,4,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,4,6,1,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,0,8,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,4,-1,-1,6,0,3,-1,-1,0,7,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,6,-1,-1,6,7,3,-1,-1,8,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,0,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,7,0,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest342() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,4,-1,-1,6,0,3,-1,-1,7,8,3,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,-1,4,-1,-1,-1,0,5,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,4,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,7,8,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,4,-1,-1,6,7,3,-1,-1,8,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,3,-1,-1,0,8,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,1,4,-1,-1,-1,0,5,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,0,0,1,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,3,-1,-1,8,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,0,0,1,-1,-1,5,6,-1,-1,-1,-1,-1,-1,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,7,3,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,5,-1,-1,-1,6,7,1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,8,4,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,0,0,5,-1,-1,4,0,3,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,0,8,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,7,4,3,-1,-1,0,8,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,6,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,2,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,3,-1,-1,-1,-1,8,0,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,0,6,1,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,4,-1,-1,-1,7,0,3,-1,-1,0,8,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest343() {
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,0,5,1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,4,-1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,0,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,0,4,1,-1,-1,0,0,1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,0,-1,-1,-1,0,4,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,0,4,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,6,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,-1,-1,-1,0,6,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,-1,-1,-1,0,4,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,0,5,1,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,1,-1,-1,0,6,1,-1,-1,-1,-1,-1,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,0,5,1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,0,5,1,-1,-1,4,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,0,5,1,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,6,-1,-1,0,7,1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,0,4,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,0,5,1,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,0,0,1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest344() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,-1,-1,-1,-1,-1,7,8,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,0,1,-1,-1,6,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,0,5,1,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,7,8,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,0,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,0,1,-1,-1,2,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,0,3,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,0,6,1,-1,-1,-1,-1,-1,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,6,-1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,0,5,1,-1,-1,1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,0,1,-1,-1,0,6,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,0,5,1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,0,5,1,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,0,1,-1,-1,6,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,0,0,1,-1,-1,0,5,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,0,0,1,-1,-1,0,5,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,0,1,-1,-1,4,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,6,-1,-1,0,6,1,-1,-1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest345() {
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,7,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,0,0,3,-1,-1,6,-1,-1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,3,-1,-1,-1,-1,0,0,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,7,-1,-1,-1,0,7,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,4,-1,-1,0,0,3,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,2,-1,-1,0,0,3,-1,-1,6,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,5,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,0,3,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,0,1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,4,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,7,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,4,1,-1,-1,6,7,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,4,7,1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,0,-1,-1,5,0,1,-1,-1,0,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,4,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,0,1,-1,-1,0,6,-1,-1,-1,0,0,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest346() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,5,-1,-1,0,6,3,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,1,0,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,8,3,-1,-1,4,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,0,0,3,-1,-1,6,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,5,-1,-1,-1,6,4,1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,-1,-1,-1,6,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,6,3,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,5,-1,-1,0,0,3,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,5,-1,-1,-1,0,7,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,0,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,7,-1,-1,-1,-1,0,0,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,0,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,4,1,-1,-1,6,7,1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,6,4,1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest347() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,0,8,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,4,0,-1,-1,-1,0,7,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,5,-1,-1,-1,0,0,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,0,1,-1,-1,2,6,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,6,-1,-1,0,0,3,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,8,0,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,3,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,6,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,6,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,5,-1,-1,-1,-1,0,7,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,5,-1,-1,-1,4,6,1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,6,-1,-1,0,6,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,1,-1,-1,-1,0,0,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,3,-1,-1,0,6,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,0,1,-1,-1,0,6,-1,-1,-1,0,0,3,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,3,-1,-1,-1,4,5,1,-1,-1,0,0,3,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,0,3,-1,-1,6,7,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,6,3,-1,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest348() {
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,8,-1,-1,-1,-1,0,0,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,6,-1,-1,0,7,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,1,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,0,1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,0,3,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,0,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,7,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,6,-1,-1,0,0,3,-1,-1,6,7,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,0,0,3,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,3,0,-1,-1,-1,4,0,1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,0,3,-1,-1,6,7,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,6,3,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,4,3,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,0,4,1,-1,-1,5,0,1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,2,-1,-1,-1,-1,0,0,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,0,3,-1,-1,6,7,3,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest349() {
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,0,-1,-1,-1,0,0,3,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,4,7,1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,4,0,1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,0,-1,-1,0,6,3,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,1,-1,-1,-1,4,5,1,-1,-1,0,0,3,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,4,6,1,-1,-1,0,7,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,2,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,0,3,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,0,0,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,4,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,0,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,0,0,3,-1,-1,6,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,0,1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,0,3,-1,-1,4,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,6,3,-1,-1,7,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,6,3,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,3,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,6,-1,-1,-1,0,0,3,-1,-1,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,4,5,1,-1,-1,0,0,3,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,4,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,4,0,1,-1,-1,0,0,3,-1,-1,-1,-1,-1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest350() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,7,-1,-1,-1,7,0,3,-1,-1,0,8,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,6,1,-1,-1,4,7,1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,0,-1,-1,-1,5,6,3,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,3,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,8,-1,-1,-1,-1,0,0,3,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,5,-1,-1,-1,7,0,3,-1,-1,8,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,2,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,0,7,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,0,6,3,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,4,1,-1,-1,0,0,-1,-1,-1,6,0,3,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,0,3,-1,-1,6,0,3,-1,-1,4,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,5,6,0,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,8,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,0,7,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,0,0,3,-1,-1,6,0,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,3,-1,-1,-1,4,5,1,-1,-1,0,0,3,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,3,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,0,0,3,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,0,3,-1,-1,7,8,5,-1,-1,0,0,4,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,0,0,-1,-1,-1,7,0,3,-1,-1,0,8,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,5,-1,-1,-1,0,7,3,-1,-1,8,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,3,-1,-1,4,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest351() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,7,-1,-1,-1,-1,0,0,4,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,6,-1,-1,7,6,3,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,3,-1,-1,-1,7,0,3,-1,-1,0,8,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,5,-1,-1,-1,6,4,1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,7,0,3,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,6,-1,-1,6,0,3,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,2,-1,-1,-1,5,6,3,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,0,-1,-1,6,0,3,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,6,-1,-1,7,8,3,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,1,-1,-1,-1,5,6,3,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,7,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,2,-1,-1,-1,7,0,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,3,-1,-1,8,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,5,-1,-1,-1,6,4,1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,7,8,3,-1,-1,0,0,6,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,7,3,-1,-1,8,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,2,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,0,3,-1,-1,7,0,-1,-1,-1,0,0,4,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,3,-1,-1,8,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,7,-1,-1,-1,7,0,3,-1,-1,8,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,0,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,6,0,-1,-1,-1,7,0,3,-1,-1,8,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,6,-1,-1,6,0,3,-1,-1,0,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,0,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,7,0,3,-1,-1,0,8,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest352() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,7,3,-1,-1,8,8,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,6,-1,-1,7,0,3,-1,-1,8,6,3,-1,-1,-1,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,0,3,-1,-1,7,0,8,-1,-1,0,0,4,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,1,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,7,8,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,5,-1,-1,-1,6,7,1,-1,-1,0,0,6,-1,-1,-1,-1,-1,-1,-1,4,8,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,0,-1,-1,6,7,3,-1,-1,0,8,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,7,3,-1,-1,8,0,4,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,0,3,-1,-1,7,8,-1,-1,-1,0,0,4,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,0,3,-1,-1,7,3,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,8,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,5,-1,-1,-1,4,6,1,-1,-1,7,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,7,3,-1,-1,8,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,3,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,7,3,-1,-1,8,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,0,-1,-1,6,7,3,-1,-1,8,0,3,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,0,0,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,5,6,1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,4,1,-1,-1,6,0,-1,-1,-1,7,8,3,-1,-1,-1,-1,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,0,3,-1,-1,7,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest353() {
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,5,0,-1,-1,-1,6,4,1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,8,0,3,-1,-1,-1,-1,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,8,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,0,3,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,7,-1,-1,-1,-1,8,7,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,5,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,3,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,8,0,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,0,3,-1,-1,7,6,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,0,3,-1,-1,7,0,3,-1,-1,0,0,4,-1,-1,1,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,4,5,1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,0,2,-1,-1,-1,8,0,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,4,-1,-1,-1,7,0,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,0,-1,-1,-1,-1,7,8,3,-1,-1,0,0,-1,-1,-1,0,0,5,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,-1,4,-1,-1,-1,5,6,1,-1,-1,-1,-1,-1,-1,-1,7,0,3,-1,-1,8,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,5,2,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,1,-1,-1,-1,7,0,3,-1,-1,8,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,7,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,7,-1,-1,-1,-1,0,0,4,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,6,-1,-1,7,6,3,-1,-1,8,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,1,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,0,7,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,0,3,-1,-1,7,8,3,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,0,3,-1,-1,0,4,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,7,-1,-1,-1,-1,0,0,4,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest354() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,3,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,2,-1,-1,4,5,-1,-1,-1,6,7,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,0,3,-1,-1,0,0,-1,-1,-1,0,0,6,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,0,4,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,0,5,1,-1,-1,4,6,1,-1,-1,7,0,3,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,5,6,7,-1,-1,0,0,4,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,0,2,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,3,-1,-1,-1,5,0,3,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,1,-1,-1,5,6,1,-1,-1,0,4,-1,-1,-1,7,0,3,-1,-1,8,0,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,8,0,3,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,4,-1,-1,-1,0,-1,-1,-1,4,5,1,-1,-1,6,7,3,-1,-1,8,0,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,4,-1,-1,-1,5,6,1,-1,-1,2,-1,-1,-1,-1,7,0,3,-1,-1,0,8,-1,-1,-1,0,0,5,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,7,3,-1,-1,8,0,5,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,0,0,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,3,-1,-1,6,7,3,-1,-1,8,-1,-1,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,-1,-1,-1,-1,-1,3,-1,-1,-1,4,-1,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,1,-1,-1,6,0,3,-1,-1,7,-1,-1,-1,-1,0,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,-1,6,7,3,-1,-1,8,0,3,-1,-1,0,0,4,-1,-1,0,0,-1,-1,-1,6,0,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest355() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,0,6,-1,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,0,6,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,6,7,-1,-1,-1,0,0,-1,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,6,7,-1,-1,-1,0,0,-1,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,6,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,6,7,-1,-1,-1,0,0,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,0,6,-1,-1,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,6,7,-1,-1,-1,0,0,-1,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,6,7,-1,-1,-1,0,0,-1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,6,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,6,-1,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,6,7,-1,-1,-1,0,0,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,6,7,-1,-1,-1,0,0,-1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,6,7,-1,-1,-1,0,0,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,6,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,6,7,-1,-1,-1,0,0,-1,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,6,7,-1,-1,-1,0,0,-1,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,6,7,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,6,7,-1,-1,-1,0,0,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,6,7,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest356() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,0,6,-1,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,6,5,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,6,-1,-1,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,0,6,-1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,6,7,-1,-1,-1,0,0,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,6,7,-1,-1,-1,0,0,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,6,-1,-1,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,6,7,-1,-1,-1,0,0,-1,-1,-1,0,5,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,0,6,-1,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,6,-1,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,6,7,-1,-1,-1,0,0,-1,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,6,3,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,6,7,-1,-1,-1,0,0,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,0,6,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,0,6,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,6,7,-1,-1,-1,0,0,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest357() {
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,0,6,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,7,8,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,6,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,0,6,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,6,-1,-1,-1,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,0,6,-1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,7,8,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,3,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,7,8,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,0,6,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,6,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,6,2,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,6,-1,-1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,7,3,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,6,-1,-1,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,6,6,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,7,8,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,7,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,6,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest358() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,0,5,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,7,8,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,7,8,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,5,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,7,8,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,7,4,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,7,8,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,5,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,7,8,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,2,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,7,8,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,7,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,7,8,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,4,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,7,8,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,6,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,7,8,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,4,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,7,8,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,3,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,7,6,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,7,8,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,7,8,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,8,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,7,8,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest359() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,5,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,7,0,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,7,7,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,7,8,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,2,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,7,1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,7,8,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,8,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest360() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,-1,-1,-1,-1,0,5,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,7,2,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,0,1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,7,5,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,-1,-1,-1,-1,0,5,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest361() {
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,-1,-1,-1,-1,5,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,7,8,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,0,6,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,5,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,3,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,-1,-1,-1,-1,0,5,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,-1,-1,-1,-1,0,5,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,0,5,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,7,8,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,5,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,2,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,-1,-1,-1,-1,5,-1,-1,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,0,3,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,7,3,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,-1,-1,-1,-1,0,5,-1,-1,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,-1,-1,-1,-1,0,5,-1,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest362() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,7,8,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,6,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,7,8,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,7,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,7,8,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,7,8,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,7,8,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,2,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,7,8,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,3,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,7,4,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,7,8,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,7,8,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,6,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,7,8,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,2,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,7,8,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,4,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,7,8,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,4,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,7,8,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,8,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,7,8,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,5,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,7,8,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,3,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,7,8,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,7,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest363() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,7,8,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,7,1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,7,7,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,7,0,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,4,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,7,8,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,8,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,7,6,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest364() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,5,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,-1,-1,-1,-1,5,6,-1,-1,-1,0,0,-1,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,7,-1,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,0,5,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,0,4,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,8,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest365() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,7,-1,-1,-1,8,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,7,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,7,-1,-1,-1,8,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,7,-1,-1,-1,8,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,8,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,7,-1,-1,-1,8,1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,7,-1,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,5,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,7,-1,-1,-1,8,5,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,7,-1,-1,-1,8,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,7,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,7,-1,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,5,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,7,-1,-1,-1,8,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,7,-1,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,8,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,7,-1,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,3,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,7,-1,-1,-1,8,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,3,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,7,-1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,7,-1,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,7,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,7,-1,-1,-1,8,4,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,7,-1,-1,-1,8,3,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,7,-1,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,6,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,7,-1,-1,-1,8,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,2,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,7,-1,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,6,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,7,-1,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,2,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest366() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,7,-1,-1,-1,8,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,4,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,7,-1,-1,-1,8,6,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,7,-1,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,7,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,7,-1,-1,-1,8,0,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,7,-1,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,3,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,7,-1,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,4,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,7,-1,-1,-1,8,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,8,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,7,-1,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,8,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,7,-1,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,7,-1,-1,-1,8,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,6,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,7,-1,-1,-1,8,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,3,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,7,-1,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,7,-1,-1,-1,8,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,7,-1,-1,-1,8,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,6,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,7,-1,-1,-1,8,7,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,7,-1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,7,-1,-1,-1,8,8,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,7,-1,-1,-1,8,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,5,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,7,-1,-1,-1,8,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,4,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,7,-1,-1,-1,8,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,2,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest367() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,7,-1,-1,-1,8,2,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,3,-1,-1,-1,5,6,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,7,-1,-1,-1,0,2,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,7,-1,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,2,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,7,-1,-1,-1,0,1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,7,-1,-1,-1,8,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,5,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,7,-1,-1,-1,8,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,7,-1,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,4,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,7,-1,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,7,-1,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,7,-1,-1,-1,8,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,7,-1,-1,-1,2,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,7,-1,-1,-1,0,6,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,7,-1,-1,-1,0,8,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,7,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,7,-1,-1,-1,0,3,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,7,-1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,7,-1,-1,-1,0,4,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,-1,-1,-1,-1,5,6,-1,-1,-1,0,0,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,7,-1,-1,-1,0,5,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest368() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,7,-1,-1,-1,5,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,-1,-1,-1,-1,5,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,0,5,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,1,-1,-1,-1,5,6,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,-1,-1,-1,-1,5,6,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,7,-1,-1,-1,-1,0,0,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,7,2,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,2,-1,-1,-1,5,6,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,-1,-1,-1,-1,5,6,-1,-1,-1,0,0,-1,-1,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,7,-1,-1,-1,1,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,3,-1,-1,-1,5,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,0,1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,7,-1,-1,-1,3,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,7,-1,-1,-1,4,-1,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,7,5,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,0,7,-1,-1,-1,0,0,-1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,0,2,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,7,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest369() {
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,-1,-1,-1,-1,5,6,-1,-1,-1,0,0,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,-1,-1,-1,-1,5,6,-1,-1,-1,0,0,-1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,-1,-1,-1,-1,5,-1,-1,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,6,4,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,6,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,6,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,-1,-1,-1,-1,5,6,-1,-1,-1,0,0,-1,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,6,1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,-1,-1,-1,-1,5,6,-1,-1,-1,0,0,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,5,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,-1,-1,-1,-1,5,4,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,-1,-1,-1,-1,5,6,-1,-1,-1,0,0,-1,-1,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,3,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,-1,-1,-1,-1,5,6,-1,-1,-1,0,0,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,-1,-1,-1,-1,5,6,-1,-1,-1,0,0,-1,-1,-1,0,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,5,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest370() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,5,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,0,3,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,5,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,2,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,4,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,-1,-1,-1,-1,5,-1,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,-1,-1,-1,-1,5,6,-1,-1,-1,0,0,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,6,-1,-1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,-1,-1,-1,-1,0,5,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,-1,-1,-1,-1,5,6,-1,-1,-1,0,0,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,4,-1,-1,-1,5,6,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,0,-1,-1,-1,5,6,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,6,-1,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,0,4,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,5,6,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,3,-1,-1,-1,0,5,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,0,6,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,-1,-1,-1,-1,5,6,-1,-1,-1,0,0,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest371() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,0,6,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,-1,-1,-1,-1,5,-1,-1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,0,6,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,-1,-1,-1,-1,5,6,-1,-1,-1,0,0,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,-1,-1,-1,-1,5,-1,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,-1,-1,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,-1,-1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,6,-1,-1,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,0,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,-1,-1,-1,-1,5,6,-1,-1,-1,0,0,-1,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,6,-1,-1,-1,0,2,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,-1,-1,-1,-1,5,6,-1,-1,-1,0,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,6,0,-1,-1,-1,0,6,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,0,6,-1,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,2,-1,-1,-1,0,5,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,-1,-1,-1,-1,5,-1,-1,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,0,-1,-1,-1,0,5,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

        @Test
        public void TreeMapSolverTest372() {
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,-1,-1,-1,-1,5,5,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,-1,-1,-1,-1,0,5,-1,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,-1,-1,-1,-1,5,2,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,-1,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,-1,-1,-1,-1,0,5,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,4,-1,-1,-1,5,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,4,-1,-1,-1,0,5,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,-1,-1,-1,-1,5,1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,-1,-1,-1,-1,5,-1,-1,-1,-1,0,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,2,-1,-1,-1,5,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,-1,-1,-1,-1,0,5,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,-1,-1,-1,-1,5,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,-1,-1,-1,-1,5,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,-1,-1,-1,-1,5,3,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(true, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,0,4,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,0,-1,-1,-1,5,0,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat.isSatisfiable(
                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,-1,-1,-1,-1,0,5,-1,-1,-1,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
                assertEquals(false, symKorat
                                .isSatisfiable(
                                                "1,-1,-1,2,3,-1,-1,-1,0,0,-1,-1,-1,4,5,-1,-1,-1,0,0,-1,-1,-1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1"));
        }

}
